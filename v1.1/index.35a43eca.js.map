{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/has.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/GeoJSON.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/control/MousePosition.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/Overlay.js","node_modules/ol/src/control/OverviewMap.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/interaction/Select.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/webgl.js","node_modules/ol/src/webgl/Buffer.js","node_modules/ol/src/webgl/ContextEventType.js","node_modules/ol/src/webgl/PostProcessingPass.js","node_modules/ol/src/vec/mat4.js","node_modules/ol/src/webgl/Helper.js","node_modules/ol/src/renderer/webgl/Layer.js","node_modules/ol/src/webgl/RenderTarget.js","node_modules/ol/src/worker/webgl.js","node_modules/ol/src/renderer/webgl/PointsLayer.js","node_modules/ol/src/layer/Heatmap.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string|boolean} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space\n * is rendered when the mouse leaves the viewport.  To render something else, provide a string\n * to be used as the text content (e.g. 'no position' or '' for an empty string).  Set the placeholder\n * to `false` to retain the last position when the mouse leaves the viewport.  In a future release, this\n * will be the default behavior.\n * @property {string} [undefinedHTML='&#160;'] This option is deprecated.  Use the `placeholder` option instead.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [opt_options] Mouse position options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * Change this to `false` when removing the deprecated `undefinedHTML` option.\n     * @type {boolean}\n     */\n    let renderOnMouseOut = true;\n\n    /**\n     * @type {string}\n     */\n    let placeholder = '&#160;';\n\n    if ('undefinedHTML' in options) {\n      // deprecated behavior\n      if (options.undefinedHTML !== undefined) {\n        placeholder = options.undefinedHTML;\n      }\n      renderOnMouseOut = !!placeholder;\n    } else if ('placeholder' in options) {\n      if (options.placeholder === false) {\n        renderOnMouseOut = false;\n      } else {\n        placeholder = String(options.placeholder);\n      }\n    }\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = placeholder;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = renderOnMouseOut;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (\n      this.get(Property.MAP)\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/control/OverviewMap\n */\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport PluggableMap from '../PluggableMap.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\nclass ControlledMap extends PluggableMap {\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [opt_options] OverviewMap options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    /**\n     * @type {ControlledMap}\n     * @private\n     */\n    this.ovmap_ = new ControlledMap({\n      view: options.view,\n    });\n    const ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.CENTER_CENTER,\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend, includes} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    const deselected = [];\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if (\n              (remove || toggle) &&\n              includes(features.getArray(), feature)\n            ) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(\n    styles[GeometryType.GEOMETRY_COLLECTION],\n    styles[GeometryType.LINE_STRING]\n  );\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [opt_attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER} from '../webgl.js';\nimport {DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [opt_usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, opt_usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    const arrayClass = getArrayClassForType(this.type);\n    this.array = arrayClass.from\n      ? arrayClass.from(array)\n      : new arrayClass(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord);\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach(\n        function (name) {\n          this.uniforms_.push({\n            value: options.uniforms[name],\n            location: gl.getUniformLocation(this.renderTargetProgram_, name),\n          });\n        }.bind(this)\n      );\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @api\n   */\n  apply(frameState, nextPass) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    // render the frame buffer to the canvas\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    this.applyUniforms(frameState);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n    const options = opt_options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = document.createElement('canvas');\n    this.canvas_.style.position = 'absolute';\n    this.canvas_.style.left = '0';\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n    const gl = this.getGL();\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      for (const name in options.uniforms) {\n        this.uniforms_.push({\n          name: name,\n          value: options.uniforms[name],\n        });\n      }\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    const extension = this.gl_.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n    delete this.gl_;\n    delete this.canvas_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   * @api\n   */\n  prepareDraw(frameState, opt_disableAlphaBlend) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    gl.useProgram(this.currentProgram_);\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(\n      gl.ONE,\n      opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, opt_disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(\n      gl.ONE,\n      opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   * @api\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  finalizeDraw(frameState) {\n    // apply post processes using the next one as target\n    for (let i = 0; i < this.postProcessPasses_.length; i++) {\n      this.postProcessPasses_[i].apply(\n        frameState,\n        this.postProcessPasses_[i + 1] || null\n      );\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   * @api\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach(\n      function (uniform) {\n        value =\n          typeof uniform.value === 'function'\n            ? uniform.value(frameState)\n            : uniform.value;\n\n        // apply value based on type\n        if (\n          value instanceof HTMLCanvasElement ||\n          value instanceof HTMLImageElement ||\n          value instanceof ImageData\n        ) {\n          // create a texture & put data\n          if (!uniform.texture) {\n            uniform.prevValue = undefined;\n            uniform.texture = gl.createTexture();\n          }\n          gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n          gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n          const imageReady =\n            !(value instanceof HTMLImageElement) ||\n            /** @type {HTMLImageElement} */ (value).complete;\n          if (imageReady && uniform.prevValue !== value) {\n            uniform.prevValue = value;\n            gl.texImage2D(\n              gl.TEXTURE_2D,\n              0,\n              gl.RGBA,\n              gl.RGBA,\n              gl.UNSIGNED_BYTE,\n              value\n            );\n          }\n\n          // fill texture slots by increasing index\n          gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n        } else if (Array.isArray(value) && value.length === 6) {\n          this.setUniformMatrixValue(\n            uniform.name,\n            fromTransform(this.tmpMat4_, value)\n          );\n        } else if (Array.isArray(value) && value.length <= 4) {\n          switch (value.length) {\n            case 2:\n              gl.uniform2f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1]\n              );\n              return;\n            case 3:\n              gl.uniform3f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2]\n              );\n              return;\n            case 4:\n              gl.uniform4f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2],\n                value[3]\n              );\n              return;\n            default:\n              return;\n          }\n        } else if (typeof value === 'number') {\n          gl.uniform1f(this.getUniformLocation(uniform.name), value);\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  useProgram(program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      const gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      this.uniformLocations_ = {};\n      this.attribLocations_ = {};\n      return true;\n    }\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   * @api\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compliation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   * @api\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   * @api\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   * @api\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   * @api\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   * @api\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   * @api\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   * @api\n   */\n  createTexture(size, opt_data, opt_texture) {\n    const gl = this.getGL();\n    const texture = opt_texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (opt_data) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        format,\n        type,\n        opt_data\n      );\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_BUFFERS: 'GENERATE_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(layer, opt_options) {\n    super(layer);\n\n    const options = opt_options || {};\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper = new WebGLHelper({\n      postProcesses: options.postProcesses,\n      uniforms: options.uniforms,\n    });\n\n    if (options.className !== undefined) {\n      this.helper.getCanvas().className = options.className;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.helper.dispose();\n    delete this.helper;\n\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      // RenderEvent does not get a context or an inversePixelTransform, because WebGL allows much less direct editing than Canvas2d does.\n      const event = new RenderEvent(type, null, frameState, null);\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, frameState);\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, frameState);\n  }\n}\n\nconst tmpArray_ = [];\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n  const array = opt_array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, opt_size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = opt_size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","\n        const source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\n        const blob = new Blob([source], {type: 'application/javascript'});\n        const url = URL.createObjectURL(blob);\n        export function create() {\n          return new Worker(url);\n        }\n      \n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer, {\n  WebGLWorkerMessageType,\n  colorDecodeId,\n  colorEncodeId,\n} from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      className: options.className,\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    this.program_ = this.helper.getProgram(\n      options.fragmentShader,\n      options.vertexShader\n    );\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    this.hitProgram_ =\n      this.hitDetectionEnabled_ &&\n      this.helper.getProgram(\n        options.hitFragmentShader,\n        options.hitVertexShader\n      );\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_ =\n      this.hitDetectionEnabled_ && new WebGLRenderTarget(this.helper);\n\n    this.worker_ = createWebGLWorker();\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       * @this {WebGLPointsLayerRenderer}\n       */\n      function (event) {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          }\n\n          this.getLayer().changed();\n        }\n      }.bind(this)\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature(\n      function (feature) {\n        this.featureCache_[getUid(feature)] = {\n          feature: feature,\n          properties: feature.getProperties(),\n          geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.preRender(frameState);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n    this.helper.finalizeDraw(frameState);\n    const canvas = this.helper.getCanvas();\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = String(opacity);\n    }\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    // apply the current projection transform with the invert of the one used to fill buffers\n    this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n    multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n\n    this.helper.useProgram(this.program_);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== GeometryType.POINT) {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState current frame state\n   */\n  renderHitDetection(frameState) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/layer/Heatmap\n */\nimport VectorLayer from './Vector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Heatmap extends VectorLayer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {WebGLPointsLayerRenderer} A layer renderer.\n   */\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: function (feature) {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          }.bind(this),\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: function () {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        }.bind(this),\n        u_blurSlope: function () {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        }.bind(this),\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: function () {\n              return this.gradient_;\n            }.bind(this),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","import GeoJSON from 'ol/format/GeoJSON';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport KML from 'ol/format/KML';\r\nimport {\r\n  DragBox,\r\n  Select\r\n} from 'ol/interaction';\r\nimport {\r\n  OSM,\r\n  Stamen,\r\n  Vector as VectorSource\r\n} from 'ol/source';\r\nimport {\r\n  Tile as TileLayer,\r\n  Vector as VectorLayer,\r\n  Heatmap as HeatmapLayer\r\n} from 'ol/layer';\r\nimport {\r\n  platformModifierKeyOnly\r\n} from 'ol/events/condition';\r\nimport {\r\n  Style,\r\n  Stroke,\r\n  Fill\r\n} from 'ol/style';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport {\r\n  getBottomLeft,\r\n  getTopRight\r\n} from 'ol/extent';\r\nimport {\r\n  toLonLat\r\n} from 'ol/proj';\r\n// minimap additions\r\nimport {\r\n  DragRotateAndZoom,\r\n  defaults as defaultInteractions,\r\n} from 'ol/interaction';\r\nimport {\r\n  OverviewMap,\r\n  defaults as defaultControls,\r\n  MousePosition\r\n} from 'ol/control';\r\n\r\n\r\nconst vectorSource1 = new VectorSource({\r\n  url: 'https://raw.githubusercontent.com/singhskt/geojson-data/main/data001.geojson',\r\n  format: new GeoJSON()\r\n});\r\n\r\nconst vectorSource2 = new VectorSource({\r\n  url: 'https://raw.githubusercontent.com/singhskt/geojson-data/main/data002.geojson',\r\n  format: new GeoJSON()\r\n});\r\n\r\nconst vectorSource3 = new VectorSource({\r\n  url: 'https://raw.githubusercontent.com/singhskt/geojson-data/main/data003.geojson',\r\n  format: new GeoJSON()\r\n});\r\n\r\n\r\nconst vectorSource4 = new VectorSource({\r\n  url: '',\r\n  format: new GeoJSON()\r\n});\r\n\r\n\r\n\r\nconst vectorLayer = new VectorLayer({\r\n  source: vectorSource3,\r\n});\r\n\r\nvar url3 = 'https://api.digitalslidearchive.org/api/v1/item/5b9ef9c8e62914002e94771e/tiles/zxy/{z}/{x}/{y}?edge=crop'\r\nconst map = new Map({\r\n  layers: [\r\n    new TileLayer({\r\n      source: new XYZ({\r\n        url: url3,\r\n      }),\r\n    }),\r\n    vectorLayer,\r\n  ],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [-800000, 12800000],\r\n    zoom: 2,\r\n    constrainRotation: 16,\r\n  }),\r\n});\r\n\r\n// a normal select interaction to handle click\r\nconst select = new Select();\r\nmap.addInteraction(select);\r\n\r\nconst selectedFeatures = select.getFeatures();\r\n\r\n// a DragBox interaction used to select features by drawing boxes\r\nconst dragBox = new DragBox({\r\n  condition: platformModifierKeyOnly,\r\n});\r\n\r\nmap.addInteraction(dragBox);\r\n\r\ndragBox.on('boxend', function () {\r\n  // features that intersect the box geometry are added to the\r\n  // collection of selected features\r\n\r\n  // if the view is not obliquely rotated the box geometry and\r\n  // its extent are equalivalent so intersecting features can\r\n  // be added directly to the collection\r\n  const rotation = map.getView().getRotation();\r\n  const oblique = rotation % (Math.PI / 2) !== 0;\r\n  const candidateFeatures = oblique ? [] : selectedFeatures;\r\n  const extent = dragBox.getGeometry().getExtent();\r\n  vectorSource.forEachFeatureIntersectingExtent(extent, function (feature) {\r\n    candidateFeatures.push(feature);\r\n  });\r\n\r\n  // when the view is obliquely rotated the box extent will\r\n  // exceed its geometry so both the box and the candidate\r\n  // feature geometries are rotated around a common anchor\r\n  // to confirm that, with the box geometry aligned with its\r\n  // extent, the geometries intersect\r\n  if (oblique) {\r\n    const anchor = [0, 0];\r\n    const geometry = dragBox.getGeometry().clone();\r\n    geometry.rotate(-rotation, anchor);\r\n    const extent = geometry.getExtent();\r\n    candidateFeatures.forEach(function (feature) {\r\n      const geometry = feature.getGeometry().clone();\r\n      geometry.rotate(-rotation, anchor);\r\n      if (geometry.intersectsExtent(extent)) {\r\n        selectedFeatures.push(feature);\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n// clear selection when drawing a new box and when clicking on the map\r\ndragBox.on('boxstart', function () {\r\n  selectedFeatures.clear();\r\n});\r\n\r\nconst infoBox = document.getElementById('info');\r\n\r\n\r\n\r\nselectedFeatures.on(['add', 'remove'], function () {\r\n  const names = selectedFeatures.getArray().map(function (feature) {\r\n    document.getElementById(\"cname\").value = feature.get('name');\r\n    document.getElementById(\"ccustom\").value = feature.get('custom');\r\n    return JSON.stringify({\r\n      name: feature.get('name'),\r\n      id: feature.id_,\r\n      custom: feature.get('custom'),\r\n    });\r\n  });\r\n  if (names.length > 0) {\r\n    infoBox.innerHTML = names.join(', ');\r\n  } else {\r\n    infoBox.innerHTML = 'No polgon selected';\r\n  }\r\n});\r\nvar form = document.getElementById(\"testForm\")\r\nconsole.log(form);\r\nform.addEventListener('submit', function (e) {\r\n  e.preventDefault();\r\n  var feature = selectedFeatures.getArray()[0];\r\n  feature.setProperties({\r\n    name: document.getElementById(\"cname\").value,\r\n    custom: document.getElementById(\"ccustom\").value\r\n  })\r\n  var color = document.getElementById(\"color\").value;\r\n  if (color != '') {\r\n    var style = new Style({\r\n      stroke: new Stroke({\r\n        color: color\r\n      }),\r\n    });\r\n\r\n    feature.setStyle(style);\r\n\r\n\r\n  }\r\n  console.log(feature);\r\n  return false;\r\n})\r\n\r\nvar currZoom = map.getView().getZoom();\r\n\r\nfunction wrapLon(value) {\r\n  const worlds = Math.floor((value + 180) / 360);\r\n  return value - worlds * 360;\r\n}\r\n// map.on('moveend', function (e) {\r\n\r\n//   // this code section is to demonstrate rendering of polygons \r\n//   // based on zoom level\r\n\r\n//   var newZoom = map.getView().getZoom();\r\n//   if (currZoom != newZoom) {\r\n//     // console.log('zoom end, new zoom: ' + newZoom);\r\n//     currZoom = newZoom;\r\n//     if (currZoom <= 3) {\r\n//       // console.log('Vector soruce 1');\r\n\r\n//       vectorLayer.setSource(vectorSource1);\r\n//     } else {\r\n//       // console.log('Vector soruce 2');\r\n//       vectorLayer.setSource(vectorSource2);\r\n//     }\r\n//   } else {\r\n//     // const map = e.map;\r\n//     const extent = map.getView().calculateExtent(map.getSize());\r\n//     const bottomLeft = toLonLat(getBottomLeft(extent));\r\n//     const topRight = toLonLat(getTopRight(extent));\r\n//     console.log('left', wrapLon(bottomLeft[0]));\r\n//     console.log('bottom', bottomLeft[1]);\r\n//     console.log('right', wrapLon(topRight[0]));\r\n//     console.log('top', topRight[1]);\r\n\r\n\r\n//     // uncomment this code section to demonstrate rendering of polygons \r\n//     // based on current viewport\r\n\r\n//     if (bottomLeft[1] > 45) {\r\n//       vectorLayer.setSource(vectorSource4);\r\n//     } else {\r\n//       vectorLayer.setSource(vectorSource3);\r\n//     }\r\n//   }\r\n\r\n\r\n// });\r\n\r\nvar zoom1 = document.getElementById(\"zoom1\")\r\nzoom1.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  map.getView().setZoom(1);\r\n  return false;\r\n});\r\n\r\nvar zoom2 = document.getElementById(\"zoom2\")\r\nzoom2.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  map.getView().setZoom(2);\r\n  return false;\r\n});\r\n\r\n\r\nvar zoom3 = document.getElementById(\"zoom3\")\r\nzoom3.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  map.getView().setZoom(3);\r\n  return false;\r\n});\r\n\r\nvar zoom5 = document.getElementById(\"zoom5\")\r\nzoom5.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  map.getView().setZoom(5);\r\n  return false;\r\n});\r\n\r\nvar zoom10 = document.getElementById(\"zoom10\")\r\nzoom10.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  map.getView().setZoom(10);\r\n  return false;\r\n});\r\n\r\n\r\n//minimap\r\n// failed attempt using ol-ext\r\n// var layers2 = [\r\n//   new TileLayer({\tsource: new ol.source.OSM()\t}),\r\n//   new TileLayer({\r\n//     source: new Stamen({\r\n//     layer: 'toner'\r\n//     })\r\n//   })\r\n// ];\r\n\r\n// overview1 = document.getElementById(\"overview\")\r\n// var ov2 = Overview({\r\n//   target: overview1,\r\n//   layers: layers2,\r\n//   // minZoom: $(\"#minzoom\").val(),\r\n//   // maxZoom: $(\"#maxzoom\").val(),\r\n//   // rotation: $(\"#rotate\").prop(\"checked\"),\r\n//   style: [new Style({\r\n//     image: new Circle({\r\n//       fill: new Fill({\r\n//         color: 'rgba(0,255,102, 1)'\r\n//       }),\r\n//       stroke: new Stroke({\r\n//         width: 7,\r\n//         color: 'rgba(0,255,102, 0.8)'\r\n//       }),\r\n//       radius: 5\r\n//     }),\r\n//     stroke: new Stroke({\r\n//       width: 3,\r\n//       color: \"rgba(0,255,102,1)\",\r\n//       lineDash: [5, 5]\r\n//     })\r\n//   })]\r\n// });\r\n// map.addControl(ov2);\r\n\r\n\r\n// minimap \r\n// // attept 2\r\nvar external_panel = new MousePosition({\r\n\r\n  target: document.getElementById('overview') });\r\n\r\nmap.addControl(external_panel);\r\n\r\nvar overview_map=new OverviewMap({\r\n  target:document.querySelector('#overview'),\r\n  layers: [\r\n    new TileLayer({\r\n      source: new XYZ({\r\n        url: url3,\r\n      }),\r\n    })\r\n  ]\r\n});\r\nmap.addControl(overview_map);\r\n\r\n\r\nvar heatmap_data = {\r\n  type: \"FeatureCollection\",\r\n  features: [\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [2362019,15064588]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 111, name: \"sample 1\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [2362029,15064578]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 222, name: \"sample 2\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [2362129,15064678]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 333, name: \"sample 3\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [ 2361129,15065678]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 444, name: \"sample 4\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [2351129,15165678]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 555, name: \"sample 5\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [1351129,12165678]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 666, name: \"sample 6\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [1359129,12265678]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 777, name: \"sample 7\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [1259129,11265678]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 888, name: \"sample 8\" }\r\n    }\r\n  ]\r\n};\r\nvar heatfeature = new VectorSource({\r\n  features: new GeoJSON().readFeatures(heatmap_data, {\r\n    dataProjection: \"EPSG:32643\",\r\n    featureProjection: \"EPSG:32643\"\r\n  })\r\n});\r\n\r\nvar blur = 20;\r\nvar radius = 10;\r\n\r\nvar heatmaplayer = new HeatmapLayer({\r\n  title: \"HeatMap\",\r\n  source: heatfeature,\r\n  blur: blur,\r\n  radius: radius,\r\n  weight: function (feature) {\r\n    return 10;\r\n  }\r\n});\r\nmap.addLayer(heatmaplayer);\r\n\r\n\r\nmap.on('moveend', function (e) {\r\n\r\n  // this code section is to demonstrate rendering of polygons \r\n  // based on zoom level\r\n\r\n  var newZoom = map.getView().getZoom();\r\n  if (currZoom != newZoom) {\r\n    // console.log('zoom end, new zoom: ' + newZoom);\r\n    currZoom = newZoom;\r\n    if (currZoom <= 3) {\r\n      // console.log('Vector soruce 1');\r\n\r\n      vectorLayer.setSource(vectorSource1);\r\n      map.addLayer(heatmaplayer);\r\n\r\n      \r\n    } else {\r\n      // console.log('Vector soruce 2');  \r\n      map.removeLayer(heatmaplayer);\r\n      vectorLayer.setSource(vectorSource2);\r\n    }\r\n  } \r\n  // else {\r\n  //   // const map = e.map;\r\n  //   const extent = map.getView().calculateExtent(map.getSize());\r\n  //   const bottomLeft = toLonLat(getBottomLeft(extent));\r\n  //   const topRight = toLonLat(getTopRight(extent));\r\n  //   console.log('left', wrapLon(bottomLeft[0]));\r\n  //   console.log('bottom', bottomLeft[1]);\r\n  //   console.log('right', wrapLon(topRight[0]));\r\n  //   console.log('top', topRight[1]);\r\n\r\n  //   if (bottomLeft[1] > 45) {\r\n  //     vectorLayer.setSource(vectorSource4);\r\n  //   } else {\r\n  //     vectorLayer.setSource(vectorSource3);\r\n  //   }\r\n  // }\r\n});\r\n\r\nvar test=\"new\";\r\nconsole.log(test);"],"names":["$bfb325515b9276ea$export$2e2bcd8739ae039","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$f358d43ca6343f5a$export$2e2bcd8739ae039","$94e5a088ba5c580a$export$2e2bcd8739ae039","Disposable","disposed","dispose","disposeInternal","$ecf9f00034241bb8$export$4e734a3b32fb971b","a","b","$ecf9f00034241bb8$export$ee2e0f811dca1807","arr","obj","indexOf","$ecf9f00034241bb8$export$8a3786cc03fdb777","direction","n","length","i","$ecf9f00034241bb8$export$292cfa960964f0e0","begin","end","tmp","$ecf9f00034241bb8$export$8b58be045bf06082","data","extension","Array","isArray","$ecf9f00034241bb8$export$e9bab7fafb253603","arr1","arr2","len1","$dd44a045aec5c8f5$export$22e23a2304399231","$dd44a045aec5c8f5$export$8f11cee4bdc7e668","$dd44a045aec5c8f5$export$1cd1943b3a73bbe8","$23958c3d66c22f50$export$e6e34fd1f2686227","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$23958c3d66c22f50$export$42ffd38884aecdac","object","property","$23958c3d66c22f50$export$a5c4301012ad6f07","values","push","$23958c3d66c22f50$export$dd1bc94b04021eeb","$9201fa8e97adb715$var$Target","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$9201fa8e97adb715$var$__extends","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$9201fa8e97adb715$export$2e2bcd8739ae039","$7545064017075080$export$2e2bcd8739ae039","$d7f12dd0c706e1ad$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$d7f12dd0c706e1ad$export$8d2a95bc11b44725","$d7f12dd0c706e1ad$export$b0a21c8b3c1c921","$2f178e7c23399543$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$2f178e7c23399543$var$__extends","changed","getRevision","len","ol_key","$2f178e7c23399543$export$b7ef3f8527533384","$9201fa8e97adb715$exports","default","$2f178e7c23399543$export$2e2bcd8739ae039","$95de7f6abc640304$export$817eb92a8194bab0","Error","$95de7f6abc640304$var$uidCounter_","$95de7f6abc640304$export$5e82334337e0f204","ol_uid","String","$9c1351562361fa38$export$cf395d7c4a2d5a17","ObjectEvent","oldValue","$9c1351562361fa38$var$__extends","$9c1351562361fa38$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$2f178e7c23399543$exports","$5b96d07cbe551b3b$export$2e2bcd8739ae039","AssertionError","code","message","split","name","$5b96d07cbe551b3b$var$__extends","$0b488ad6e5bcbff0$export$a7a9523472993e97","assertion","errorCode","$5b96d07cbe551b3b$exports","$5bfa5a5ae8f81a5f$export$bb06ddfd5d66e02e","styles_1","getZIndex","$5bfa5a5ae8f81a5f$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$5bfa5a5ae8f81a5f$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$9c1351562361fa38$exports","$83327f6b8bfbe08e$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$83327f6b8bfbe08e$export$1482081eec883108","Math","PI","$9a68deaf29eb7021$var$transformStringDiv","$83327f6b8bfbe08e$export$2e2bcd8739ae039","$3dcb9b58f2d2e6d8$var$ua","navigator","userAgent","toLowerCase","$3dcb9b58f2d2e6d8$export$8442bdfd18b7b8a6","$3dcb9b58f2d2e6d8$export$39dfd62a25e0fe93","$3dcb9b58f2d2e6d8$export$76c0a3b101d93136","$3dcb9b58f2d2e6d8$export$6b83a0446fc26f94","devicePixelRatio","$3dcb9b58f2d2e6d8$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$3dcb9b58f2d2e6d8$export$716f8695eedb9bad","Image","decode","$3dcb9b58f2d2e6d8$export$f751ce96c6c4e4fc","passive","options","defineProperty","window","error","$9a68deaf29eb7021$var$tmp_","$9a68deaf29eb7021$export$aad8462122ac592b","transform","$9a68deaf29eb7021$export$adaa4cf7ef1b65be","$9a68deaf29eb7021$export$2060d2db72cce88f","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","f","$9a68deaf29eb7021$export$5635d7ef4b8fee1c","coordinate","x","y","$9a68deaf29eb7021$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$9a68deaf29eb7021$export$bd70ea2a93c0fa4","mat","det","$9a68deaf29eb7021$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","$219d82cc9e54c889$export$2e2bcd8739ae039","$44e40d9fa0bd90d3$export$2e2bcd8739ae039","$6e9c2c40baedc4d3$export$8aceca7c77505534","coordinates","extent","$6e9c2c40baedc4d3$export$fe201bb3bbe031e9","$6e9c2c40baedc4d3$export$1f820e3920fa5715","$6e9c2c40baedc4d3$export$ab1029bcae9ddb4a","opt_extent","$6e9c2c40baedc4d3$export$9cd59f9826255e47","slice","$6e9c2c40baedc4d3$export$cbe64c389534206f","dx","dy","$6e9c2c40baedc4d3$export$ac68c24d37ca240f","$6e9c2c40baedc4d3$export$805bdfd6d6690e97","$6e9c2c40baedc4d3$export$be866b1e0809b17e","extent1","extent2","$6e9c2c40baedc4d3$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$6e9c2c40baedc4d3$export$958e3e1a02eac4b6","$6e9c2c40baedc4d3$export$3e2152b047719fa1","$6e9c2c40baedc4d3$export$be0ab0bf96ca59ca","flatCoordinates","offset","stride","$6e9c2c40baedc4d3$export$30570204156ffd18","$6e9c2c40baedc4d3$export$e9bab7fafb253603","$6e9c2c40baedc4d3$export$8b58be045bf06082","$6e9c2c40baedc4d3$export$f1dab130b92b85a9","min","max","$6e9c2c40baedc4d3$export$f9ed8a3d123a08e2","callback","val","$6e9c2c40baedc4d3$export$8d09f5e2e1bf560d","$6e9c2c40baedc4d3$export$e77c1cf70445e168","$6e9c2c40baedc4d3$export$b84fa077c8b05295","$6e9c2c40baedc4d3$export$cb1538b07e6964ff","$6e9c2c40baedc4d3$export$520c40045967cb15","area","$6e9c2c40baedc4d3$export$dd1bc94b04021eeb","$6e9c2c40baedc4d3$export$3c49c185de0c2bfc","$6e9c2c40baedc4d3$export$c08559766941f856","$6e9c2c40baedc4d3$export$c91255cadecfe081","$6e9c2c40baedc4d3$export$a1cfd206661d0801","corner","$6e9c2c40baedc4d3$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6e9c2c40baedc4d3$export$72209efa88586d42","intersection","$6e9c2c40baedc4d3$export$7b0a31e10bbff018","$6e9c2c40baedc4d3$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","xs","ys","l","$6e9c2c40baedc4d3$var$_boundingExtentXYs","$90a7bd645e4710a6$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$ad67a80bd590adc8$export$7d15b64cf5a3a4c4","$ad67a80bd590adc8$export$2e2fd1ad24e4d350","cosh","exp","$ad67a80bd590adc8$export$b9fae0bba9d9094d","log2","log","LOG2E","$ad67a80bd590adc8$export$251bb0a9cef172e6","t","$ad67a80bd590adc8$export$88e6ebb4fe54f538","$ad67a80bd590adc8$export$56cb859c01fa134d","angleInRadians","$ad67a80bd590adc8$export$cba01ba138429a1d","angleInDegrees","$ad67a80bd590adc8$export$ba467bec01d66def","r","$ad67a80bd590adc8$export$3a89f8d6f6bf6c9f","$76a7074f99a96ff9$export$f3928063e5e96d35","$76a7074f99a96ff9$export$21e6da8a7375dfe8","$76a7074f99a96ff9$export$ae9d6ed80df710e5","$76a7074f99a96ff9$export$d26945d1ad52feeb","tan","$76a7074f99a96ff9$var$EPSG3857Projection","EPSG3857Projection","point","$76a7074f99a96ff9$var$__extends","$76a7074f99a96ff9$export$b508d7ad9a891c1b","$76a7074f99a96ff9$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$76a7074f99a96ff9$export$8c71322ec28ed6b4","atan","$a8d3289f17c9fc5c$export$21e6da8a7375dfe8","$a8d3289f17c9fc5c$export$1482081eec883108","$a8d3289f17c9fc5c$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$a8d3289f17c9fc5c$var$__extends","$a8d3289f17c9fc5c$export$b508d7ad9a891c1b","$da40b318d06423c2$var$cache","$179c64d49a01aab2$var$transforms","$179c64d49a01aab2$export$e16d8520af44a096","destination","sourceCode","destinationCode","$c6d6e605b5d26d36$export$2e2bcd8739ae039","$aa1dd99b260effa5$export$79376507b09a66f","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$aa1dd99b260effa5$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$51d823bbdf131cd1$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$51d823bbdf131cd1$export$bb628a54ab399bc9","cosAngle","sinAngle","$51d823bbdf131cd1$export$39a9ce3624977b84","projection","worldWidth","worldsAway","$51d823bbdf131cd1$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$ab024e4d016c6799$export$dd516654c5f598fb","$ab024e4d016c6799$export$83e8ab53904f8022","$ab024e4d016c6799$export$59ae956cd3e343f7","$da40b318d06423c2$export$e16d8520af44a096","$ab024e4d016c6799$export$3988ae62b71be9a3","projectionLike","replace","$ab024e4d016c6799$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$ab024e4d016c6799$export$e3c4995a701c26a3","vertices","$ab024e4d016c6799$export$eeb8392580a05a37","projections","forEach","$ab024e4d016c6799$export$638ad73f7aafb913","$ab024e4d016c6799$export$549167224996a0fb","defaultCode","$ab024e4d016c6799$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$179c64d49a01aab2$export$3988ae62b71be9a3","$ab024e4d016c6799$export$fce0c6cfca85ed96","$ab024e4d016c6799$export$51186ad6e864892a","$ab024e4d016c6799$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$ab024e4d016c6799$var$userProjection","$ab024e4d016c6799$export$3973b77d5f6f2790","$ab024e4d016c6799$export$698f563af1ba02a5","$ab024e4d016c6799$export$d4b8ec0b96db1ee2","destProjection","$ab024e4d016c6799$export$96bfd09e2cffb006","$ab024e4d016c6799$export$494be3a3a25689ca","$ab024e4d016c6799$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$21b6f7621e6152f7$export$b92b2dedcfff79de","opt_dest","dest","j","$21b6f7621e6152f7$export$bb628a54ab399bc9","anchor","anchorX","anchorY","deltaX","deltaY","k","$76a7074f99a96ff9$exports","PROJECTIONS","$a8d3289f17c9fc5c$exports","fromEPSG4326","toEPSG4326","$0afe4f47eb66e15c$var$tmpTransform","$0afe4f47eb66e15c$export$2e2bcd8739ae039","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$0afe4f47eb66e15c$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$6e9c2c40baedc4d3$export$6a4fe494c558c238","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$b352d83c6adf59d0$var$GeometryCollection","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$b352d83c6adf59d0$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","$b352d83c6adf59d0$var$cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","$0afe4f47eb66e15c$exports","clonedGeometries","$b352d83c6adf59d0$export$2e2bcd8739ae039","$ce479c64a4dd295f$export$2e2bcd8739ae039","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","opt_options","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","$ce479c64a4dd295f$export$7beeea566b560d4","write","transformed","decimals","power_1","pow","round","$90cdf935a4cb5f8f$export$2e2bcd8739ae039","$843aafc6e566eea2$var$getObject","JSON","parse","$843aafc6e566eea2$export$2e2bcd8739ae039","JSONFeature","$843aafc6e566eea2$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$28b3e94032c703ae$export$2e2bcd8739ae039","$5e0cf2909081fcd6$var$SimpleGeometry","SimpleGeometry","layout","$5e0cf2909081fcd6$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$5e0cf2909081fcd6$export$6af0c1b4a8549a43","setCoordinates","opt_layout","setLayout","nesting","$5e0cf2909081fcd6$var$getLayoutForStride","$21b6f7621e6152f7$export$dcdf75081b88279d","$21b6f7621e6152f7$export$d73ee8ef04f5226a","$5e0cf2909081fcd6$export$a3767472617c7861","simpleGeometry","$5e0cf2909081fcd6$export$2e2bcd8739ae039","$31903856a8cc25f7$var$assignClosest","offset1","offset2","$31903856a8cc25f7$export$bc2eb611ddf80103","squaredDelta","$31903856a8cc25f7$export$fbf31c8f2668ed5a","ends","$31903856a8cc25f7$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$31903856a8cc25f7$export$5a48a0eefcf14992","$ec63ebe683e7bd4c$export$5c4daf67e03c190f","$ec63ebe683e7bd4c$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8b376c43ca456b0c$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$8b376c43ca456b0c$export$cedb9900c0b225c2","simplifiedEnds","$8b376c43ca456b0c$export$51a0620f7a28532b","$8b376c43ca456b0c$export$b84e8d2c4920a0c6","$8b376c43ca456b0c$export$60a9904b67f8d51b","$d9ba6d5e24836156$export$4b80e395e36b5a56","ret","$4eebcd7cba5c6cd9$export$9c0934e4e9c3f61e","opt_coordinates","$4eebcd7cba5c6cd9$export$cbb9596fc0f40db2","opt_coordinatess","$4eebcd7cba5c6cd9$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$2adf10d98c30c9dd$export$687ff82efd78795b","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$ecf9f00034241bb8$export$2e0ae67339d5f1ac","$2adf10d98c30c9dd$export$8f44c3c220ef6f09","m","extrapolate","lo","hi","m0","$2ffae1bc01dcd8b1$export$cedabedc7ac0e138","$2ffae1bc01dcd8b1$export$949a7a3a4b6f34fa","wn","$2ffae1bc01dcd8b1$export$ae868c0f6acc3355","$409182f2ccbbd4ee$export$40d8d71841a3d779","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$6e9c2c40baedc4d3$export$a6a5a7a461419425","$409182f2ccbbd4ee$export$76dcd8f8f83b6ddb","$409182f2ccbbd4ee$export$830a0dafbb2ef1c5","$efb91ee92486aa0c$export$153f8c6b4d8caebc","$9026238b70fbe082$export$2e2bcd8739ae039","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$9026238b70fbe082$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$5e0cf2909081fcd6$exports","$c82842fd382f9032$var$MultiLineString","MultiLineString","ends_","lineStrings","$c82842fd382f9032$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$2adf10d98c30c9dd$export$6a3300857e9ef453","getEnds","getLineString","$9026238b70fbe082$exports","getLineStrings","getFlatMidpoints","midpoints","$409182f2ccbbd4ee$export$fdb1d8e850bf7937","$c82842fd382f9032$export$2e2bcd8739ae039","$38233aa4318fb3ae$var$Point","Point","$38233aa4318fb3ae$var$__extends","$ec63ebe683e7bd4c$export$60815ead40ec79ab","$38233aa4318fb3ae$export$2e2bcd8739ae039","$6b7c872d1686d77f$var$MultiPoint","MultiPoint","$6b7c872d1686d77f$var$__extends","appendPoint","multiPoint","getPoint","$38233aa4318fb3ae$exports","getPoints","points","$6b7c872d1686d77f$export$2e2bcd8739ae039","$afdd7aad72fbf822$export$3c5e1905f889266e","twiceArea","$afdd7aad72fbf822$export$7a8ee541dfdf2ed5","$f475851524c79c1c$export$2e2bcd8739ae039","LinearRing","$f475851524c79c1c$var$__extends","getArea","$79b41c062bbdd59c$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$952c125ffed88db8$export$741858880c96b18c","$037571e3d596db9a$export$318f2842ed17e094","edge","$037571e3d596db9a$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$037571e3d596db9a$export$b71b604ddfc778c7","$037571e3d596db9a$export$ea9ed55fc2a85010","$0820b063c708bfba$var$Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$0820b063c708bfba$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","$f475851524c79c1c$exports","getLinearRings","linearRings","$0820b063c708bfba$export$2e2bcd8739ae039","$0820b063c708bfba$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$0820b063c708bfba$export$c16b671815801c75","$0820b063c708bfba$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$0820b063c708bfba$export$87d6a1539a56e47f","getRadius","startAngle","$5851bac22e3214dc$var$MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$5851bac22e3214dc$var$__extends","appendPolygon","newEndss","multiPolygon","$31903856a8cc25f7$export$37c18e6e7d50501a","$31903856a8cc25f7$export$60e067685eb8f9c4","$2ffae1bc01dcd8b1$export$c760d9d16cf92043","$afdd7aad72fbf822$export$78e139679ca7205","getEndss","getFlatInteriorPoints","$7946674c412a82d1$export$78e139679ca7205","interiorPoints","$79b41c062bbdd59c$export$11463803eda8a372","getInteriorPoints","$6b7c872d1686d77f$exports","$037571e3d596db9a$export$a1d138f4bd85f4b4","simplifiedEndss","$8b376c43ca456b0c$export$b9acf67ef05cd17c","getPolygon","prevEnds","$0820b063c708bfba$exports","getPolygons","$409182f2ccbbd4ee$export$77b72fa3792f5bf0","$ec63ebe683e7bd4c$export$f9f2bb59da4accd3","lastEnds","$5851bac22e3214dc$export$2e2bcd8739ae039","$17d970b9a6ec9617$var$GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$17d970b9a6ec9617$var$__extends","geoJSONFeature","$17d970b9a6ec9617$var$readGeometry","$5bfa5a5ae8f81a5f$exports","geoJSONFeatures","crs","$17d970b9a6ec9617$var$writeGeometry","objects","$843aafc6e566eea2$exports","$17d970b9a6ec9617$var$readPointGeometry","$17d970b9a6ec9617$var$readLineStringGeometry","$17d970b9a6ec9617$var$readPolygonGeometry","$17d970b9a6ec9617$var$readMultiPointGeometry","$c82842fd382f9032$exports","$17d970b9a6ec9617$var$readMultiLineStringGeometry","$5851bac22e3214dc$exports","$17d970b9a6ec9617$var$readMultiPolygonGeometry","map","$b352d83c6adf59d0$exports","$17d970b9a6ec9617$var$readGeometryCollectionGeometry","geoJSON","$17d970b9a6ec9617$var$writePointGeometry","$17d970b9a6ec9617$var$writeLineStringGeometry","rightHanded","$17d970b9a6ec9617$var$writePolygonGeometry","$17d970b9a6ec9617$var$writeMultiPointGeometry","$17d970b9a6ec9617$var$writeMultiLineStringGeometry","$17d970b9a6ec9617$var$writeMultiPolygonGeometry","geometry1","$17d970b9a6ec9617$var$writeGeometryCollectionGeometry","$17d970b9a6ec9617$export$2e2bcd8739ae039","$25afcf5ad39521a5$var$HEX_COLOR_RE_","$25afcf5ad39521a5$var$NAMED_COLOR_RE_","$25afcf5ad39521a5$export$590567be997858b6","color","$25afcf5ad39521a5$export$f84e8e69fd4488a5","$25afcf5ad39521a5$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$25afcf5ad39521a5$export$3004f64547af360e","s","g","exec","hasAlpha","parseInt","substr","$25afcf5ad39521a5$export$a3295358bff77e","Number","$25afcf5ad39521a5$var$fromStringInternal_","$25afcf5ad39521a5$export$75093a47a9fa838d","$441aa5b886fde9e2$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$441aa5b886fde9e2$var$getKey","setSize","maxCacheSize","$441aa5b886fde9e2$export$747ccdf771a87ab8","$94f1d2f94f2b7df1$export$2e2bcd8739ae039","$5e576ff631195774$export$2e2bcd8739ae039","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$5e576ff631195774$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$c530d450826284e6$export$2e2bcd8739ae039","$9376a23ada44155c$export$2e2bcd8739ae039","$daf70f87a90139ea$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$daf70f87a90139ea$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$daf70f87a90139ea$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$5e576ff631195774$exports","$bc5a53b0fb3ae156$var$MapRenderer","MapRenderer","map_","$bc5a53b0fb3ae156$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","layer1","$daf70f87a90139ea$exports","inView","getWrapX","callback_1","order","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$bc5a53b0fb3ae156$var$expireIconCache","$bc5a53b0fb3ae156$export$2e2bcd8739ae039","$70dabfea60f9a914$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$70dabfea60f9a914$var$__extends","$dc26ebbc966027e7$var$fontRegEx","RegExp","$dc26ebbc966027e7$var$fontRegExMatchIndex","$dc26ebbc966027e7$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$dc26ebbc966027e7$export$52ec625a6a53b6a6","$7ded474b40b0baaa$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$7ded474b40b0baaa$export$e823f88e4111159a","element","offsetWidth","marginLeft","marginRight","$7ded474b40b0baaa$export$fc5b8aac72846d1e","offsetHeight","marginTop","marginBottom","$7ded474b40b0baaa$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$7ded474b40b0baaa$export$1d0aa160432dfea5","$7ded474b40b0baaa$export$1e1c9bf5a4ffe0d1","lastChild","$42fd7bfc292637fd$export$e21b4112fdc612fc","$42fd7bfc292637fd$export$40a9eeef55665a40","$42fd7bfc292637fd$export$1d36981fcadac93b","console","warn","$42fd7bfc292637fd$var$measureFont","measureElement","$42fd7bfc292637fd$var$measureContext","$42fd7bfc292637fd$export$7fdcec604f0b1fa7","$42fd7bfc292637fd$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$42fd7bfc292637fd$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$42fd7bfc292637fd$export$4feaf6852ff92513","metrics","$42fd7bfc292637fd$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureText","$42fd7bfc292637fd$export$915c7ba51467308f","$42fd7bfc292637fd$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$42fd7bfc292637fd$var$executeLabelInstructions","drawImage","restore","$1b29c9925ee5c6bf$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$dc26ebbc966027e7$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$1b29c9925ee5c6bf$var$__extends","event_1","$70dabfea60f9a914$exports","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$7ded474b40b0baaa$export$caeacfe04f52533a","getDataAtPixel","$bc5a53b0fb3ae156$exports","$1b29c9925ee5c6bf$export$2e2bcd8739ae039","$1e0673079172f5f7$export$2e2bcd8739ae039","$d1622a899ef2b89d$var$Property","$d1622a899ef2b89d$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$d1622a899ef2b89d$var$__extends","$d1622a899ef2b89d$var$Collection","Collection","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d1622a899ef2b89d$export$2e2bcd8739ae039","$172d9d3c17b8a7cf$var$Property","$172d9d3c17b8a7cf$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$d1622a899ef2b89d$exports","setLayers","$172d9d3c17b8a7cf$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$172d9d3c17b8a7cf$export$2e2bcd8739ae039","$cf13847418ad81e4$export$2e2bcd8739ae039","MapEvent","$cf13847418ad81e4$var$__extends","$0f03dccd42bf4d1e$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$0f03dccd42bf4d1e$var$__extends","getEventPixel","getCoordinateFromPixel","$cf13847418ad81e4$exports","$fb658c031c1464b5$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$71df73cffc88db67$export$2e2bcd8739ae039","$281cc530eea9c034$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$281cc530eea9c034$var$__extends","emulateClick_","pointerEvent","newEvent1","$0f03dccd42bf4d1e$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$817cf70c7fced468$export$2e2bcd8739ae039","$3cd308c60d7fd495$export$2e2bcd8739ae039","$5d43589485999ca2$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$5d43589485999ca2$export$2e2bcd8739ae039","$17cb619e19250002$export$2e2bcd8739ae039","$0b27eaaca4255715$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$0b27eaaca4255715$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$0b27eaaca4255715$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","$a361b46708fdc9d9$export$2e2bcd8739ae039","$71f8bfc50f37b5a5$export$2e2bcd8739ae039","$b443e201cef53f60$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$b443e201cef53f60$export$f883a24d5edde77c","$03956f22a9281048$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$03956f22a9281048$var$getSmoothClampedResolution","$03956f22a9281048$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$b430471dc36859e7$export$e20fbacbb41798b","$b430471dc36859e7$export$f883a24d5edde77c","$29c6f6d78bb4f447$export$929e5a82286172a6","$29c6f6d78bb4f447$export$57636bb43b1ccbb0","$29c6f6d78bb4f447$export$9b47139b511b56e4","$29c6f6d78bb4f447$export$45db2fc2f15997e7","$372db372bb1eafd9$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$372db372bb1eafd9$var$__extends","resolutionConstraintInfo","$372db372bb1eafd9$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$372db372bb1eafd9$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$372db372bb1eafd9$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$372db372bb1eafd9$export$ee75376562060184","setHint","updateAnimations_","$372db372bb1eafd9$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$372db372bb1eafd9$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$03956f22a9281048$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$03956f22a9281048$export$22ac0f6b219de91a","theta","opt_tolerance","enableRotation","constrainRotation","$372db372bb1eafd9$export$2e2bcd8739ae039","$1531430a06fcb879$export$622c471beb1693c7","$1531430a06fcb879$export$a71a825ff42fb8e1","$31cb24803e978fe2$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$172d9d3c17b8a7cf$exports","view","$372db372bb1eafd9$exports","$31cb24803e978fe2$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$0b27eaaca4255715$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$31cb24803e978fe2$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$281cc530eea9c034$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","parseFloat","getClientRects","$31cb24803e978fe2$export$2e2bcd8739ae039","$0253f2b24e351864$var$Control","Control","target_","listenerKeys","$0253f2b24e351864$var$__extends","mapEvent","$0253f2b24e351864$export$2e2bcd8739ae039","$6fe94588175e6cb7$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6fe94588175e6cb7$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$0253f2b24e351864$exports","$6fe94588175e6cb7$export$2e2bcd8739ae039","$aaeae4cd33e8d58d$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$aaeae4cd33e8d58d$var$__extends","resetNorth_","$fbc1f81ea5c00c4e$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$fbc1f81ea5c00c4e$var$__extends","zoomByDelta_","currentZoom","newZoom","$6ea7ee0c5200a529$export$2e2bcd8739ae039","MousePosition","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","renderOnMouseOut","placeholder","undefinedHTML","placeholder_","renderOnMouseOut_","renderedHTML_","mapProjection_","transform_","$6ea7ee0c5200a529$var$__extends","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","viewport","format","html","$d045b31d99c9f19b$export$2e2bcd8739ae039","$46913c3facd0ceb2$var$Property","$46913c3facd0ceb2$export$2e2bcd8739ae039","Overlay","insertFirst","stopEvent","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","$46913c3facd0ceb2$var$__extends","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$7de39b75caaef848$var$ControlledMap","ControlledMap","$7de39b75caaef848$var$__extends","$1b29c9925ee5c6bf$exports","$31cb24803e978fe2$exports","$7de39b75caaef848$export$2e2bcd8739ae039","OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","rotateWithView_","rotateWithView","viewExtent_","ovmapDiv_","view_","ovmap_","ovmap","boxSizing","boxOverlay_","$46913c3facd0ceb2$exports","scope","overlayBox","move","mousePosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","$7de39b75caaef848$var$MAX_RATIO","LN2","$6e9c2c40baedc4d3$export$80cbab86674143b6","updateBox_","ovresolution","ovmapPostrenderKey_","getRotateWithView","setRotateWithView","getOverviewMap","$5b835091c3080d77$export$2e2bcd8739ae039","$df068c7e331712e2$export$4c486572e961a974","$df068c7e331712e2$export$ace321ff2a8016ef","$df068c7e331712e2$export$2e2bcd8739ae039","Interaction","setActive","$df068c7e331712e2$var$__extends","active","$bd48761daa50c7e6$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$bd48761daa50c7e6$var$__extends","shiftKey","$df068c7e331712e2$exports","zoomByDelta","$d6505b91813fc3f5$export$e2a20c553f6c85ce","$d6505b91813fc3f5$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$d6505b91813fc3f5$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$d6505b91813fc3f5$var$isPointerDraggingEvent","$d973e6b915d17568$export$84bf76cd7afc7469","conditions","pass","$d973e6b915d17568$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$d973e6b915d17568$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$d973e6b915d17568$export$d7ddd398f22d79ef","$d973e6b915d17568$export$ba9e5d519bc326ca","$d973e6b915d17568$export$1238ad6b5e7fff70","$d973e6b915d17568$export$b3e22bcfd64c1022","$d973e6b915d17568$export$194df8bad091b401","$d973e6b915d17568$export$fdc892d0d8fe3bfb","$d973e6b915d17568$export$5d31fe68a477cfbb","$d973e6b915d17568$export$e5570ca80cd8fd54","tagName","$d973e6b915d17568$export$abb7acbfa76bf3c4","pointerType","$d973e6b915d17568$export$189f0d593022b199","isPrimary","$5521bddb94963dca$export$2e2bcd8739ae039","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$5521bddb94963dca$var$__extends","centroid","$d6505b91813fc3f5$exports","update","getDistance","getAngle","centerpx","$7d6b553d2ecb7aae$export$2e2bcd8739ae039","DragRotate","lastAngle_","$7d6b553d2ecb7aae$var$__extends","$34a0103a786d0203$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$34a0103a786d0203$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$334ba95f02e91fbd$var$DragBoxEventType","$334ba95f02e91fbd$export$7053c33c051365ea","DragBoxEvent","$334ba95f02e91fbd$var$__extends","$334ba95f02e91fbd$export$2e2bcd8739ae039","DragBox","box_","$34a0103a786d0203$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$162bbdfaa4217272$export$2e2bcd8739ae039","DragZoom","out_","out","$162bbdfaa4217272$var$__extends","factor","$334ba95f02e91fbd$exports","$19219b8b46072706$export$2e2bcd8739ae039","$1f555de77a644a36$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$1f555de77a644a36$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$b71cdf9bb745a80a$export$2e2bcd8739ae039","KeyboardZoom","$b71cdf9bb745a80a$var$__extends","charCode","charCodeAt","$f97918a95109ec86$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$7ed4d731203fa277$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$7ed4d731203fa277$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$7ed4d731203fa277$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$4b86d14a22d71de2$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$4b86d14a22d71de2$var$__extends","rotationDelta","touch0","touch1","$ac04ae0f56a0dede$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$ac04ae0f56a0dede$var$__extends","scaleDelta","$b4714ca7c8215c38$export$2e2bcd8739ae039","$e745fbc69f624ade$export$2e2bcd8739ae039","ImageStyle","opacity_","scale_","scaleArray_","displacement_","displacement","getScale","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setScale","listenImageChange","unlistenImageChange","$4dc75ca2079b145c$export$dc5b1400ac3a10a8","$bd6465822d76b84c$var$RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$bd6465822d76b84c$var$__extends","getFill","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$bd6465822d76b84c$export$2e2bcd8739ae039","$2ec68ca3661f8eec$export$2e2bcd8739ae039","CircleStyle","$2ec68ca3661f8eec$var$__extends","setRadius","$bd6465822d76b84c$exports","$699098f8ad6aec62$export$2e2bcd8739ae039","Fill","color_","setColor","$78385b27df2567ec$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$87a6c33cb088ca70$var$Style","Style","geometryFunction_","$87a6c33cb088ca70$var$defaultGeometryFunction","image_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$87a6c33cb088ca70$var$defaultStyles","$87a6c33cb088ca70$export$6865c5ac2f5ce8b6","$2ec68ca3661f8eec$exports","$87a6c33cb088ca70$export$2e2bcd8739ae039","$60c00a18ac32f0c2$var$SelectEventType","$60c00a18ac32f0c2$export$1bcc516ebf36ffe2","SelectEvent","selected","deselected","$60c00a18ac32f0c2$var$__extends","$60c00a18ac32f0c2$var$originalFeatureStyles","$60c00a18ac32f0c2$var$Select","Select","styles","boundAddFeature_","addFeature_","boundRemoveFeature_","removeFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","white","blue","$87a6c33cb088ca70$export$ed1eaede5d0e77ac","features_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","lastIndexOf","removeFeatureLayerAssociation_","feature1","$60c00a18ac32f0c2$export$2e2bcd8739ae039","$da3c6f26ad25f5e5$export$2e2bcd8739ae039","Map","$fbc1f81ea5c00c4e$exports","zoomOptions","$aaeae4cd33e8d58d$exports","rotateOptions","attribution","$6fe94588175e6cb7$exports","attributionOptions","$c08bc411c2f7652d$export$ebe90cb607ad99e","altShiftDragRotate","$7d6b553d2ecb7aae$exports","doubleClickZoom","$bd48761daa50c7e6$exports","zoomDelta","zoomDuration","dragPan","$5521bddb94963dca$exports","pinchRotate","$4b86d14a22d71de2$exports","pinchZoom","$ac04ae0f56a0dede$exports","keyboard","$1f555de77a644a36$exports","$b71cdf9bb745a80a$exports","mouseWheelZoom","$7ed4d731203fa277$exports","shiftDragZoom","$162bbdfaa4217272$exports","$ccf0c7a17348fff8$export$ebe90cb607ad99e","$da3c6f26ad25f5e5$var$__extends","$f1538e9992d48ee3$exports","n1","_maxEntries","_minEntries","h1","p1","o1","leaf","s1","l1","u1","m1","h2","u","p","t2","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","define","amd","RBush","$7655387df8e4018f$var$RBush","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$7655387df8e4018f$export$2e2bcd8739ae039","$124fe04b3823a0d1$var$adaptAttributions","attributionLike","$124fe04b3823a0d1$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$124fe04b3823a0d1$var$__extends","getContextOptions","refresh","setAttributions","setState","$2b9c741835e514d8$export$2e2bcd8739ae039","$1dcde3bf973ca69b$export$84bf76cd7afc7469","$ef53cd2221bd6ee5$var$withCredentials","$ef53cd2221bd6ee5$export$14cc81df70b6707e","url","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$ef53cd2221bd6ee5$export$441d7b57adab24d0","addFeatures","$ee8a617f6b991801$export$d402fd02dc2b661c","VectorSourceEvent","opt_feature","opt_features","$ee8a617f6b991801$var$__extends","$ee8a617f6b991801$var$VectorSource","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$124fe04b3823a0d1$exports","$ee8a617f6b991801$export$2e2bcd8739ae039","$233f4a241cd6f1da$var$Property","$233f4a241cd6f1da$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$233f4a241cd6f1da$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$87a6c33cb088ca70$export$c314ea3f6b164147","$83b80126cb5b0215$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$83b80126cb5b0215$export$f21891651e408226","$83b80126cb5b0215$export$7a98aa5364d62ba8","$83b80126cb5b0215$export$9f746cc58a899a00","$83b80126cb5b0215$export$89b10f327e413e71","$83b80126cb5b0215$export$2e2bcd8739ae039","$bff206314e761f2d$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$906d055d1cc9728d$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$906d055d1cc9728d$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$906d055d1cc9728d$export$2e2bcd8739ae039","$1db580ffbfe1573a$export$2e2bcd8739ae039","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$1db580ffbfe1573a$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$906d055d1cc9728d$exports","$00a5e55ce40bd6cf$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$00a5e55ce40bd6cf$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$00a5e55ce40bd6cf$export$2e2bcd8739ae039","$70020585b8b05c70$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$70020585b8b05c70$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$70020585b8b05c70$export$2e2bcd8739ae039","$92d4995d229faa08$export$2e2bcd8739ae039","$b022c8a2fa43f1cc$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$59e4dc2734e97a0b$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$59e4dc2734e97a0b$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$59e4dc2734e97a0b$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$59e4dc2734e97a0b$export$2e2bcd8739ae039","$79390ed7e144c6b3$var$BATCH_CONSTRUCTORS","Circle","$70020585b8b05c70$exports","Default","$1db580ffbfe1573a$exports","$00a5e55ce40bd6cf$exports","Text","$59e4dc2734e97a0b$exports","$79390ed7e144c6b3$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$8ea4bf835af0b6e3$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$8ea4bf835af0b6e3$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","renderIfReadyAndVisible","loadImage","imageState","$bbdea363382e4968$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$bbdea363382e4968$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$8ea4bf835af0b6e3$exports","$4e8182639fc1b4f4$export$2e2bcd8739ae039","$07e4e915df48a003$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$0018ed6ab3ca970b$var$tmpExtent","$0018ed6ab3ca970b$var$p1","$0018ed6ab3ca970b$var$p2","$0018ed6ab3ca970b$var$p3","$0018ed6ab3ca970b$var$p4","$0018ed6ab3ca970b$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$0018ed6ab3ca970b$var$rtlRegEx","fromCharCode","$0018ed6ab3ca970b$var$horizontalTextAlign","align","test","TEXT_ALIGN","$0018ed6ab3ca970b$var$Executor","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$42fd7bfc292637fd$export$a539decdd6096c57","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$0018ed6ab3ca970b$export$2e2bcd8739ae039","$9d0d65645f8c8094$var$ORDER","$9d0d65645f8c8094$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$9d0d65645f8c8094$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$9d0d65645f8c8094$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$9d0d65645f8c8094$export$2e2bcd8739ae039","$5c603051595c0108$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$5c603051595c0108$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$5c603051595c0108$export$2e2bcd8739ae039","$2b8efb29cc68abed$export$2e2bcd8739ae039","$ed108053bd0a2446$export$2e2bcd8739ae039","$bff26cb8dd85843e$export$2e2bcd8739ae039","ImageBase","$bff26cb8dd85843e$var$__extends","$2a4516497f4af408$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$2a4516497f4af408$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$bff26cb8dd85843e$exports","$0d77d75a1ee6ddd3$var$taintedTestContext","$0d77d75a1ee6ddd3$var$IconImage","IconImage","imageState_","tainted_","$0d77d75a1ee6ddd3$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$2a4516497f4af408$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$0d77d75a1ee6ddd3$export$3988ae62b71be9a3","$d1aa9153b1dac91e$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$0d77d75a1ee6ddd3$exports","offset_","offsetOrigin_","offsetOrigin","$d1aa9153b1dac91e$var$__extends","setAnchor","iconImageSize","$16e9f75d8b6d681c$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$16e9f75d8b6d681c$export$531ddd8416d52dfc","feature2","$16e9f75d8b6d681c$export$bdacc5b475012edb","$16e9f75d8b6d681c$export$36f470a33a42f413","$16e9f75d8b6d681c$var$renderGeometry","$16e9f75d8b6d681c$var$renderFeatureInternal","$4c04b301d9337902$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$4c04b301d9337902$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$9a68deaf29eb7021$export$3e4e33ea14aeb531","clipped","transforms","imageSmoothingEnabled","$5c603051595c0108$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","$d1aa9153b1dac91e$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$228839419cfa9dca$export$bd05e394339d469","resultFeatures","$228839419cfa9dca$export$6d4d555ddbfffa32","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","$6e9c2c40baedc4d3$export$39a9ce3624977b84","declutterBuilderGroup","userTransform","userExtent_1","$16e9f75d8b6d681c$export$75084a70d324c1e6","dirty","renderFeature","userExtent","replayGroupInstructions","$bbdea363382e4968$exports","$4c04b301d9337902$export$2e2bcd8739ae039","$803034a67506fc0e$export$2e2bcd8739ae039","VectorLayer","$803034a67506fc0e$var$__extends","$4c04b301d9337902$exports","$233f4a241cd6f1da$exports","$bd29a857a776c232$var$CONTEXT_IDS","$bd29a857a776c232$export$31553aaa555c1514","opt_attributes","$73c44c05f09d34de$export$f8deb2be8632fd10","$73c44c05f09d34de$export$37fe2e0df0b28841","Float32Array","Uint32Array","$73c44c05f09d34de$export$2e2bcd8739ae039","WebGLArrayBuffer","opt_usage","usage","ofSize","fromArray","arrayClass","from","fromArrayBuffer","buffer","getUsage","$70572d211f9e0460$export$2e2bcd8739ae039","$d74812514e89882d$export$2e2bcd8739ae039","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","uniform1f","$06f92a4a6786663d$export$cefd10e2681057f4","mat4","$60e2000308cbd68a$export$5884154fdcf36ad1","$60e2000308cbd68a$export$e4eae9f321c2fba","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","$60e2000308cbd68a$export$d31c6c64cddbeeac","UNSIGNED_SHORT","UNSIGNED_INT","$60e2000308cbd68a$var$WebGLHelper","WebGLHelper","options1","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","bufferCache_","extensionCache_","currentProgram_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","name_1","postProcessPasses_","postProcesses","shaderCompileErrors_","$60e2000308cbd68a$var$__extends","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","opt_disableAlphaBlend","getCanvas","ZERO","applyFrameState","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getTexture","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","offsetRotateMatrix","$9a68deaf29eb7021$export$bb628a54ab399bc9","setUniformMatrixValue","setUniformFloatValue","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attributes","$60e2000308cbd68a$export$68e74dfb6cc19fa4","attr","$60e2000308cbd68a$var$getByteSizeFromType","opt_data","opt_texture","BYTES_PER_ELEMENT","Uint16Array","$60e2000308cbd68a$export$2e2bcd8739ae039","$4522ba1d9f553ec3$export$25a4aaa23648aeeb","GENERATE_BUFFERS","$4522ba1d9f553ec3$var$WebGLLayerRenderer","WebGLLayerRenderer","helper","$60e2000308cbd68a$exports","$4522ba1d9f553ec3$var$__extends","$4522ba1d9f553ec3$var$tmpArray_","$4522ba1d9f553ec3$var$bufferPositions_","vertexPosition","indexPosition","$4522ba1d9f553ec3$var$writePointVertex","$4522ba1d9f553ec3$export$d5b474bcf7668477","elementIndex","vertexBuffer","indexBuffer","customAttributesCount","bufferPositions","customAttrs","vPos","iPos","baseIndex","$4522ba1d9f553ec3$export$d8225faa533b597f","createImageData","$4522ba1d9f553ec3$export$150265997bc2e47f","radix","divide","$4522ba1d9f553ec3$export$1cebf487eb3d824d","mult","$4522ba1d9f553ec3$export$2e2bcd8739ae039","$f31ebe1654ce6d06$var$tmpArray4","$f31ebe1654ce6d06$export$2e2bcd8739ae039","WebGLRenderTarget","helper_","texture_","framebuffer_","data_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","$858afa6c489b64e4$var$blob","Blob","$858afa6c489b64e4$var$url","URL","createObjectURL","$d0f027e51fa8578c$export$2e2bcd8739ae039","WebGLPointsLayerRenderer","projectionMatrixTransform","DefaultUniform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitProgram_","customAttributes","attribute","AttributeType","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","worker_","Worker","received","$4522ba1d9f553ec3$exports","WebGLWorkerMessageType","projectionTransform","hitDetection","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","$d0f027e51fa8578c$var$__extends","renderCount","renderHitDetection","viewNotMoving","extentChanged","sourceChanged","rebuildBuffers_","featureCache","totalInstructionsCount","totalHitInstructionsCount","hitColor","tmpCoords","tmpColor","renderIndex","hitIndex","featureUid","colorEncodeId","postMessage","hitMessage","colorDecodeId","terminate","$71588fa4f17aa763$var$Property","$71588fa4f17aa763$var$DEFAULT_GRADIENT","$71588fa4f17aa763$var$Heatmap","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","$71588fa4f17aa763$var$__extends","getBlur","getGradient","colors","createLinearGradient","addColorStop","$71588fa4f17aa763$var$createGradient","$d0f027e51fa8578c$exports","u_size","u_blurSlope","u_gradientTexture","$803034a67506fc0e$exports","$71588fa4f17aa763$export$2e2bcd8739ae039","$3e10cf8a87a9c75b$export$2e2bcd8739ae039","$b9fbd5f4a93e4110$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$b9fbd5f4a93e4110$var$__extends","getPreload","getUseInterimTilesOnError","$ab2be06f6b89441a$var$TileRange","TileRange","containsTileRange","getHeight","$ab2be06f6b89441a$export$958e3e1a02eac4b6","$ab2be06f6b89441a$export$2e2bcd8739ae039","$b099118b778b9320$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$b099118b778b9320$var$__extends","isDrawableTile","tileState","getTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","endTransition","frameState1","tileSource1","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$b099118b778b9320$export$2e2bcd8739ae039","$449890c6937bf05e$export$2e2bcd8739ae039","TileLayer","$449890c6937bf05e$var$__extends","$b099118b778b9320$exports","$b9fbd5f4a93e4110$exports","$2bdfaf37469c625f$export$2e2bcd8739ae039","Tile","interimTile","transition_","transitionStarts_","$2bdfaf37469c625f$var$__extends","release","refreshInterimChain","getTileCoord","$dcb54584119be9f9$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","tileLoadFunction_","$dcb54584119be9f9$var$__extends","naturalWidth","naturalHeight","$2bdfaf37469c625f$exports","$5196f19b885199f3$var$brokenDiagonalRendering_","$3346793e0e9bd27c$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$3a621e35d57a6dfe$export$ab6c91696bd3263e","msImageSmoothingEnabled","$5196f19b885199f3$var$drawTestTriangle","v1","u2","v2","$5196f19b885199f3$var$verifyBrokenDiagonalRendering","$5196f19b885199f3$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$5196f19b885199f3$export$b3890eb0ae9dca99","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$ad67a80bd590adc8$export$8240f01c446270e6","$5196f19b885199f3$var$isBrokenDiagonalRendering","ud","vd","$4654efc21da0fd54$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$5196f19b885199f3$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$4654efc21da0fd54$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$e9609137bb57fc04$var$LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$e9609137bb57fc04$export$2e2bcd8739ae039","$f98984479a3a373c$export$958e3e1a02eac4b6","opt_tileCoord","$f98984479a3a373c$export$92d0df0f1d25c63c","$f98984479a3a373c$export$a47fb462a08de82f","$2826729be38ea713$export$2e2bcd8739ae039","TileCache","$2826729be38ea713$var$__extends","pruneExceptNewestZ","$f98984479a3a373c$export$a807b7874eb66454","$70566066727e45de$export$2e2bcd8739ae039","$238bdbed35ee6c2b$var$tmpTileCoord","$238bdbed35ee6c2b$var$TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$238bdbed35ee6c2b$export$2e2bcd8739ae039","$fc48a08ae8a90af8$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$fc48a08ae8a90af8$var$resolutionsFromExtent","$fc48a08ae8a90af8$export$ce88871416242df8","$fc48a08ae8a90af8$export$7b5b6ef8fd55fac4","$fc48a08ae8a90af8$export$a251b12f5601c16f","opt_maxResolution","half","$593871892a2c101c$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$2826729be38ea713$exports","tmpSize","tileOptions","$593871892a2c101c$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","opt_projection","$fc48a08ae8a90af8$export$39a9ce3624977b84","$f98984479a3a373c$export$60bedf8e3e3c3dbe","$593871892a2c101c$export$c571855c51e6c4b6","TileSourceEvent","$593871892a2c101c$export$2e2bcd8739ae039","$aeb5328ce464660f$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$aeb5328ce464660f$export$436f44dbcc31fea3","templates","tileUrlFunctions","$f98984479a3a373c$export$d6af199866bfb566","$aeb5328ce464660f$export$4229b1d9af69b3be","$bd1c763129ac0ebc$var$UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$bd1c763129ac0ebc$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$593871892a2c101c$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$aeb5328ce464660f$export$2a1fa079bfd73dde","$bd1c763129ac0ebc$export$2e2bcd8739ae039","$376392de2838aa74$var$TileImage","TileImage","$376392de2838aa74$var$defaultTileLoadFunction","tileClass","$dcb54584119be9f9$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$376392de2838aa74$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","$4654efc21da0fd54$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$bd1c763129ac0ebc$exports","imageTile","$376392de2838aa74$export$2e2bcd8739ae039","$78baeb7a0deea579$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$fc48a08ae8a90af8$export$38500bbeccc864ff","$78baeb7a0deea579$var$__extends","$376392de2838aa74$exports","$f976bf797198355a$var$vectorSource1","$ee8a617f6b991801$exports","$17d970b9a6ec9617$exports","$f976bf797198355a$var$vectorSource2","$f976bf797198355a$var$vectorSource3","$f976bf797198355a$var$vectorLayer","$f976bf797198355a$var$url3","$f976bf797198355a$var$map","$da3c6f26ad25f5e5$exports","$449890c6937bf05e$exports","$78baeb7a0deea579$exports","$f976bf797198355a$var$select","$60c00a18ac32f0c2$exports","$f976bf797198355a$var$selectedFeatures","$f976bf797198355a$var$dragBox","oblique","candidateFeatures","$f976bf797198355a$var$infoBox","names","custom","$f976bf797198355a$var$form","$f976bf797198355a$var$currZoom","$f976bf797198355a$var$external_panel","$6ea7ee0c5200a529$exports","$f976bf797198355a$var$overview_map","$7de39b75caaef848$exports","querySelector","$f976bf797198355a$var$heatfeature","$f976bf797198355a$var$heatmaplayer","$71588fa4f17aa763$exports"],"version":3,"file":"index.35a43eca.js.map"}