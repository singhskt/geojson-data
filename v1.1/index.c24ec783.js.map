{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/has.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/GeoJSON.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/OverlayPositioning.js","node_modules/ol/src/Overlay.js","node_modules/ol/src/control/OverviewMap.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/interaction/Select.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/webgl.js","node_modules/ol/src/webgl/Buffer.js","node_modules/ol/src/webgl/ContextEventType.js","node_modules/ol/src/webgl/PostProcessingPass.js","node_modules/ol/src/vec/mat4.js","node_modules/ol/src/webgl/Helper.js","node_modules/ol/src/renderer/webgl/Layer.js","node_modules/ol/src/webgl/RenderTarget.js","node_modules/ol/src/worker/webgl.js","node_modules/ol/src/renderer/webgl/PointsLayer.js","node_modules/ol/src/layer/Heatmap.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {import(\"./OverlayPositioning.js\").default} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport?\n * If `true` (deprecated), then `autoPanAnimation` and `autoPanMargin` will be\n * used to determine the panning parameters; if an object is supplied then other\n * parameters are ignored.\n * @property {PanOptions} [autoPanAnimation] The animation options used to pan\n * the overlay into view. This animation is only used when `autoPan` is enabled.\n * A `duration` and `easing` may be provided to customize the animation.\n * Deprecated and ignored if `autoPan` is supplied as an object.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning. Deprecated and ignored\n * if `autoPan` is supplied as an object.\n * @property {PanIntoViewOptions} [autoPanOptions] The options to use for the\n * autoPan. This is only used when `autoPan` is enabled and has preference over\n * the individual `autoPanMargin` and `autoPanOptions`.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    let autoPan = options.autoPan;\n    if (autoPan && 'object' !== typeof autoPan) {\n      autoPan = {\n        animation: options.autoPanAnimation,\n        margin: options.autoPanMargin,\n      };\n    }\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|false}\n     */\n    this.autoPan = /** @type {PanIntoViewOptions} */ (autoPan) || false;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(\n      options.positioning !== undefined\n        ? /** @type {import(\"./OverlayPositioning.js\").default} */ (\n            options.positioning\n          )\n        : OverlayPositioning.TOP_LEFT\n    );\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./PluggableMap.js\").default|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./PluggableMap.js\").default|undefined} */ (\n      this.get(Property.MAP)\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {import(\"./OverlayPositioning.js\").default} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {import(\"./OverlayPositioning.js\").default} */ (\n      this.get(Property.POSITIONING)\n    );\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./PluggableMap.js\").default|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [opt_panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(opt_panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    const panIntoViewOptions = opt_panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {import(\"./OverlayPositioning.js\").default} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == OverlayPositioning.BOTTOM_RIGHT ||\n      positioning == OverlayPositioning.CENTER_RIGHT ||\n      positioning == OverlayPositioning.TOP_RIGHT\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.TOP_CENTER\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == OverlayPositioning.BOTTOM_LEFT ||\n      positioning == OverlayPositioning.BOTTOM_CENTER ||\n      positioning == OverlayPositioning.BOTTOM_RIGHT\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == OverlayPositioning.CENTER_LEFT ||\n      positioning == OverlayPositioning.CENTER_CENTER ||\n      positioning == OverlayPositioning.CENTER_RIGHT\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n      // @ts-ignore IE9\n      style.msTransform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/control/OverviewMap\n */\nimport CompositeMapRenderer from '../renderer/Composite.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport PluggableMap from '../PluggableMap.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\nclass ControlledMap extends PluggableMap {\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [opt_options] OverviewMap options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    /**\n     * @type {ControlledMap}\n     * @private\n     */\n    this.ovmap_ = new ControlledMap({\n      view: options.view,\n    });\n    const ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.CENTER_CENTER,\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../PluggableMap.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend, includes} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    const deselected = [];\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if (\n              (remove || toggle) &&\n              includes(features.getArray(), feature)\n            ) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(\n    styles[GeometryType.GEOMETRY_COLLECTION],\n    styles[GeometryType.LINE_STRING]\n  );\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/webgl\n */\n\n/**\n * Constants taken from goog.webgl\n */\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing vertices data, such as\n * position, color, texture coordinate, etc. These vertices are then referenced by an index buffer\n * to be drawn on screen (see {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER}).\n * @const\n * @type {number}\n * @api\n */\nexport const ARRAY_BUFFER = 0x8892;\n\n/**\n * Used by {@link module:ol/webgl/Helper~WebGLHelper} for buffers containing indices data.\n * Index buffers are essentially lists of references to vertices defined in a vertex buffer\n * (see {@link module:ol/webgl.ARRAY_BUFFER}), and define the primitives (triangles) to be drawn.\n * @const\n * @type {number}\n * @api\n */\nexport const ELEMENT_ARRAY_BUFFER = 0x8893;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STREAM_DRAW = 0x88e0;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const STATIC_DRAW = 0x88e4;\n\n/**\n * Used by {link module:ol/webgl/Buffer~WebGLArrayBuffer}.\n * @const\n * @type {number}\n * @api\n */\nexport const DYNAMIC_DRAW = 0x88e8;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_BYTE = 0x1401;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_SHORT = 0x1403;\n\n/**\n * @const\n * @type {number}\n */\nexport const UNSIGNED_INT = 0x1405;\n\n/**\n * @const\n * @type {number}\n */\nexport const FLOAT = 0x1406;\n\n/** end of goog.webgl constants\n */\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst CONTEXT_IDS = ['experimental-webgl', 'webgl', 'webkit-3d', 'moz-webgl'];\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object} [opt_attributes] Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  const ii = CONTEXT_IDS.length;\n  for (let i = 0; i < ii; ++i) {\n    try {\n      const context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n/**\n * @type {Array<string>}\n */\nlet supportedExtensions;\n\n/**\n * @return {Array<string>} List of supported WebGL extensions.\n */\nexport function getSupportedExtensions() {\n  if (!supportedExtensions) {\n    const canvas = document.createElement('canvas');\n    const gl = getContext(canvas);\n    if (gl) {\n      supportedExtensions = gl.getSupportedExtensions();\n    }\n  }\n  return supportedExtensions;\n}\n","/**\n * @module ol/webgl/Buffer\n */\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER} from '../webgl.js';\nimport {DYNAMIC_DRAW, STATIC_DRAW, STREAM_DRAW} from '../webgl.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Used to describe the intended usage for the data: `STATIC_DRAW`, `STREAM_DRAW`\n * or `DYNAMIC_DRAW`.\n * @enum {number}\n */\nexport const BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW,\n};\n\n/**\n * @classdesc\n * Object used to store an array of data as well as usage information for that data.\n * Stores typed arrays internally, either Float32Array or Uint16/32Array depending on\n * the buffer type (ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER) and available extensions.\n *\n * To populate the array, you can either use:\n * * A size using `#ofSize(buffer)`\n * * An `ArrayBuffer` object using `#fromArrayBuffer(buffer)`\n * * A plain array using `#fromArray(array)`\n *\n * Note:\n * See the documentation of [WebGLRenderingContext.bufferData](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData)\n * for more info on buffer usage.\n * @api\n */\nclass WebGLArrayBuffer {\n  /**\n   * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n   * @param {number} [opt_usage] Intended usage, either `STATIC_DRAW`, `STREAM_DRAW` or `DYNAMIC_DRAW`.\n   * Default is `DYNAMIC_DRAW`.\n   */\n  constructor(type, opt_usage) {\n    /**\n     * @private\n     * @type {Float32Array|Uint32Array}\n     */\n    this.array = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.type = type;\n\n    assert(type === ARRAY_BUFFER || type === ELEMENT_ARRAY_BUFFER, 62);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.usage = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {number} size Array size\n   */\n  ofSize(size) {\n    this.array = new (getArrayClassForType(this.type))(size);\n  }\n\n  /**\n   * Populates the buffer with an array of the given size (all values will be zeroes).\n   * @param {Array<number>} array Numerical array\n   */\n  fromArray(array) {\n    const arrayClass = getArrayClassForType(this.type);\n    this.array = arrayClass.from\n      ? arrayClass.from(array)\n      : new arrayClass(array);\n  }\n\n  /**\n   * Populates the buffer with a raw binary array buffer.\n   * @param {ArrayBuffer} buffer Raw binary buffer to populate the array with. Note that this buffer must have been\n   * initialized for the same typed array class.\n   */\n  fromArrayBuffer(buffer) {\n    this.array = new (getArrayClassForType(this.type))(buffer);\n  }\n\n  /**\n   * @return {number} Buffer type.\n   */\n  getType() {\n    return this.type;\n  }\n\n  /**\n   * Will return null if the buffer was not initialized\n   * @return {Float32Array|Uint32Array} Array.\n   */\n  getArray() {\n    return this.array;\n  }\n\n  /**\n   * @return {number} Usage.\n   */\n  getUsage() {\n    return this.usage;\n  }\n\n  /**\n   * Will return 0 if the buffer is not initialized\n   * @return {number} Array size\n   */\n  getSize() {\n    return this.array ? this.array.length : 0;\n  }\n}\n\n/**\n * Returns a typed array constructor based on the given buffer type\n * @param {number} type Buffer type, either ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER.\n * @return {Float32ArrayConstructor|Uint32ArrayConstructor} The typed array class to use for this buffer.\n */\nexport function getArrayClassForType(type) {\n  switch (type) {\n    case ARRAY_BUFFER:\n      return Float32Array;\n    case ELEMENT_ARRAY_BUFFER:\n      return Uint32Array;\n    default:\n      return Float32Array;\n  }\n}\n\nexport default WebGLArrayBuffer;\n","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored',\n};\n","/**\n * @module ol/webgl/PostProcessingPass\n */\n\nconst DEFAULT_VERTEX_SHADER = `\n  precision mediump float;\n  \n  attribute vec2 a_position;\n  varying vec2 v_texCoord;\n  varying vec2 v_screenCoord;\n  \n  uniform vec2 u_screenSize;\n   \n  void main() {\n    v_texCoord = a_position * 0.5 + 0.5;\n    v_screenCoord = v_texCoord * u_screenSize;\n    gl_Position = vec4(a_position, 0.0, 1.0);\n  }\n`;\n\nconst DEFAULT_FRAGMENT_SHADER = `\n  precision mediump float;\n   \n  uniform sampler2D u_image;\n   \n  varying vec2 v_texCoord;\n   \n  void main() {\n    gl_FragColor = texture2D(u_image, v_texCoord);\n  }\n`;\n\n/**\n * @typedef {Object} Options\n * @property {WebGLRenderingContext} webGlContext WebGL context; mandatory.\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"./Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {import(\"./Helper\").UniformValue} value Value\n * @property {number} location Location\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is used to define Post Processing passes with custom shaders and uniforms.\n * This is used internally by {@link module:ol/webgl/Helper~WebGLHelper}.\n *\n * Please note that the final output on the DOM canvas is expected to have premultiplied alpha, which means that\n * a pixel which is 100% red with an opacity of 50% must have a color of (r=0.5, g=0, b=0, a=0.5).\n * Failing to provide pixel colors with premultiplied alpha will result in render anomalies.\n *\n * The default post-processing pass does *not* multiply color values with alpha value, it expects color values to be\n * premultiplied.\n *\n * Default shaders are shown hereafter:\n *\n * * Vertex shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   attribute vec2 a_position;\n *   varying vec2 v_texCoord;\n *   varying vec2 v_screenCoord;\n *\n *   uniform vec2 u_screenSize;\n *\n *   void main() {\n *     v_texCoord = a_position * 0.5 + 0.5;\n *     v_screenCoord = v_texCoord * u_screenSize;\n *     gl_Position = vec4(a_position, 0.0, 1.0);\n *   }\n *   ```\n *\n * * Fragment shader:\n *\n *   ```\n *   precision mediump float;\n *\n *   uniform sampler2D u_image;\n *\n *   varying vec2 v_texCoord;\n *\n *   void main() {\n *     gl_FragColor = texture2D(u_image, v_texCoord);\n *   }\n *   ```\n *\n * @api\n */\nclass WebGLPostProcessingPass {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    this.gl_ = options.webGlContext;\n    const gl = this.gl_;\n\n    this.scaleRatio_ = options.scaleRatio || 1;\n\n    this.renderTargetTexture_ = gl.createTexture();\n    this.renderTargetTextureSize_ = null;\n\n    this.frameBuffer_ = gl.createFramebuffer();\n\n    // compile the program for the frame buffer\n    // TODO: make compilation errors show up\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(\n      vertexShader,\n      options.vertexShader || DEFAULT_VERTEX_SHADER\n    );\n    gl.compileShader(vertexShader);\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(\n      fragmentShader,\n      options.fragmentShader || DEFAULT_FRAGMENT_SHADER\n    );\n    gl.compileShader(fragmentShader);\n    this.renderTargetProgram_ = gl.createProgram();\n    gl.attachShader(this.renderTargetProgram_, vertexShader);\n    gl.attachShader(this.renderTargetProgram_, fragmentShader);\n    gl.linkProgram(this.renderTargetProgram_);\n\n    // bind the vertices buffer for the frame buffer\n    this.renderTargetVerticesBuffer_ = gl.createBuffer();\n    const verticesArray = [-1, -1, 1, -1, -1, 1, 1, -1, 1, 1, -1, 1];\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n    gl.bufferData(\n      gl.ARRAY_BUFFER,\n      new Float32Array(verticesArray),\n      gl.STATIC_DRAW\n    );\n\n    this.renderTargetAttribLocation_ = gl.getAttribLocation(\n      this.renderTargetProgram_,\n      'a_position'\n    );\n    this.renderTargetUniformLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_screenSize'\n    );\n    this.renderTargetTextureLocation_ = gl.getUniformLocation(\n      this.renderTargetProgram_,\n      'u_image'\n    );\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    options.uniforms &&\n      Object.keys(options.uniforms).forEach(\n        function (name) {\n          this.uniforms_.push({\n            value: options.uniforms[name],\n            location: gl.getUniformLocation(this.renderTargetProgram_, name),\n          });\n        }.bind(this)\n      );\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Initialize the render target texture of the post process, make sure it is at the\n   * right size and bind it as a render target for the next draw calls.\n   * The last step to be initialized will be the one where the primitives are rendered.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  init(frameState) {\n    const gl = this.getGL();\n    const textureSize = [\n      gl.drawingBufferWidth * this.scaleRatio_,\n      gl.drawingBufferHeight * this.scaleRatio_,\n    ];\n\n    // rendering goes to my buffer\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.getFrameBuffer());\n    gl.viewport(0, 0, textureSize[0], textureSize[1]);\n\n    // if size has changed: adjust canvas & render target texture\n    if (\n      !this.renderTargetTextureSize_ ||\n      this.renderTargetTextureSize_[0] !== textureSize[0] ||\n      this.renderTargetTextureSize_[1] !== textureSize[1]\n    ) {\n      this.renderTargetTextureSize_ = textureSize;\n\n      // create a new texture\n      const level = 0;\n      const internalFormat = gl.RGBA;\n      const border = 0;\n      const format = gl.RGBA;\n      const type = gl.UNSIGNED_BYTE;\n      const data = null;\n      gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        textureSize[0],\n        textureSize[1],\n        border,\n        format,\n        type,\n        data\n      );\n\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      // bind the texture to the framebuffer\n      gl.framebufferTexture2D(\n        gl.FRAMEBUFFER,\n        gl.COLOR_ATTACHMENT0,\n        gl.TEXTURE_2D,\n        this.renderTargetTexture_,\n        0\n      );\n    }\n  }\n\n  /**\n   * Render to the next postprocessing pass (or to the canvas if final pass).\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {WebGLPostProcessingPass} [nextPass] Next pass, optional\n   * @api\n   */\n  apply(frameState, nextPass) {\n    const gl = this.getGL();\n    const size = frameState.size;\n\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER,\n      nextPass ? nextPass.getFrameBuffer() : null\n    );\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindTexture(gl.TEXTURE_2D, this.renderTargetTexture_);\n\n    // render the frame buffer to the canvas\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.renderTargetVerticesBuffer_);\n\n    gl.useProgram(this.renderTargetProgram_);\n    gl.enableVertexAttribArray(this.renderTargetAttribLocation_);\n    gl.vertexAttribPointer(\n      this.renderTargetAttribLocation_,\n      2,\n      gl.FLOAT,\n      false,\n      0,\n      0\n    );\n    gl.uniform2f(this.renderTargetUniformLocation_, size[0], size[1]);\n    gl.uniform1i(this.renderTargetTextureLocation_, 0);\n\n    this.applyUniforms(frameState);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer\n   * @api\n   */\n  getFrameBuffer() {\n    return this.frameBuffer_;\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 1;\n    this.uniforms_.forEach(function (uniform) {\n      value =\n        typeof uniform.value === 'function'\n          ? uniform.value(frameState)\n          : uniform.value;\n\n      // apply value based on type\n      if (value instanceof HTMLCanvasElement || value instanceof ImageData) {\n        // create a texture & put data\n        if (!uniform.texture) {\n          uniform.texture = gl.createTexture();\n        }\n        gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n        gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n        if (value instanceof ImageData) {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            value.width,\n            value.height,\n            0,\n            gl.UNSIGNED_BYTE,\n            new Uint8Array(value.data)\n          );\n        } else {\n          gl.texImage2D(\n            gl.TEXTURE_2D,\n            0,\n            gl.RGBA,\n            gl.RGBA,\n            gl.UNSIGNED_BYTE,\n            value\n          );\n        }\n\n        // fill texture slots\n        gl.uniform1i(uniform.location, textureSlot++);\n      } else if (Array.isArray(value)) {\n        switch (value.length) {\n          case 2:\n            gl.uniform2f(uniform.location, value[0], value[1]);\n            return;\n          case 3:\n            gl.uniform3f(uniform.location, value[0], value[1], value[2]);\n            return;\n          case 4:\n            gl.uniform4f(\n              uniform.location,\n              value[0],\n              value[1],\n              value[2],\n              value[3]\n            );\n            return;\n          default:\n            return;\n        }\n      } else if (typeof value === 'number') {\n        gl.uniform1f(uniform.location, value);\n      }\n    });\n  }\n}\n\nexport default WebGLPostProcessingPass;\n","/**\n * @module ol/vec/mat4\n */\n\n/**\n * @return {Array<number>} \"4x4 matrix representing a 3D identity transform.\"\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {import(\"../transform.js\").Transform} transform Transformation matrix.\n * @return {Array<number>} \"2D transformation matrix as flattened 4x4 matrix.\"\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n","/**\n * @module ol/webgl/Helper\n */\nimport ContextEventType from '../webgl/ContextEventType.js';\nimport Disposable from '../Disposable.js';\nimport WebGLPostProcessingPass from './PostProcessingPass.js';\nimport {\n  FLOAT,\n  UNSIGNED_BYTE,\n  UNSIGNED_INT,\n  UNSIGNED_SHORT,\n  getContext,\n} from '../webgl.js';\nimport {clear} from '../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n} from '../transform.js';\nimport {create, fromTransform} from '../vec/mat4.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {import(\"./Buffer.js\").default} buffer Buffer.\n * @property {WebGLBuffer} webGlBuffer WebGlBuffer.\n */\n\n/**\n * Shader types, either `FRAGMENT_SHADER` or `VERTEX_SHADER`.\n * @enum {number}\n */\nexport const ShaderType = {\n  FRAGMENT_SHADER: 0x8b30,\n  VERTEX_SHADER: 0x8b31,\n};\n\n/**\n * Uniform names used in the default shaders: `PROJECTION_MATRIX`, `OFFSET_SCALE_MATRIX`.\n * and `OFFSET_ROTATION_MATRIX`.\n * @enum {string}\n */\nexport const DefaultUniform = {\n  PROJECTION_MATRIX: 'u_projectionMatrix',\n  OFFSET_SCALE_MATRIX: 'u_offsetScaleMatrix',\n  OFFSET_ROTATION_MATRIX: 'u_offsetRotateMatrix',\n  TIME: 'u_time',\n  ZOOM: 'u_zoom',\n  RESOLUTION: 'u_resolution',\n};\n\n/**\n * Attribute types, either `UNSIGNED_BYTE`, `UNSIGNED_SHORT`, `UNSIGNED_INT` or `FLOAT`\n * Note: an attribute stored in a `Float32Array` should be of type `FLOAT`.\n * @enum {number}\n */\nexport const AttributeType = {\n  UNSIGNED_BYTE: UNSIGNED_BYTE,\n  UNSIGNED_SHORT: UNSIGNED_SHORT,\n  UNSIGNED_INT: UNSIGNED_INT,\n  FLOAT: FLOAT,\n};\n\n/**\n * Description of an attribute in a buffer\n * @typedef {Object} AttributeDescription\n * @property {string} name Attribute name to use in shaders\n * @property {number} size Number of components per attributes\n * @property {AttributeType} [type] Attribute type, i.e. number of bytes used to store the value. This is\n * determined by the class of typed array which the buffer uses (eg. `Float32Array` for a `FLOAT` attribute).\n * Default is `FLOAT`.\n */\n\n/**\n * @typedef {number|Array<number>|HTMLCanvasElement|HTMLImageElement|ImageData|import(\"../transform\").Transform} UniformLiteralValue\n */\n\n/**\n * Uniform value can be a number, array of numbers (2 to 4), canvas element or a callback returning\n * one of the previous types.\n * @typedef {UniformLiteralValue|function(import(\"../PluggableMap.js\").FrameState):UniformLiteralValue} UniformValue\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas which will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {Object<string,UniformValue>} [uniforms] Uniform definitions; property names must match the uniform\n * names in the provided or default shaders.\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @typedef {Object} UniformInternalDescription\n * @property {string} name Name\n * @property {UniformValue} [value] Value\n * @property {WebGLTexture} [texture] Texture\n * @private\n */\n\n/**\n * @classdesc\n * This class is intended to provide low-level functions related to WebGL rendering, so that accessing\n * directly the WebGL API should not be required anymore.\n *\n * Several operations are handled by the `WebGLHelper` class:\n *\n * ### Define custom shaders and uniforms\n *\n *   *Shaders* are low-level programs executed on the GPU and written in GLSL. There are two types of shaders:\n *\n *   Vertex shaders are used to manipulate the position and attribute of *vertices* of rendered primitives (ie. corners of a square).\n *   Outputs are:\n *\n *   * `gl_Position`: position of the vertex in screen space\n *\n *   * Varyings usually prefixed with `v_` are passed on to the fragment shader\n *\n *   Fragment shaders are used to control the actual color of the pixels drawn on screen. Their only output is `gl_FragColor`.\n *\n *   Both shaders can take *uniforms* or *attributes* as input. Attributes are explained later. Uniforms are common, read-only values that\n *   can be changed at every frame and can be of type float, arrays of float or images.\n *\n *   Shaders must be compiled and assembled into a program like so:\n *   ```js\n *   // here we simply create two shaders and assemble them in a program which is then used\n *   // for subsequent rendering calls\n *   const vertexShader = new WebGLVertex(VERTEX_SHADER);\n *   const fragmentShader = new WebGLFragment(FRAGMENT_SHADER);\n *   const program = this.context.getProgram(fragmentShader, vertexShader);\n *   helper.useProgram(this.program);\n *   ```\n *\n *   Uniforms are defined using the `uniforms` option and can either be explicit values or callbacks taking the frame state as argument.\n *   You can also change their value along the way like so:\n *   ```js\n *   helper.setUniformFloatValue('u_value', valueAsNumber);\n *   ```\n *\n * ### Defining post processing passes\n *\n *   *Post processing* describes the act of rendering primitives to a texture, and then rendering this texture to the final canvas\n *   while applying special effects in screen space.\n *   Typical uses are: blurring, color manipulation, depth of field, filtering...\n *\n *   The `WebGLHelper` class offers the possibility to define post processes at creation time using the `postProcesses` option.\n *   A post process step accepts the following options:\n *\n *   * `fragmentShader` and `vertexShader`: text literals in GLSL language that will be compiled and used in the post processing step.\n *   * `uniforms`: uniforms can be defined for the post processing steps just like for the main render.\n *   * `scaleRatio`: allows using an intermediate texture smaller or higher than the final canvas in the post processing step.\n *     This is typically used in blur steps to reduce the performance overhead by using an already downsampled texture as input.\n *\n *   The {@link module:ol/webgl/PostProcessingPass~WebGLPostProcessingPass} class is used internally, refer to its documentation for more info.\n *\n * ### Binding WebGL buffers and flushing data into them\n *\n *   Data that must be passed to the GPU has to be transferred using {@link module:ol/webgl/Buffer~WebGLArrayBuffer} objects.\n *   A buffer has to be created only once, but must be bound every time the buffer content will be used for rendering.\n *   This is done using {@link bindBuffer}.\n *   When the buffer's array content has changed, the new data has to be flushed to the GPU memory; this is done using\n *   {@link flushBufferData}. Note: this operation is expensive and should be done as infrequently as possible.\n *\n *   When binding an array buffer, a `target` parameter must be given: it should be either {@link module:ol/webgl.ARRAY_BUFFER}\n *   (if the buffer contains vertices data) or {@link module:ol/webgl.ELEMENT_ARRAY_BUFFER} (if the buffer contains indices data).\n *\n *   Examples below:\n *   ```js\n *   // at initialization phase\n *   const verticesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *   const indicesBuffer = new WebGLArrayBuffer([], DYNAMIC_DRAW);\n *\n *   // when array values have changed\n *   helper.flushBufferData(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.flushBufferData(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *\n *   // at rendering phase\n *   helper.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n *   helper.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n *   ```\n *\n * ### Specifying attributes\n *\n *   The GPU only receives the data as arrays of numbers. These numbers must be handled differently depending on what it describes (position, texture coordinate...).\n *   Attributes are used to specify these uses. Use {@link enableAttributeArray_} and either\n *   the default attribute names in {@link module:ol/webgl/Helper.DefaultAttrib} or custom ones.\n *\n *   Please note that you will have to specify the type and offset of the attributes in the data array. You can refer to the documentation of [WebGLRenderingContext.vertexAttribPointer](https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer) for more explanation.\n *   ```js\n *   // here we indicate that the data array has the following structure:\n *   // [posX, posY, offsetX, offsetY, texCoordU, texCoordV, posX, posY, ...]\n *   helper.enableAttributes([\n *     {\n *        name: 'a_position',\n *        size: 2\n *     },\n *     {\n *       name: 'a_offset',\n *       size: 2\n *     },\n *     {\n *       name: 'a_texCoord',\n *       size: 2\n *     }\n *   ])\n *   ```\n *\n * ### Rendering primitives\n *\n *   Once all the steps above have been achieved, rendering primitives to the screen is done using {@link prepareDraw}, {@link drawElements} and {@link finalizeDraw}.\n *   ```js\n *   // frame preparation step\n *   helper.prepareDraw(frameState);\n *\n *   // call this for every data array that has to be rendered on screen\n *   helper.drawElements(0, this.indicesBuffer.getArray().length);\n *\n *   // finalize the rendering by applying post processes\n *   helper.finalizeDraw(frameState);\n *   ```\n *\n * For an example usage of this class, refer to {@link module:ol/renderer/webgl/PointsLayer~WebGLPointsLayerRenderer}.\n *\n *\n * @api\n */\nclass WebGLHelper extends Disposable {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n    const options = opt_options || {};\n\n    /** @private */\n    this.boundHandleWebGLContextLost_ = this.handleWebGLContextLost.bind(this);\n\n    /** @private */\n    this.boundHandleWebGLContextRestored_ =\n      this.handleWebGLContextRestored.bind(this);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = document.createElement('canvas');\n    this.canvas_.style.position = 'absolute';\n    this.canvas_.style.left = '0';\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_);\n    const gl = this.getGL();\n\n    /**\n     * @private\n     * @type {!Object<string, BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Object>}\n     */\n    this.extensionCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    this.canvas_.addEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.addEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"../transform.js\").Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {Object<string, WebGLUniformLocation>}\n     */\n    this.uniformLocations_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.attribLocations_ = {};\n\n    /**\n     * Holds info about custom uniforms used in the post processing pass.\n     * If the uniform is a texture, the WebGL Texture object will be stored here.\n     * @type {Array<UniformInternalDescription>}\n     * @private\n     */\n    this.uniforms_ = [];\n    if (options.uniforms) {\n      for (const name in options.uniforms) {\n        this.uniforms_.push({\n          name: name,\n          value: options.uniforms[name],\n        });\n      }\n    }\n\n    /**\n     * An array of PostProcessingPass objects is kept in this variable, built from the steps provided in the\n     * options. If no post process was given, a default one is used (so as not to have to make an exception to\n     * the frame buffer logic).\n     * @type {Array<WebGLPostProcessingPass>}\n     * @private\n     */\n    this.postProcessPasses_ = options.postProcesses\n      ? options.postProcesses.map(function (options) {\n          return new WebGLPostProcessingPass({\n            webGlContext: gl,\n            scaleRatio: options.scaleRatio,\n            vertexShader: options.vertexShader,\n            fragmentShader: options.fragmentShader,\n            uniforms: options.uniforms,\n          });\n        })\n      : [new WebGLPostProcessingPass({webGlContext: gl})];\n\n    /**\n     * @type {string|null}\n     * @private\n     */\n    this.shaderCompileErrors_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.startTime_ = Date.now();\n  }\n\n  /**\n   * Get a WebGL extension.  If the extension is not supported, null is returned.\n   * Extensions are cached after they are enabled for the first time.\n   * @param {string} name The extension name.\n   * @return {Object} The extension or null if not supported.\n   */\n  getExtension(name) {\n    if (name in this.extensionCache_) {\n      return this.extensionCache_[name];\n    }\n    const extension = this.gl_.getExtension(name);\n    this.extensionCache_[name] = extension;\n    return extension;\n  }\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  bindBuffer(buffer) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buffer);\n    let bufferCache = this.bufferCache_[bufferKey];\n    if (!bufferCache) {\n      const webGlBuffer = gl.createBuffer();\n      bufferCache = {\n        buffer: buffer,\n        webGlBuffer: webGlBuffer,\n      };\n      this.bufferCache_[bufferKey] = bufferCache;\n    }\n    gl.bindBuffer(buffer.getType(), bufferCache.webGlBuffer);\n  }\n\n  /**\n   * Update the data contained in the buffer array; this is required for the\n   * new data to be rendered\n   * @param {import(\"./Buffer\").default} buffer Buffer.\n   * @api\n   */\n  flushBufferData(buffer) {\n    const gl = this.getGL();\n    this.bindBuffer(buffer);\n    gl.bufferData(buffer.getType(), buffer.getArray(), buffer.getUsage());\n  }\n\n  /**\n   * @param {import(\"./Buffer.js\").default} buf Buffer.\n   */\n  deleteBuffer(buf) {\n    const gl = this.getGL();\n    const bufferKey = getUid(buf);\n    const bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (bufferCacheEntry && !gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.webGlBuffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.canvas_.removeEventListener(\n      ContextEventType.LOST,\n      this.boundHandleWebGLContextLost_\n    );\n    this.canvas_.removeEventListener(\n      ContextEventType.RESTORED,\n      this.boundHandleWebGLContextRestored_\n    );\n\n    const extension = this.gl_.getExtension('WEBGL_lose_context');\n    if (extension) {\n      extension.loseContext();\n    }\n    delete this.gl_;\n    delete this.canvas_;\n  }\n\n  /**\n   * Clear the buffer & set the viewport to draw.\n   * Post process passes will be initialized here, the first one being bound as a render target for\n   * subsequent draw calls.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   * @api\n   */\n  prepareDraw(frameState, opt_disableAlphaBlend) {\n    const gl = this.getGL();\n    const canvas = this.getCanvas();\n    const size = frameState.size;\n    const pixelRatio = frameState.pixelRatio;\n\n    canvas.width = size[0] * pixelRatio;\n    canvas.height = size[1] * pixelRatio;\n    canvas.style.width = size[0] + 'px';\n    canvas.style.height = size[1] + 'px';\n\n    gl.useProgram(this.currentProgram_);\n\n    // loop backwards in post processes list\n    for (let i = this.postProcessPasses_.length - 1; i >= 0; i--) {\n      this.postProcessPasses_[i].init(frameState);\n    }\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(\n      gl.ONE,\n      opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Clear the render target & bind it for future draw operations.\n   * This is similar to `prepareDraw`, only post processes will not be applied.\n   * Note: the whole viewport will be drawn to the render target, regardless of its size.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @param {import(\"./RenderTarget.js\").default} renderTarget Render target to draw to\n   * @param {boolean} [opt_disableAlphaBlend] If true, no alpha blending will happen.\n   */\n  prepareDrawToRenderTarget(frameState, renderTarget, opt_disableAlphaBlend) {\n    const gl = this.getGL();\n    const size = renderTarget.getSize();\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, renderTarget.getFramebuffer());\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.bindTexture(gl.TEXTURE_2D, renderTarget.getTexture());\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(\n      gl.ONE,\n      opt_disableAlphaBlend ? gl.ZERO : gl.ONE_MINUS_SRC_ALPHA\n    );\n\n    gl.useProgram(this.currentProgram_);\n    this.applyFrameState(frameState);\n    this.applyUniforms(frameState);\n  }\n\n  /**\n   * Execute a draw call based on the currently bound program, texture, buffers, attributes.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   * @api\n   */\n  drawElements(start, end) {\n    const gl = this.getGL();\n    this.getExtension('OES_element_index_uint');\n\n    const elementType = gl.UNSIGNED_INT;\n    const elementSize = 4;\n\n    const numItems = end - start;\n    const offsetInBytes = start * elementSize;\n    gl.drawElements(gl.TRIANGLES, numItems, elementType, offsetInBytes);\n  }\n\n  /**\n   * Apply the successive post process passes which will eventually render to the actual canvas.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState current frame state\n   * @api\n   */\n  finalizeDraw(frameState) {\n    // apply post processes using the next one as target\n    for (let i = 0; i < this.postProcessPasses_.length; i++) {\n      this.postProcessPasses_[i].apply(\n        frameState,\n        this.postProcessPasses_[i + 1] || null\n      );\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   * @api\n   */\n  getCanvas() {\n    return this.canvas_;\n  }\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  getGL() {\n    return this.gl_;\n  }\n\n  /**\n   * Sets the default matrix uniforms for a given frame state. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyFrameState(frameState) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n\n    const offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    const offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_SCALE_MATRIX,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix)\n    );\n    this.setUniformMatrixValue(\n      DefaultUniform.OFFSET_ROTATION_MATRIX,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix)\n    );\n\n    this.setUniformFloatValue(\n      DefaultUniform.TIME,\n      (Date.now() - this.startTime_) * 0.001\n    );\n    this.setUniformFloatValue(DefaultUniform.ZOOM, frameState.viewState.zoom);\n    this.setUniformFloatValue(\n      DefaultUniform.RESOLUTION,\n      frameState.viewState.resolution\n    );\n  }\n\n  /**\n   * Sets the custom uniforms based on what was given in the constructor. This is called internally in `prepareDraw`.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  applyUniforms(frameState) {\n    const gl = this.getGL();\n\n    let value;\n    let textureSlot = 0;\n    this.uniforms_.forEach(\n      function (uniform) {\n        value =\n          typeof uniform.value === 'function'\n            ? uniform.value(frameState)\n            : uniform.value;\n\n        // apply value based on type\n        if (\n          value instanceof HTMLCanvasElement ||\n          value instanceof HTMLImageElement ||\n          value instanceof ImageData\n        ) {\n          // create a texture & put data\n          if (!uniform.texture) {\n            uniform.prevValue = undefined;\n            uniform.texture = gl.createTexture();\n          }\n          gl.activeTexture(gl[`TEXTURE${textureSlot}`]);\n          gl.bindTexture(gl.TEXTURE_2D, uniform.texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n          const imageReady =\n            !(value instanceof HTMLImageElement) ||\n            /** @type {HTMLImageElement} */ (value).complete;\n          if (imageReady && uniform.prevValue !== value) {\n            uniform.prevValue = value;\n            gl.texImage2D(\n              gl.TEXTURE_2D,\n              0,\n              gl.RGBA,\n              gl.RGBA,\n              gl.UNSIGNED_BYTE,\n              value\n            );\n          }\n\n          // fill texture slots by increasing index\n          gl.uniform1i(this.getUniformLocation(uniform.name), textureSlot++);\n        } else if (Array.isArray(value) && value.length === 6) {\n          this.setUniformMatrixValue(\n            uniform.name,\n            fromTransform(this.tmpMat4_, value)\n          );\n        } else if (Array.isArray(value) && value.length <= 4) {\n          switch (value.length) {\n            case 2:\n              gl.uniform2f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1]\n              );\n              return;\n            case 3:\n              gl.uniform3f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2]\n              );\n              return;\n            case 4:\n              gl.uniform4f(\n                this.getUniformLocation(uniform.name),\n                value[0],\n                value[1],\n                value[2],\n                value[3]\n              );\n              return;\n            default:\n              return;\n          }\n        } else if (typeof value === 'number') {\n          gl.uniform1f(this.getUniformLocation(uniform.name), value);\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  useProgram(program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      const gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      this.uniformLocations_ = {};\n      this.attribLocations_ = {};\n      return true;\n    }\n  }\n\n  /**\n   * Will attempt to compile a vertex or fragment shader based on source\n   * On error, the shader will be returned but\n   * `gl.getShaderParameter(shader, gl.COMPILE_STATUS)` will return `true`\n   * Use `gl.getShaderInfoLog(shader)` to have details\n   * @param {string} source Shader source\n   * @param {ShaderType} type VERTEX_SHADER or FRAGMENT_SHADER\n   * @return {WebGLShader} Shader object\n   */\n  compileShader(source, type) {\n    const gl = this.getGL();\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    return shader;\n  }\n\n  /**\n   * Create a program for a vertex and fragment shader.  Throws if shader compilation fails.\n   * @param {string} fragmentShaderSource Fragment shader source.\n   * @param {string} vertexShaderSource Vertex shader source.\n   * @return {WebGLProgram} Program\n   * @api\n   */\n  getProgram(fragmentShaderSource, vertexShaderSource) {\n    const gl = this.getGL();\n\n    const fragmentShader = this.compileShader(\n      fragmentShaderSource,\n      gl.FRAGMENT_SHADER\n    );\n\n    const vertexShader = this.compileShader(\n      vertexShaderSource,\n      gl.VERTEX_SHADER\n    );\n\n    const program = gl.createProgram();\n    gl.attachShader(program, fragmentShader);\n    gl.attachShader(program, vertexShader);\n    gl.linkProgram(program);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      const message = `Fragment shader compliation failed: ${gl.getShaderInfoLog(\n        fragmentShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(fragmentShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      const message = `Vertex shader compilation failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n    gl.deleteShader(vertexShader);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      const message = `GL program linking failed: ${gl.getShaderInfoLog(\n        vertexShader\n      )}`;\n      throw new Error(message);\n    }\n\n    return program;\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Uniform name\n   * @return {WebGLUniformLocation} uniformLocation\n   * @api\n   */\n  getUniformLocation(name) {\n    if (this.uniformLocations_[name] === undefined) {\n      this.uniformLocations_[name] = this.getGL().getUniformLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.uniformLocations_[name];\n  }\n\n  /**\n   * Will get the location from the shader or the cache\n   * @param {string} name Attribute name\n   * @return {number} attribLocation\n   * @api\n   */\n  getAttributeLocation(name) {\n    if (this.attribLocations_[name] === undefined) {\n      this.attribLocations_[name] = this.getGL().getAttribLocation(\n        this.currentProgram_,\n        name\n      );\n    }\n    return this.attribLocations_[name];\n  }\n\n  /**\n   * Modifies the given transform to apply the rotation/translation/scaling of the given frame state.\n   * The resulting transform can be used to convert world space coordinates to view coordinates.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../transform\").Transform} transform Transform to update.\n   * @return {import(\"../transform\").Transform} The updated transform object.\n   * @api\n   */\n  makeProjectionTransform(frameState, transform) {\n    const size = frameState.size;\n    const rotation = frameState.viewState.rotation;\n    const resolution = frameState.viewState.resolution;\n    const center = frameState.viewState.center;\n\n    resetTransform(transform);\n    composeTransform(\n      transform,\n      0,\n      0,\n      2 / (resolution * size[0]),\n      2 / (resolution * size[1]),\n      -rotation,\n      -center[0],\n      -center[1]\n    );\n    return transform;\n  }\n\n  /**\n   * Give a value for a standard float uniform\n   * @param {string} uniform Uniform name\n   * @param {number} value Value\n   * @api\n   */\n  setUniformFloatValue(uniform, value) {\n    this.getGL().uniform1f(this.getUniformLocation(uniform), value);\n  }\n\n  /**\n   * Give a value for a standard matrix4 uniform\n   * @param {string} uniform Uniform name\n   * @param {Array<number>} value Matrix value\n   * @api\n   */\n  setUniformMatrixValue(uniform, value) {\n    this.getGL().uniformMatrix4fv(\n      this.getUniformLocation(uniform),\n      false,\n      value\n    );\n  }\n\n  /**\n   * Will set the currently bound buffer to an attribute of the shader program. Used by `#enableAttributes`\n   * internally.\n   * @param {string} attribName Attribute name\n   * @param {number} size Number of components per attributes\n   * @param {number} type UNSIGNED_INT, UNSIGNED_BYTE, UNSIGNED_SHORT or FLOAT\n   * @param {number} stride Stride in bytes (0 means attribs are packed)\n   * @param {number} offset Offset in bytes\n   * @private\n   */\n  enableAttributeArray_(attribName, size, type, stride, offset) {\n    const location = this.getAttributeLocation(attribName);\n    // the attribute has not been found in the shaders; do not enable it\n    if (location < 0) {\n      return;\n    }\n    this.getGL().enableVertexAttribArray(location);\n    this.getGL().vertexAttribPointer(\n      location,\n      size,\n      type,\n      false,\n      stride,\n      offset\n    );\n  }\n\n  /**\n   * Will enable the following attributes to be read from the currently bound buffer,\n   * i.e. tell the GPU where to read the different attributes in the buffer. An error in the\n   * size/type/order of attributes will most likely break the rendering and throw a WebGL exception.\n   * @param {Array<AttributeDescription>} attributes Ordered list of attributes to read from the buffer\n   * @api\n   */\n  enableAttributes(attributes) {\n    const stride = computeAttributesStride(attributes);\n    let offset = 0;\n    for (let i = 0; i < attributes.length; i++) {\n      const attr = attributes[i];\n      this.enableAttributeArray_(\n        attr.name,\n        attr.size,\n        attr.type || FLOAT,\n        stride,\n        offset\n      );\n      offset += attr.size * getByteSizeFromType(attr.type);\n    }\n  }\n\n  /**\n   * WebGL context was lost\n   * @private\n   */\n  handleWebGLContextLost() {\n    clear(this.bufferCache_);\n    this.currentProgram_ = null;\n  }\n\n  /**\n   * WebGL context was restored\n   * @private\n   */\n  handleWebGLContextRestored() {}\n\n  /**\n   * Will create or reuse a given webgl texture and apply the given size. If no image data\n   * specified, the texture will be empty, otherwise image data will be used and the `size`\n   * parameter will be ignored.\n   * Note: wrap parameters are set to clamp to edge, min filter is set to linear.\n   * @param {Array<number>} size Expected size of the texture\n   * @param {ImageData|HTMLImageElement|HTMLCanvasElement} [opt_data] Image data/object to bind to the texture\n   * @param {WebGLTexture} [opt_texture] Existing texture to reuse\n   * @return {WebGLTexture} The generated texture\n   * @api\n   */\n  createTexture(size, opt_data, opt_texture) {\n    const gl = this.getGL();\n    const texture = opt_texture || gl.createTexture();\n\n    // set params & size\n    const level = 0;\n    const internalFormat = gl.RGBA;\n    const border = 0;\n    const format = gl.RGBA;\n    const type = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    if (opt_data) {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        format,\n        type,\n        opt_data\n      );\n    } else {\n      gl.texImage2D(\n        gl.TEXTURE_2D,\n        level,\n        internalFormat,\n        size[0],\n        size[1],\n        border,\n        format,\n        type,\n        null\n      );\n    }\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n    return texture;\n  }\n}\n\n/**\n * Compute a stride in bytes based on a list of attributes\n * @param {Array<AttributeDescription>} attributes Ordered list of attributes\n * @return {number} Stride, ie amount of values for each vertex in the vertex buffer\n * @api\n */\nexport function computeAttributesStride(attributes) {\n  let stride = 0;\n  for (let i = 0; i < attributes.length; i++) {\n    const attr = attributes[i];\n    stride += attr.size * getByteSizeFromType(attr.type);\n  }\n  return stride;\n}\n\n/**\n * Computes the size in byte of an attribute type.\n * @param {AttributeType} type Attribute type\n * @return {number} The size in bytes\n */\nfunction getByteSizeFromType(type) {\n  switch (type) {\n    case AttributeType.UNSIGNED_BYTE:\n      return Uint8Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_SHORT:\n      return Uint16Array.BYTES_PER_ELEMENT;\n    case AttributeType.UNSIGNED_INT:\n      return Uint32Array.BYTES_PER_ELEMENT;\n    case AttributeType.FLOAT:\n    default:\n      return Float32Array.BYTES_PER_ELEMENT;\n  }\n}\n\nexport default WebGLHelper;\n","/**\n * @module ol/renderer/webgl/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLHelper from '../../webgl/Helper.js';\n\n/**\n * @enum {string}\n */\nexport const WebGLWorkerMessageType = {\n  GENERATE_BUFFERS: 'GENERATE_BUFFERS',\n};\n\n/**\n * @typedef {Object} WebGLWorkerGenerateBuffersMessage\n * This message will trigger the generation of a vertex and an index buffer based on the given render instructions.\n * When the buffers are generated, the worked will send a message of the same type to the main thread, with\n * the generated buffers in it.\n * Note that any addition properties present in the message *will* be sent back to the main thread.\n * @property {WebGLWorkerMessageType} type Message type\n * @property {ArrayBuffer} renderInstructions Render instructions raw binary buffer.\n * @property {ArrayBuffer} [vertexBuffer] Vertices array raw binary buffer (sent by the worker).\n * @property {ArrayBuffer} [indexBuffer] Indices array raw binary buffer (sent by the worker).\n * @property {number} [customAttributesCount] Amount of custom attributes count in the render instructions.\n */\n\n/**\n * @typedef {Object} PostProcessesOptions\n * @property {number} [scaleRatio] Scale ratio; if < 1, the post process will render to a texture smaller than\n * the main canvas that will then be sampled up (useful for saving resource on blur steps).\n * @property {string} [vertexShader] Vertex shader source\n * @property {string} [fragmentShader] Fragment shader source\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process step\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * @property {Array<PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * Base WebGL renderer class.\n * Holds all logic related to data manipulation & some common rendering logic\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass WebGLLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(layer, opt_options) {\n    super(layer);\n\n    const options = opt_options || {};\n\n    /**\n     * @type {WebGLHelper}\n     * @protected\n     */\n    this.helper = new WebGLHelper({\n      postProcesses: options.postProcesses,\n      uniforms: options.uniforms,\n    });\n\n    if (options.className !== undefined) {\n      this.helper.getCanvas().className = options.className;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.helper.dispose();\n    delete this.helper;\n\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      // RenderEvent does not get a context or an inversePixelTransform, because WebGL allows much less direct editing than Canvas2d does.\n      const event = new RenderEvent(type, null, frameState, null);\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, frameState);\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, frameState);\n  }\n}\n\nconst tmpArray_ = [];\nconst bufferPositions_ = {vertexPosition: 0, indexPosition: 0};\n\nfunction writePointVertex(buffer, pos, x, y, index) {\n  buffer[pos + 0] = x;\n  buffer[pos + 1] = y;\n  buffer[pos + 2] = index;\n}\n\n/**\n * An object holding positions both in an index and a vertex buffer.\n * @typedef {Object} BufferPositions\n * @property {number} vertexPosition Position in the vertex buffer\n * @property {number} indexPosition Position in the index buffer\n */\n\n/**\n * Pushes a quad (two triangles) based on a point geometry\n * @param {Float32Array} instructions Array of render instructions for points.\n * @param {number} elementIndex Index from which render instructions will be read.\n * @param {Float32Array} vertexBuffer Buffer in the form of a typed array.\n * @param {Uint32Array} indexBuffer Buffer in the form of a typed array.\n * @param {number} customAttributesCount Amount of custom attributes for each element.\n * @param {BufferPositions} [bufferPositions] Buffer write positions; if not specified, positions will be set at 0.\n * @return {BufferPositions} New buffer positions where to write next\n * @property {number} vertexPosition New position in the vertex buffer where future writes should start.\n * @property {number} indexPosition New position in the index buffer where future writes should start.\n * @private\n */\nexport function writePointFeatureToBuffers(\n  instructions,\n  elementIndex,\n  vertexBuffer,\n  indexBuffer,\n  customAttributesCount,\n  bufferPositions\n) {\n  // This is for x, y and index\n  const baseVertexAttrsCount = 3;\n  const baseInstructionsCount = 2;\n  const stride = baseVertexAttrsCount + customAttributesCount;\n\n  const x = instructions[elementIndex + 0];\n  const y = instructions[elementIndex + 1];\n\n  // read custom numerical attributes on the feature\n  const customAttrs = tmpArray_;\n  customAttrs.length = customAttributesCount;\n  for (let i = 0; i < customAttrs.length; i++) {\n    customAttrs[i] = instructions[elementIndex + baseInstructionsCount + i];\n  }\n\n  let vPos = bufferPositions ? bufferPositions.vertexPosition : 0;\n  let iPos = bufferPositions ? bufferPositions.indexPosition : 0;\n  const baseIndex = vPos / stride;\n\n  // push vertices for each of the four quad corners (first standard then custom attributes)\n  writePointVertex(vertexBuffer, vPos, x, y, 0);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 1);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 2);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  writePointVertex(vertexBuffer, vPos, x, y, 3);\n  customAttrs.length &&\n    vertexBuffer.set(customAttrs, vPos + baseVertexAttrsCount);\n  vPos += stride;\n\n  indexBuffer[iPos++] = baseIndex;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 3;\n  indexBuffer[iPos++] = baseIndex + 1;\n  indexBuffer[iPos++] = baseIndex + 2;\n  indexBuffer[iPos++] = baseIndex + 3;\n\n  bufferPositions_.vertexPosition = vPos;\n  bufferPositions_.indexPosition = iPos;\n\n  return bufferPositions_;\n}\n\n/**\n * Returns a texture of 1x1 pixel, white\n * @private\n * @return {ImageData} Image data.\n */\nexport function getBlankImageData() {\n  const canvas = document.createElement('canvas');\n  const image = canvas.getContext('2d').createImageData(1, 1);\n  image.data[0] = 255;\n  image.data[1] = 255;\n  image.data[2] = 255;\n  image.data[3] = 255;\n  return image;\n}\n\n/**\n * Generates a color array based on a numerical id\n * Note: the range for each component is 0 to 1 with 256 steps\n * @param {number} id Id\n * @param {Array<number>} [opt_array] Reusable array\n * @return {Array<number>} Color array containing the encoded id\n */\nexport function colorEncodeId(id, opt_array) {\n  const array = opt_array || [];\n  const radix = 256;\n  const divide = radix - 1;\n  array[0] = Math.floor(id / radix / radix / radix) / divide;\n  array[1] = (Math.floor(id / radix / radix) % radix) / divide;\n  array[2] = (Math.floor(id / radix) % radix) / divide;\n  array[3] = (id % radix) / divide;\n  return array;\n}\n\n/**\n * Reads an id from a color-encoded array\n * Note: the expected range for each component is 0 to 1 with 256 steps.\n * @param {Array<number>} color Color array containing the encoded id\n * @return {number} Decoded id\n */\nexport function colorDecodeId(color) {\n  let id = 0;\n  const radix = 256;\n  const mult = radix - 1;\n  id += Math.round(color[0] * radix * radix * radix * mult);\n  id += Math.round(color[1] * radix * radix * mult);\n  id += Math.round(color[2] * radix * mult);\n  id += Math.round(color[3] * mult);\n  return id;\n}\n\nexport default WebGLLayerRenderer;\n","/**\n * A wrapper class to simplify rendering to a texture instead of the final canvas\n * @module ol/webgl/RenderTarget\n */\nimport {equals} from '../array.js';\n\n// for pixel color reading\nconst tmpArray4 = new Uint8Array(4);\n\n/**\n * @classdesc\n * This class is a wrapper around the association of both a `WebGLTexture` and a `WebGLFramebuffer` instances,\n * simplifying initialization and binding for rendering.\n * @api\n */\nclass WebGLRenderTarget {\n  /**\n   * @param {import(\"./Helper.js\").default} helper WebGL helper; mandatory.\n   * @param {Array<number>} [opt_size] Expected size of the render target texture; note: this can be changed later on.\n   */\n  constructor(helper, opt_size) {\n    /**\n     * @private\n     * @type {import(\"./Helper.js\").default}\n     */\n    this.helper_ = helper;\n    const gl = helper.getGL();\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.texture_ = gl.createTexture();\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer_ = gl.createFramebuffer();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = opt_size || [1, 1];\n\n    /**\n     * @type {Uint8Array}\n     * @private\n     */\n    this.data_ = new Uint8Array(0);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dataCacheDirty_ = true;\n\n    this.updateSize_();\n  }\n\n  /**\n   * Changes the size of the render target texture. Note: will do nothing if the size\n   * is already the same.\n   * @param {Array<number>} size Expected size of the render target texture\n   * @api\n   */\n  setSize(size) {\n    if (equals(size, this.size_)) {\n      return;\n    }\n    this.size_[0] = size[0];\n    this.size_[1] = size[1];\n    this.updateSize_();\n  }\n\n  /**\n   * Returns the size of the render target texture\n   * @return {Array<number>} Size of the render target texture\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * This will cause following calls to `#readAll` or `#readPixel` to download the content of the\n   * render target into memory, which is an expensive operation.\n   * This content will be kept in cache but should be cleared after each new render.\n   * @api\n   */\n  clearCachedData() {\n    this.dataCacheDirty_ = true;\n  }\n\n  /**\n   * Returns the full content of the frame buffer as a series of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * @return {Uint8Array} Integer array of color values\n   * @api\n   */\n  readAll() {\n    if (this.dataCacheDirty_) {\n      const size = this.size_;\n      const gl = this.helper_.getGL();\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n      gl.readPixels(\n        0,\n        0,\n        size[0],\n        size[1],\n        gl.RGBA,\n        gl.UNSIGNED_BYTE,\n        this.data_\n      );\n      this.dataCacheDirty_ = false;\n    }\n    return this.data_;\n  }\n\n  /**\n   * Reads one pixel of the frame buffer as an array of r, g, b, a components\n   * in the 0-255 range (unsigned byte).\n   * If x and/or y are outside of existing data, an array filled with 0 is returned.\n   * @param {number} x Pixel coordinate\n   * @param {number} y Pixel coordinate\n   * @return {Uint8Array} Integer array with one color value (4 components)\n   * @api\n   */\n  readPixel(x, y) {\n    if (x < 0 || y < 0 || x > this.size_[0] || y >= this.size_[1]) {\n      tmpArray4[0] = 0;\n      tmpArray4[1] = 0;\n      tmpArray4[2] = 0;\n      tmpArray4[3] = 0;\n      return tmpArray4;\n    }\n\n    this.readAll();\n    const index =\n      Math.floor(x) + (this.size_[1] - Math.floor(y) - 1) * this.size_[0];\n    tmpArray4[0] = this.data_[index * 4];\n    tmpArray4[1] = this.data_[index * 4 + 1];\n    tmpArray4[2] = this.data_[index * 4 + 2];\n    tmpArray4[3] = this.data_[index * 4 + 3];\n    return tmpArray4;\n  }\n\n  /**\n   * @return {WebGLTexture} Texture to render to\n   */\n  getTexture() {\n    return this.texture_;\n  }\n\n  /**\n   * @return {WebGLFramebuffer} Frame buffer of the render target\n   */\n  getFramebuffer() {\n    return this.framebuffer_;\n  }\n\n  /**\n   * @private\n   */\n  updateSize_() {\n    const size = this.size_;\n    const gl = this.helper_.getGL();\n\n    this.texture_ = this.helper_.createTexture(size, null, this.texture_);\n\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer_);\n    gl.viewport(0, 0, size[0], size[1]);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER,\n      gl.COLOR_ATTACHMENT0,\n      gl.TEXTURE_2D,\n      this.texture_,\n      0\n    );\n\n    this.data_ = new Uint8Array(size[0] * size[1] * 4);\n  }\n}\n\nexport default WebGLRenderTarget;\n","\n        const source = \"var e=\\\"function\\\"==typeof Object.assign?Object.assign:function(e,n){if(null==e)throw new TypeError(\\\"Cannot convert undefined or null to object\\\");for(var t=Object(e),r=1,o=arguments.length;r<o;++r){var i=arguments[r];if(null!=i)for(var f in i)i.hasOwnProperty(f)&&(t[f]=i[f])}return t},n=\\\"GENERATE_BUFFERS\\\",t=[],r={vertexPosition:0,indexPosition:0};function o(e,n,t,r,o){e[n+0]=t,e[n+1]=r,e[n+2]=o}function i(e,n,i,f,s,u){var a=3+s,l=e[n+0],v=e[n+1],c=t;c.length=s;for(var g=0;g<c.length;g++)c[g]=e[n+2+g];var b=u?u.vertexPosition:0,h=u?u.indexPosition:0,d=b/a;return o(i,b,l,v,0),c.length&&i.set(c,b+3),o(i,b+=a,l,v,1),c.length&&i.set(c,b+3),o(i,b+=a,l,v,2),c.length&&i.set(c,b+3),o(i,b+=a,l,v,3),c.length&&i.set(c,b+3),b+=a,f[h++]=d,f[h++]=d+1,f[h++]=d+3,f[h++]=d+1,f[h++]=d+2,f[h++]=d+3,r.vertexPosition=b,r.indexPosition=h,r}var f=self;f.onmessage=function(t){var r=t.data;if(r.type===n){for(var o=r.customAttributesCount,s=2+o,u=new Float32Array(r.renderInstructions),a=u.length/s,l=4*a*(o+3),v=new Uint32Array(6*a),c=new Float32Array(l),g=null,b=0;b<u.length;b+=s)g=i(u,b,c,v,o,g);var h=e({vertexBuffer:c.buffer,indexBuffer:v.buffer,renderInstructions:u.buffer},r);f.postMessage(h,[c.buffer,v.buffer,u.buffer])}};\";\n        const blob = new Blob([source], {type: 'application/javascript'});\n        const url = URL.createObjectURL(blob);\n        export function create() {\n          return new Worker(url);\n        }\n      \n","/**\n * @module ol/renderer/webgl/PointsLayer\n */\nimport BaseVector from '../../layer/BaseVector.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorEventType from '../../source/VectorEventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport WebGLArrayBuffer from '../../webgl/Buffer.js';\nimport WebGLLayerRenderer, {\n  WebGLWorkerMessageType,\n  colorDecodeId,\n  colorEncodeId,\n} from './Layer.js';\nimport WebGLRenderTarget from '../../webgl/RenderTarget.js';\nimport {ARRAY_BUFFER, DYNAMIC_DRAW, ELEMENT_ARRAY_BUFFER} from '../../webgl.js';\nimport {AttributeType, DefaultUniform} from '../../webgl/Helper.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  makeInverse as makeInverseTransform,\n  multiply as multiplyTransform,\n} from '../../transform.js';\nimport {assert} from '../../asserts.js';\nimport {buffer, createEmpty, equals} from '../../extent.js';\nimport {create as createWebGLWorker} from '../../worker/webgl.js';\nimport {getUid} from '../../util.js';\nimport {listen, unlistenByKey} from '../../events.js';\n\n/**\n * @typedef {Object} CustomAttribute A description of a custom attribute to be passed on to the GPU, with a value different\n * for each feature.\n * @property {string} name Attribute name.\n * @property {function(import(\"../../Feature\").default, Object<string, *>):number} callback This callback computes the numerical value of the\n * attribute for a given feature (properties are available as 2nd arg for quicker access).\n */\n\n/**\n * @typedef {Object} FeatureCacheItem Object that holds a reference to a feature, its geometry and properties. Used to optimize\n * rebuildBuffers by accessing these objects quicker.\n * @property {import(\"../../Feature\").default} feature Feature\n * @property {Object<string, *>} properties Feature properties\n * @property {import(\"../../geom\").Geometry} geometry Feature geometry\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the canvas element.\n * @property {Array<CustomAttribute>} [attributes] These attributes will be read from the features in the source and then\n * passed to the GPU. The `name` property of each attribute will serve as its identifier:\n *  * In the vertex shader as an `attribute` by prefixing it with `a_`\n *  * In the fragment shader as a `varying` by prefixing it with `v_`\n * Please note that these can only be numerical values.\n * @property {string} vertexShader Vertex shader source, mandatory.\n * @property {string} fragmentShader Fragment shader source, mandatory.\n * @property {string} [hitVertexShader] Vertex shader source for hit detection rendering.\n * @property {string} [hitFragmentShader] Fragment shader source for hit detection rendering.\n * @property {Object<string,import(\"../../webgl/Helper\").UniformValue>} [uniforms] Uniform definitions for the post process steps\n * Please note that `u_texture` is reserved for the main texture slot.\n * @property {Array<import(\"./Layer\").PostProcessesOptions>} [postProcesses] Post-processes definitions\n */\n\n/**\n * @classdesc\n * WebGL vector renderer optimized for points.\n * All features will be rendered as quads (two triangles forming a square). New data will be flushed to the GPU\n * every time the vector source changes.\n *\n * You need to provide vertex and fragment shaders for rendering. This can be done using\n * {@link module:ol/webgl/ShaderBuilder} utilities. These shaders shall expect a `a_position` attribute\n * containing the screen-space projected center of the quad, as well as a `a_index` attribute\n * whose value (0, 1, 2 or 3) indicates which quad vertex is currently getting processed (see structure below).\n *\n * To include variable attributes in the shaders, you need to declare them using the `attributes` property of\n * the options object like so:\n * ```js\n * new WebGLPointsLayerRenderer(layer, {\n *   attributes: [\n *     {\n *       name: 'size',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *     {\n *       name: 'weight',\n *       callback: function(feature) {\n *         // compute something with the feature\n *       }\n *     },\n *   ],\n *   vertexShader:\n *     // shader using attribute a_weight and a_size\n *   fragmentShader:\n *     // shader using varying v_weight and v_size\n * ```\n *\n * To enable hit detection, you must as well provide dedicated shaders using the `hitVertexShader`\n * and `hitFragmentShader` properties. These shall expect the `a_hitColor` attribute to contain\n * the final color that will have to be output for hit detection to work.\n *\n * The following uniform is used for the main texture: `u_texture`.\n *\n * Please note that the main shader output should have premultiplied alpha, otherwise visual anomalies may occur.\n *\n * Points are rendered as quads with the following structure:\n *\n * ```\n *   (u0, v1)      (u1, v1)\n *  [3]----------[2]\n *   |`           |\n *   |  `         |\n *   |    `       |\n *   |      `     |\n *   |        `   |\n *   |          ` |\n *  [0]----------[1]\n *   (u0, v0)      (u1, v0)\n *  ```\n *\n * This uses {@link module:ol/webgl/Helper~WebGLHelper} internally.\n *\n * @api\n */\nclass WebGLPointsLayerRenderer extends WebGLLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Layer.js\").default} layer Layer.\n   * @param {Options} options Options.\n   */\n  constructor(layer, options) {\n    const uniforms = options.uniforms || {};\n    const projectionMatrixTransform = createTransform();\n    uniforms[DefaultUniform.PROJECTION_MATRIX] = projectionMatrixTransform;\n\n    super(layer, {\n      className: options.className,\n      uniforms: uniforms,\n      postProcesses: options.postProcesses,\n    });\n\n    this.sourceRevision_ = -1;\n\n    this.verticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.hitVerticesBuffer_ = new WebGLArrayBuffer(ARRAY_BUFFER, DYNAMIC_DRAW);\n    this.indicesBuffer_ = new WebGLArrayBuffer(\n      ELEMENT_ARRAY_BUFFER,\n      DYNAMIC_DRAW\n    );\n\n    this.program_ = this.helper.getProgram(\n      options.fragmentShader,\n      options.vertexShader\n    );\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.hitDetectionEnabled_ =\n      options.hitFragmentShader && options.hitVertexShader ? true : false;\n\n    this.hitProgram_ =\n      this.hitDetectionEnabled_ &&\n      this.helper.getProgram(\n        options.hitFragmentShader,\n        options.hitVertexShader\n      );\n\n    const customAttributes = options.attributes\n      ? options.attributes.map(function (attribute) {\n          return {\n            name: 'a_' + attribute.name,\n            size: 1,\n            type: AttributeType.FLOAT,\n          };\n        })\n      : [];\n\n    /**\n     * A list of attributes used by the renderer. By default only the position and\n     * index of the vertex (0 to 3) are required.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.attributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    /**\n     * A list of attributes used for hit detection.\n     * @type {Array<import('../../webgl/Helper.js').AttributeDescription>}\n     */\n    this.hitDetectionAttributes = [\n      {\n        name: 'a_position',\n        size: 2,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_index',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_hitColor',\n        size: 4,\n        type: AttributeType.FLOAT,\n      },\n      {\n        name: 'a_featureUid',\n        size: 1,\n        type: AttributeType.FLOAT,\n      },\n    ].concat(customAttributes);\n\n    this.customAttributes = options.attributes ? options.attributes : [];\n\n    this.previousExtent_ = createEmpty();\n\n    /**\n     * This transform is updated on every frame and is the composition of:\n     * - invert of the world->screen transform that was used when rebuilding buffers (see `this.renderTransform_`)\n     * - current world->screen transform\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.currentTransform_ = projectionMatrixTransform;\n\n    /**\n     * This transform is updated when buffers are rebuilt and converts world space coordinates to screen space\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.renderTransform_ = createTransform();\n\n    /**\n     * @type {import(\"../../transform.js\").Transform}\n     * @private\n     */\n    this.invertRenderTransform_ = createTransform();\n\n    /**\n     * @type {Float32Array}\n     * @private\n     */\n    this.renderInstructions_ = new Float32Array(0);\n\n    /**\n     * These instructions are used for hit detection\n     * @type {Float32Array}\n     * @private\n     */\n    this.hitRenderInstructions_ = new Float32Array(0);\n\n    /**\n     * @type {WebGLRenderTarget}\n     * @private\n     */\n    this.hitRenderTarget_ =\n      this.hitDetectionEnabled_ && new WebGLRenderTarget(this.helper);\n\n    this.worker_ = createWebGLWorker();\n    this.worker_.addEventListener(\n      'message',\n      /**\n       * @param {*} event Event.\n       * @this {WebGLPointsLayerRenderer}\n       */\n      function (event) {\n        const received = event.data;\n        if (received.type === WebGLWorkerMessageType.GENERATE_BUFFERS) {\n          const projectionTransform = received.projectionTransform;\n          if (received.hitDetection) {\n            this.hitVerticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.hitVerticesBuffer_);\n          } else {\n            this.verticesBuffer_.fromArrayBuffer(received.vertexBuffer);\n            this.helper.flushBufferData(this.verticesBuffer_);\n          }\n          this.indicesBuffer_.fromArrayBuffer(received.indexBuffer);\n          this.helper.flushBufferData(this.indicesBuffer_);\n\n          this.renderTransform_ = projectionTransform;\n          makeInverseTransform(\n            this.invertRenderTransform_,\n            this.renderTransform_\n          );\n          if (received.hitDetection) {\n            this.hitRenderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          } else {\n            this.renderInstructions_ = new Float32Array(\n              event.data.renderInstructions\n            );\n          }\n\n          this.getLayer().changed();\n        }\n      }.bind(this)\n    );\n\n    /**\n     * This object will be updated when the source changes. Key is uid.\n     * @type {Object<string, FeatureCacheItem>}\n     * @private\n     */\n    this.featureCache_ = {};\n\n    /**\n     * Amount of features in the cache.\n     * @type {number}\n     * @private\n     */\n    this.featureCount_ = 0;\n\n    const source = this.getLayer().getSource();\n    this.sourceListenKeys_ = [\n      listen(\n        source,\n        VectorEventType.ADDFEATURE,\n        this.handleSourceFeatureAdded_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CHANGEFEATURE,\n        this.handleSourceFeatureChanged_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.REMOVEFEATURE,\n        this.handleSourceFeatureDelete_,\n        this\n      ),\n      listen(\n        source,\n        VectorEventType.CLEAR,\n        this.handleSourceFeatureClear_,\n        this\n      ),\n    ];\n    source.forEachFeature(\n      function (feature) {\n        this.featureCache_[getUid(feature)] = {\n          feature: feature,\n          properties: feature.getProperties(),\n          geometry: feature.getGeometry(),\n        };\n        this.featureCount_++;\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureAdded_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n    this.featureCount_++;\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureChanged_(event) {\n    const feature = event.feature;\n    this.featureCache_[getUid(feature)] = {\n      feature: feature,\n      properties: feature.getProperties(),\n      geometry: feature.getGeometry(),\n    };\n  }\n\n  /**\n   * @param {import(\"../../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceFeatureDelete_(event) {\n    const feature = event.feature;\n    delete this.featureCache_[getUid(feature)];\n    this.featureCount_--;\n  }\n\n  /**\n   * @private\n   */\n  handleSourceFeatureClear_() {\n    this.featureCache_ = {};\n    this.featureCount_ = 0;\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState) {\n    this.preRender(frameState);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n    this.helper.finalizeDraw(frameState);\n    const canvas = this.helper.getCanvas();\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const opacity = layerState.opacity;\n    if (opacity !== parseFloat(canvas.style.opacity)) {\n      canvas.style.opacity = String(opacity);\n    }\n\n    if (this.hitDetectionEnabled_) {\n      this.renderHitDetection(frameState);\n      this.hitRenderTarget_.clearCachedData();\n    }\n\n    this.postRender(frameState);\n\n    return canvas;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layer = this.getLayer();\n    const vectorSource = layer.getSource();\n    const viewState = frameState.viewState;\n    const viewNotMoving =\n      !frameState.viewHints[ViewHint.ANIMATING] &&\n      !frameState.viewHints[ViewHint.INTERACTING];\n    const extentChanged = !equals(this.previousExtent_, frameState.extent);\n    const sourceChanged = this.sourceRevision_ < vectorSource.getRevision();\n\n    if (sourceChanged) {\n      this.sourceRevision_ = vectorSource.getRevision();\n    }\n\n    if (viewNotMoving && (extentChanged || sourceChanged)) {\n      const projection = viewState.projection;\n      const resolution = viewState.resolution;\n\n      const renderBuffer =\n        layer instanceof BaseVector ? layer.getRenderBuffer() : 0;\n      const extent = buffer(frameState.extent, renderBuffer * resolution);\n      vectorSource.loadFeatures(extent, resolution, projection);\n\n      this.rebuildBuffers_(frameState);\n      this.previousExtent_ = frameState.extent.slice();\n    }\n\n    // apply the current projection transform with the invert of the one used to fill buffers\n    this.helper.makeProjectionTransform(frameState, this.currentTransform_);\n    multiplyTransform(this.currentTransform_, this.invertRenderTransform_);\n\n    this.helper.useProgram(this.program_);\n    this.helper.prepareDraw(frameState);\n\n    // write new data\n    this.helper.bindBuffer(this.verticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.attributes);\n\n    return true;\n  }\n\n  /**\n   * Rebuild internal webgl buffers based on current view extent; costly, should not be called too much\n   * @param {import(\"../../PluggableMap\").FrameState} frameState Frame state.\n   * @private\n   */\n  rebuildBuffers_(frameState) {\n    // saves the projection transform for the current frame state\n    const projectionTransform = createTransform();\n    this.helper.makeProjectionTransform(frameState, projectionTransform);\n\n    // here we anticipate the amount of render instructions that we well generate\n    // this can be done since we know that for normal render we only have x, y as base instructions,\n    // and x, y, r, g, b, a and featureUid for hit render instructions\n    // and we also know the amount of custom attributes to append to these\n    const totalInstructionsCount =\n      (2 + this.customAttributes.length) * this.featureCount_;\n    if (\n      !this.renderInstructions_ ||\n      this.renderInstructions_.length !== totalInstructionsCount\n    ) {\n      this.renderInstructions_ = new Float32Array(totalInstructionsCount);\n    }\n    if (this.hitDetectionEnabled_) {\n      const totalHitInstructionsCount =\n        (7 + this.customAttributes.length) * this.featureCount_;\n      if (\n        !this.hitRenderInstructions_ ||\n        this.hitRenderInstructions_.length !== totalHitInstructionsCount\n      ) {\n        this.hitRenderInstructions_ = new Float32Array(\n          totalHitInstructionsCount\n        );\n      }\n    }\n\n    // loop on features to fill the buffer\n    let featureCache, geometry;\n    const tmpCoords = [];\n    const tmpColor = [];\n    let renderIndex = 0;\n    let hitIndex = 0;\n    let hitColor;\n    for (const featureUid in this.featureCache_) {\n      featureCache = this.featureCache_[featureUid];\n      geometry = /** @type {import(\"../../geom\").Point} */ (\n        featureCache.geometry\n      );\n      if (!geometry || geometry.getType() !== GeometryType.POINT) {\n        continue;\n      }\n\n      tmpCoords[0] = geometry.getFlatCoordinates()[0];\n      tmpCoords[1] = geometry.getFlatCoordinates()[1];\n      applyTransform(projectionTransform, tmpCoords);\n\n      hitColor = colorEncodeId(hitIndex + 6, tmpColor);\n\n      this.renderInstructions_[renderIndex++] = tmpCoords[0];\n      this.renderInstructions_[renderIndex++] = tmpCoords[1];\n\n      // for hit detection, the feature uid is saved in the opacity value\n      // and the index of the opacity value is encoded in the color values\n      if (this.hitDetectionEnabled_) {\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[0];\n        this.hitRenderInstructions_[hitIndex++] = tmpCoords[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[0];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[1];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[2];\n        this.hitRenderInstructions_[hitIndex++] = hitColor[3];\n        this.hitRenderInstructions_[hitIndex++] = Number(featureUid);\n      }\n\n      // pushing custom attributes\n      let value;\n      for (let j = 0; j < this.customAttributes.length; j++) {\n        value = this.customAttributes[j].callback(\n          featureCache.feature,\n          featureCache.properties\n        );\n        this.renderInstructions_[renderIndex++] = value;\n        if (this.hitDetectionEnabled_) {\n          this.hitRenderInstructions_[hitIndex++] = value;\n        }\n      }\n    }\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    const message = {\n      type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n      renderInstructions: this.renderInstructions_.buffer,\n      customAttributesCount: this.customAttributes.length,\n    };\n    // additional properties will be sent back as-is by the worker\n    message['projectionTransform'] = projectionTransform;\n    this.worker_.postMessage(message, [this.renderInstructions_.buffer]);\n    this.renderInstructions_ = null;\n\n    /** @type {import('./Layer').WebGLWorkerGenerateBuffersMessage} */\n    if (this.hitDetectionEnabled_) {\n      const hitMessage = {\n        type: WebGLWorkerMessageType.GENERATE_BUFFERS,\n        renderInstructions: this.hitRenderInstructions_.buffer,\n        customAttributesCount: 5 + this.customAttributes.length,\n      };\n      hitMessage['projectionTransform'] = projectionTransform;\n      hitMessage['hitDetection'] = true;\n      this.worker_.postMessage(hitMessage, [\n        this.hitRenderInstructions_.buffer,\n      ]);\n      this.hitRenderInstructions_ = null;\n    }\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    assert(this.hitDetectionEnabled_, 66);\n    if (!this.hitRenderInstructions_) {\n      return undefined;\n    }\n\n    const pixel = applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice()\n    );\n\n    const data = this.hitRenderTarget_.readPixel(pixel[0] / 2, pixel[1] / 2);\n    const color = [data[0] / 255, data[1] / 255, data[2] / 255, data[3] / 255];\n    const index = colorDecodeId(color);\n    const opacity = this.hitRenderInstructions_[index];\n    const uid = Math.floor(opacity).toString();\n\n    const source = this.getLayer().getSource();\n    const feature = source.getFeatureByUid(uid);\n    if (feature) {\n      return callback(feature, this.getLayer(), null);\n    }\n    return undefined;\n  }\n\n  /**\n   * Render the hit detection data to the corresponding render target\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState current frame state\n   */\n  renderHitDetection(frameState) {\n    // skip render entirely if vertex buffers not ready/generated yet\n    if (!this.hitVerticesBuffer_.getSize()) {\n      return;\n    }\n\n    this.hitRenderTarget_.setSize([\n      Math.floor(frameState.size[0] / 2),\n      Math.floor(frameState.size[1] / 2),\n    ]);\n\n    this.helper.useProgram(this.hitProgram_);\n    this.helper.prepareDrawToRenderTarget(\n      frameState,\n      this.hitRenderTarget_,\n      true\n    );\n\n    this.helper.bindBuffer(this.hitVerticesBuffer_);\n    this.helper.bindBuffer(this.indicesBuffer_);\n\n    this.helper.enableAttributes(this.hitDetectionAttributes);\n\n    const renderCount = this.indicesBuffer_.getSize();\n    this.helper.drawElements(0, renderCount);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.worker_.terminate();\n    this.layer_ = null;\n    this.sourceListenKeys_.forEach(function (key) {\n      unlistenByKey(key);\n    });\n    this.sourceListenKeys_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default WebGLPointsLayerRenderer;\n","/**\n * @module ol/layer/Heatmap\n */\nimport VectorLayer from './Vector.js';\nimport WebGLPointsLayerRenderer from '../renderer/webgl/PointsLayer.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\nimport {createCanvasContext2D} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {string|function(import(\"../Feature.js\").default):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius',\n};\n\n/**\n * @const\n * @type {Array<string>}\n */\nconst DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires import(\"../render/Event.js\").RenderEvent\n * @extends {VectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass Heatmap extends VectorLayer {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.weight;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.gradient_ = null;\n\n    this.addChangeListener(Property.GRADIENT, this.handleGradientChanged_);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    const weight = options.weight ? options.weight : 'weight';\n    if (typeof weight === 'string') {\n      this.weightFunction_ = function (feature) {\n        return feature.get(weight);\n      };\n    } else {\n      this.weightFunction_ = weight;\n    }\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n  }\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  getBlur() {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  }\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  getGradient() {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  }\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  getRadius() {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  }\n\n  /**\n   * @private\n   */\n  handleGradientChanged_() {\n    this.gradient_ = createGradient(this.getGradient());\n  }\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  setBlur(blur) {\n    this.set(Property.BLUR, blur);\n  }\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  setGradient(colors) {\n    this.set(Property.GRADIENT, colors);\n  }\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  setRadius(radius) {\n    this.set(Property.RADIUS, radius);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {WebGLPointsLayerRenderer} A layer renderer.\n   */\n  createRenderer() {\n    return new WebGLPointsLayerRenderer(this, {\n      className: this.getClassName(),\n      attributes: [\n        {\n          name: 'weight',\n          callback: function (feature) {\n            const weight = this.weightFunction_(feature);\n            return weight !== undefined ? clamp(weight, 0, 1) : 1;\n          }.bind(this),\n        },\n      ],\n      vertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_weight = a_weight;\n        }`,\n      fragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          gl_FragColor = vec4(alpha, alpha, alpha, alpha);\n        }`,\n      hitVertexShader: `\n        precision mediump float;\n        uniform mat4 u_projectionMatrix;\n        uniform mat4 u_offsetScaleMatrix;\n        uniform float u_size;\n        attribute vec2 a_position;\n        attribute float a_index;\n        attribute float a_weight;\n        attribute vec4 a_hitColor;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          mat4 offsetMatrix = u_offsetScaleMatrix;\n          float offsetX = a_index == 0.0 || a_index == 3.0 ? -u_size / 2.0 : u_size / 2.0;\n          float offsetY = a_index == 0.0 || a_index == 1.0 ? -u_size / 2.0 : u_size / 2.0;\n          vec4 offsets = offsetMatrix * vec4(offsetX, offsetY, 0.0, 0.0);\n          gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\n          float u = a_index == 0.0 || a_index == 3.0 ? 0.0 : 1.0;\n          float v = a_index == 0.0 || a_index == 1.0 ? 0.0 : 1.0;\n          v_texCoord = vec2(u, v);\n          v_hitColor = a_hitColor;\n          v_weight = a_weight;\n        }`,\n      hitFragmentShader: `\n        precision mediump float;\n        uniform float u_blurSlope;\n\n        varying vec2 v_texCoord;\n        varying float v_weight;\n        varying vec4 v_hitColor;\n\n        void main(void) {\n          vec2 texCoord = v_texCoord * 2.0 - vec2(1.0, 1.0);\n          float sqRadius = texCoord.x * texCoord.x + texCoord.y * texCoord.y;\n          float value = (1.0 - sqrt(sqRadius)) * u_blurSlope;\n          float alpha = smoothstep(0.0, 1.0, value) * v_weight;\n          if (alpha < 0.05) {\n            discard;\n          }\n\n          gl_FragColor = v_hitColor;\n        }`,\n      uniforms: {\n        u_size: function () {\n          return (this.get(Property.RADIUS) + this.get(Property.BLUR)) * 2;\n        }.bind(this),\n        u_blurSlope: function () {\n          return (\n            this.get(Property.RADIUS) / Math.max(1, this.get(Property.BLUR))\n          );\n        }.bind(this),\n      },\n      postProcesses: [\n        {\n          fragmentShader: `\n            precision mediump float;\n\n            uniform sampler2D u_image;\n            uniform sampler2D u_gradientTexture;\n\n            varying vec2 v_texCoord;\n\n            void main() {\n              vec4 color = texture2D(u_image, v_texCoord);\n              gl_FragColor.a = color.a;\n              gl_FragColor.rgb = texture2D(u_gradientTexture, vec2(0.5, color.a)).rgb;\n              gl_FragColor.rgb *= gl_FragColor.a;\n            }`,\n          uniforms: {\n            u_gradientTexture: function () {\n              return this.gradient_;\n            }.bind(this),\n          },\n        },\n      ],\n    });\n  }\n\n  renderDeclutter() {}\n}\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {HTMLCanvasElement} canvas with gradient texture.\n */\nfunction createGradient(colors) {\n  const width = 1;\n  const height = 256;\n  const context = createCanvasContext2D(width, height);\n\n  const gradient = context.createLinearGradient(0, 0, width, height);\n  const step = 1 / (colors.length - 1);\n  for (let i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.canvas;\n}\n\nexport default Heatmap;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","import GeoJSON from 'ol/format/GeoJSON';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport KML from 'ol/format/KML';\r\nimport {\r\n  DragBox,\r\n  Select\r\n} from 'ol/interaction';\r\nimport {\r\n  OSM,\r\n  Stamen,\r\n  Vector as VectorSource\r\n} from 'ol/source';\r\nimport {\r\n  Tile as TileLayer,\r\n  Vector as VectorLayer,\r\n  Heatmap as HeatmapLayer\r\n} from 'ol/layer';\r\nimport {\r\n  platformModifierKeyOnly\r\n} from 'ol/events/condition';\r\nimport {\r\n  Style,\r\n  Stroke,\r\n  Fill\r\n} from 'ol/style';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport {\r\n  getBottomLeft,\r\n  getTopRight\r\n} from 'ol/extent';\r\nimport {\r\n  toLonLat\r\n} from 'ol/proj';\r\n// minimap additions\r\nimport {\r\n  DragRotateAndZoom,\r\n  defaults as defaultInteractions,\r\n} from 'ol/interaction';\r\nimport {\r\n  OverviewMap,\r\n  defaults as defaultControls,\r\n  MousePosition\r\n} from 'ol/control';\r\n\r\n\r\nconst vectorSource1 = new VectorSource({\r\n  url: 'https://raw.githubusercontent.com/singhskt/geojson-data/main/data001.geojson',\r\n  format: new GeoJSON()\r\n});\r\n\r\nconst vectorSource2 = new VectorSource({\r\n  url: 'https://raw.githubusercontent.com/singhskt/geojson-data/main/data002.geojson',\r\n  format: new GeoJSON()\r\n});\r\n\r\nconst vectorSource3 = new VectorSource({\r\n  url: 'https://raw.githubusercontent.com/singhskt/geojson-data/main/data003.geojson',\r\n  format: new GeoJSON()\r\n});\r\n\r\n\r\nconst vectorSource4 = new VectorSource({\r\n  url: '',\r\n  format: new GeoJSON()\r\n});\r\n\r\n\r\n\r\nconst vectorLayer = new VectorLayer({\r\n  source: vectorSource3,\r\n});\r\n\r\nvar url3 = 'https://api.digitalslidearchive.org/api/v1/item/5b9ef9c8e62914002e94771e/tiles/zxy/{z}/{x}/{y}?edge=crop'\r\nconst map = new Map({\r\n  layers: [\r\n    new TileLayer({\r\n      source: new XYZ({\r\n        url: url3,\r\n      }),\r\n    }),\r\n    vectorLayer,\r\n  ],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [-800000, 12800000],\r\n    zoom: 2,\r\n    constrainRotation: 16,\r\n  }),\r\n});\r\n\r\n// a normal select interaction to handle click\r\nconst select = new Select();\r\nmap.addInteraction(select);\r\n\r\nconst selectedFeatures = select.getFeatures();\r\n\r\n// a DragBox interaction used to select features by drawing boxes\r\nconst dragBox = new DragBox({\r\n  condition: platformModifierKeyOnly,\r\n});\r\n\r\nmap.addInteraction(dragBox);\r\n\r\ndragBox.on('boxend', function () {\r\n  // features that intersect the box geometry are added to the\r\n  // collection of selected features\r\n\r\n  // if the view is not obliquely rotated the box geometry and\r\n  // its extent are equalivalent so intersecting features can\r\n  // be added directly to the collection\r\n  const rotation = map.getView().getRotation();\r\n  const oblique = rotation % (Math.PI / 2) !== 0;\r\n  const candidateFeatures = oblique ? [] : selectedFeatures;\r\n  const extent = dragBox.getGeometry().getExtent();\r\n  vectorSource.forEachFeatureIntersectingExtent(extent, function (feature) {\r\n    candidateFeatures.push(feature);\r\n  });\r\n\r\n  // when the view is obliquely rotated the box extent will\r\n  // exceed its geometry so both the box and the candidate\r\n  // feature geometries are rotated around a common anchor\r\n  // to confirm that, with the box geometry aligned with its\r\n  // extent, the geometries intersect\r\n  if (oblique) {\r\n    const anchor = [0, 0];\r\n    const geometry = dragBox.getGeometry().clone();\r\n    geometry.rotate(-rotation, anchor);\r\n    const extent = geometry.getExtent();\r\n    candidateFeatures.forEach(function (feature) {\r\n      const geometry = feature.getGeometry().clone();\r\n      geometry.rotate(-rotation, anchor);\r\n      if (geometry.intersectsExtent(extent)) {\r\n        selectedFeatures.push(feature);\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n// clear selection when drawing a new box and when clicking on the map\r\ndragBox.on('boxstart', function () {\r\n  selectedFeatures.clear();\r\n});\r\n\r\nconst infoBox = document.getElementById('info');\r\n\r\n\r\n\r\nselectedFeatures.on(['add', 'remove'], function () {\r\n  const names = selectedFeatures.getArray().map(function (feature) {\r\n    document.getElementById(\"cname\").value = feature.get('name');\r\n    document.getElementById(\"ccustom\").value = feature.get('custom');\r\n    return JSON.stringify({\r\n      name: feature.get('name'),\r\n      id: feature.id_,\r\n      custom: feature.get('custom'),\r\n    });\r\n  });\r\n  if (names.length > 0) {\r\n    infoBox.innerHTML = names.join(', ');\r\n  } else {\r\n    infoBox.innerHTML = 'No polgon selected';\r\n  }\r\n});\r\nvar form = document.getElementById(\"testForm\")\r\nconsole.log(form);\r\nform.addEventListener('submit', function (e) {\r\n  e.preventDefault();\r\n  var feature = selectedFeatures.getArray()[0];\r\n  feature.setProperties({\r\n    name: document.getElementById(\"cname\").value,\r\n    custom: document.getElementById(\"ccustom\").value\r\n  })\r\n  var color = document.getElementById(\"color\").value;\r\n  if (color != '') {\r\n    var style = new Style({\r\n      stroke: new Stroke({\r\n        color: color\r\n      }),\r\n    });\r\n\r\n    feature.setStyle(style);\r\n\r\n\r\n  }\r\n  console.log(feature);\r\n  return false;\r\n})\r\n\r\nvar currZoom = map.getView().getZoom();\r\n\r\nfunction wrapLon(value) {\r\n  const worlds = Math.floor((value + 180) / 360);\r\n  return value - worlds * 360;\r\n}\r\n// map.on('moveend', function (e) {\r\n\r\n//   // this code section is to demonstrate rendering of polygons \r\n//   // based on zoom level\r\n\r\n//   var newZoom = map.getView().getZoom();\r\n//   if (currZoom != newZoom) {\r\n//     // console.log('zoom end, new zoom: ' + newZoom);\r\n//     currZoom = newZoom;\r\n//     if (currZoom <= 3) {\r\n//       // console.log('Vector soruce 1');\r\n\r\n//       vectorLayer.setSource(vectorSource1);\r\n//     } else {\r\n//       // console.log('Vector soruce 2');\r\n//       vectorLayer.setSource(vectorSource2);\r\n//     }\r\n//   } else {\r\n//     // const map = e.map;\r\n//     const extent = map.getView().calculateExtent(map.getSize());\r\n//     const bottomLeft = toLonLat(getBottomLeft(extent));\r\n//     const topRight = toLonLat(getTopRight(extent));\r\n//     console.log('left', wrapLon(bottomLeft[0]));\r\n//     console.log('bottom', bottomLeft[1]);\r\n//     console.log('right', wrapLon(topRight[0]));\r\n//     console.log('top', topRight[1]);\r\n\r\n\r\n//     // uncomment this code section to demonstrate rendering of polygons \r\n//     // based on current viewport\r\n\r\n//     if (bottomLeft[1] > 45) {\r\n//       vectorLayer.setSource(vectorSource4);\r\n//     } else {\r\n//       vectorLayer.setSource(vectorSource3);\r\n//     }\r\n//   }\r\n\r\n\r\n// });\r\n\r\nvar zoom1 = document.getElementById(\"zoom1\")\r\nzoom1.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  map.getView().setZoom(1);\r\n  return false;\r\n});\r\n\r\nvar zoom2 = document.getElementById(\"zoom2\")\r\nzoom2.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  map.getView().setZoom(2);\r\n  return false;\r\n});\r\n\r\n\r\nvar zoom3 = document.getElementById(\"zoom3\")\r\nzoom3.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  map.getView().setZoom(3);\r\n  return false;\r\n});\r\n\r\nvar zoom5 = document.getElementById(\"zoom5\")\r\nzoom5.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  map.getView().setZoom(5);\r\n  return false;\r\n});\r\n\r\nvar zoom10 = document.getElementById(\"zoom10\")\r\nzoom10.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  map.getView().setZoom(10);\r\n  return false;\r\n});\r\n\r\n\r\n//minimap\r\n// failed attempt using ol-ext\r\n// var layers2 = [\r\n//   new TileLayer({\tsource: new ol.source.OSM()\t}),\r\n//   new TileLayer({\r\n//     source: new Stamen({\r\n//     layer: 'toner'\r\n//     })\r\n//   })\r\n// ];\r\n\r\n// overview1 = document.getElementById(\"overview\")\r\n// var ov2 = Overview({\r\n//   target: overview1,\r\n//   layers: layers2,\r\n//   // minZoom: $(\"#minzoom\").val(),\r\n//   // maxZoom: $(\"#maxzoom\").val(),\r\n//   // rotation: $(\"#rotate\").prop(\"checked\"),\r\n//   style: [new Style({\r\n//     image: new Circle({\r\n//       fill: new Fill({\r\n//         color: 'rgba(0,255,102, 1)'\r\n//       }),\r\n//       stroke: new Stroke({\r\n//         width: 7,\r\n//         color: 'rgba(0,255,102, 0.8)'\r\n//       }),\r\n//       radius: 5\r\n//     }),\r\n//     stroke: new Stroke({\r\n//       width: 3,\r\n//       color: \"rgba(0,255,102,1)\",\r\n//       lineDash: [5, 5]\r\n//     })\r\n//   })]\r\n// });\r\n// map.addControl(ov2);\r\n\r\n\r\n// minimap \r\n// // attept 2\r\n// overview1 = document.getElementById(\"overview\")\r\n// var external_panel = new MousePosition({\r\n\r\n//   target: document.getElementById('overview') });\r\n\r\n// map.addControl(external_panel);\r\n\r\noverview_map=new OverviewMap({\r\n  target:document.querySelector('#overview'),\r\n  layers: [\r\n    new TileLayer({\r\n      source: new XYZ({\r\n        url: url3,\r\n      }),\r\n    })\r\n  ]\r\n});\r\nmap.addControl(overview_map);\r\n\r\n\r\n// addin heatmap layer\r\nvar heatmap_data = {\r\n  type: \"FeatureCollection\",\r\n  features: [\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [716015.7709315167, 941114.3812981017]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 111, name: \"sample 1\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [686213.47091037, 1093486.3776117]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 222, name: \"sample 2\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [687067.04391223, 1094462.7275206]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 333, name: \"sample 3\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [715175.426212967, 940887.9894195743]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 444, name: \"sample 4\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [715199.78960381, 940877.6180225]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 555, name: \"sample 5\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [687214.60645801, 1094362.868384]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 666, name: \"sample 6\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [614971.473, 1218630.894]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 777, name: \"sample 7\" }\r\n    },\r\n    {\r\n      type: \"Feature\",\r\n      geometry: {\r\n        type: \"Point\",\r\n        coordinates: [620197.188, 1222790.136]\r\n      },\r\n      properties: { title: \"HeatmapPts\", id: 888, name: \"sample 8\" }\r\n    }\r\n  ]\r\n};\r\nvar heatfeature = new VectorSource({\r\n  features: new GeoJSON().readFeatures(heatmap_data, {\r\n    dataProjection: \"EPSG:32643\",\r\n    featureProjection: \"EPSG:32643\"\r\n  })\r\n});\r\n\r\nvar blur = 20;\r\nvar radius = 10;\r\n\r\nvar heatmaplayer = new HeatmapLayer({\r\n  title: \"HeatMap\",\r\n  source: heatfeature,\r\n  blur: blur,\r\n  radius: radius,\r\n  weight: function (feature) {\r\n    return 10;\r\n  }\r\n});\r\nmap.addLayer(heatmaplayer);\r\n\r\n\r\nmap.on('moveend', function (e) {\r\n\r\n  // this code section is to demonstrate rendering of polygons \r\n  // based on zoom level\r\n\r\n  var newZoom = map.getView().getZoom();\r\n  if (currZoom != newZoom) {\r\n    // console.log('zoom end, new zoom: ' + newZoom);\r\n    currZoom = newZoom;\r\n    if (currZoom <= 3) {\r\n      // console.log('Vector soruce 1');\r\n\r\n      vectorLayer.setSource(vectorSource1);\r\n      map.addLayer(heatmaplayer);\r\n\r\n      \r\n    } else {\r\n      // console.log('Vector soruce 2');  \r\n      map.removeLayer(heatmaplayer);\r\n      vectorLayer.setSource(vectorSource2);\r\n    }\r\n  } else {\r\n    // const map = e.map;\r\n    const extent = map.getView().calculateExtent(map.getSize());\r\n    const bottomLeft = toLonLat(getBottomLeft(extent));\r\n    const topRight = toLonLat(getTopRight(extent));\r\n    console.log('left', wrapLon(bottomLeft[0]));\r\n    console.log('bottom', bottomLeft[1]);\r\n    console.log('right', wrapLon(topRight[0]));\r\n    console.log('top', topRight[1]);\r\n\r\n\r\n    // uncomment this code section to demonstrate rendering of polygons \r\n    // based on current viewport\r\n\r\n    if (bottomLeft[1] > 45) {\r\n      vectorLayer.setSource(vectorSource4);\r\n    } else {\r\n      vectorLayer.setSource(vectorSource3);\r\n    }\r\n  }\r\n\r\n\r\n});"],"names":["$bfb325515b9276ea$export$2e2bcd8739ae039","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$f358d43ca6343f5a$export$2e2bcd8739ae039","$94e5a088ba5c580a$export$2e2bcd8739ae039","Disposable","disposed","dispose","disposeInternal","$ecf9f00034241bb8$export$4e734a3b32fb971b","a","b","$ecf9f00034241bb8$export$ee2e0f811dca1807","arr","obj","indexOf","$ecf9f00034241bb8$export$8a3786cc03fdb777","direction","n","length","i","$ecf9f00034241bb8$export$292cfa960964f0e0","begin","end","tmp","$ecf9f00034241bb8$export$8b58be045bf06082","data","extension","Array","isArray","$ecf9f00034241bb8$export$e9bab7fafb253603","arr1","arr2","len1","$dd44a045aec5c8f5$export$22e23a2304399231","$dd44a045aec5c8f5$export$8f11cee4bdc7e668","$dd44a045aec5c8f5$export$1cd1943b3a73bbe8","$23958c3d66c22f50$export$e6e34fd1f2686227","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$23958c3d66c22f50$export$42ffd38884aecdac","object","property","$23958c3d66c22f50$export$a5c4301012ad6f07","values","push","$23958c3d66c22f50$export$dd1bc94b04021eeb","$9201fa8e97adb715$var$Target","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$9201fa8e97adb715$var$__extends","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$9201fa8e97adb715$export$2e2bcd8739ae039","$7545064017075080$export$2e2bcd8739ae039","$d7f12dd0c706e1ad$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$d7f12dd0c706e1ad$export$8d2a95bc11b44725","$d7f12dd0c706e1ad$export$b0a21c8b3c1c921","$2f178e7c23399543$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$2f178e7c23399543$var$__extends","changed","getRevision","len","ol_key","$2f178e7c23399543$export$b7ef3f8527533384","$9201fa8e97adb715$exports","default","$2f178e7c23399543$export$2e2bcd8739ae039","$95de7f6abc640304$export$817eb92a8194bab0","Error","$95de7f6abc640304$var$uidCounter_","$95de7f6abc640304$export$5e82334337e0f204","ol_uid","String","$9c1351562361fa38$export$cf395d7c4a2d5a17","ObjectEvent","oldValue","$9c1351562361fa38$var$__extends","$9c1351562361fa38$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$2f178e7c23399543$exports","$5b96d07cbe551b3b$export$2e2bcd8739ae039","AssertionError","code","message","split","name","$5b96d07cbe551b3b$var$__extends","$0b488ad6e5bcbff0$export$a7a9523472993e97","assertion","errorCode","$5b96d07cbe551b3b$exports","$5bfa5a5ae8f81a5f$export$bb06ddfd5d66e02e","styles_1","getZIndex","$5bfa5a5ae8f81a5f$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$5bfa5a5ae8f81a5f$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$9c1351562361fa38$exports","$83327f6b8bfbe08e$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$83327f6b8bfbe08e$export$1482081eec883108","Math","PI","$9a68deaf29eb7021$var$transformStringDiv","$83327f6b8bfbe08e$export$2e2bcd8739ae039","$3dcb9b58f2d2e6d8$var$ua","navigator","userAgent","toLowerCase","$3dcb9b58f2d2e6d8$export$8442bdfd18b7b8a6","$3dcb9b58f2d2e6d8$export$39dfd62a25e0fe93","$3dcb9b58f2d2e6d8$export$76c0a3b101d93136","$3dcb9b58f2d2e6d8$export$6b83a0446fc26f94","devicePixelRatio","$3dcb9b58f2d2e6d8$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$3dcb9b58f2d2e6d8$export$716f8695eedb9bad","Image","decode","$3dcb9b58f2d2e6d8$export$f751ce96c6c4e4fc","passive","options","defineProperty","window","error","$9a68deaf29eb7021$var$tmp_","$9a68deaf29eb7021$export$aad8462122ac592b","transform","$9a68deaf29eb7021$export$adaa4cf7ef1b65be","$9a68deaf29eb7021$export$2060d2db72cce88f","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","c","d","e","f","$9a68deaf29eb7021$export$5635d7ef4b8fee1c","coordinate","x","y","$9a68deaf29eb7021$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$9a68deaf29eb7021$export$bd70ea2a93c0fa4","mat","det","$9a68deaf29eb7021$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","$219d82cc9e54c889$export$2e2bcd8739ae039","$44e40d9fa0bd90d3$export$2e2bcd8739ae039","$6e9c2c40baedc4d3$export$8aceca7c77505534","coordinates","extent","$6e9c2c40baedc4d3$export$fe201bb3bbe031e9","$6e9c2c40baedc4d3$export$1f820e3920fa5715","$6e9c2c40baedc4d3$export$ab1029bcae9ddb4a","opt_extent","$6e9c2c40baedc4d3$export$9cd59f9826255e47","slice","$6e9c2c40baedc4d3$export$cbe64c389534206f","dx","dy","$6e9c2c40baedc4d3$export$ac68c24d37ca240f","$6e9c2c40baedc4d3$export$805bdfd6d6690e97","$6e9c2c40baedc4d3$export$be866b1e0809b17e","extent1","extent2","$6e9c2c40baedc4d3$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$6e9c2c40baedc4d3$export$958e3e1a02eac4b6","$6e9c2c40baedc4d3$export$3e2152b047719fa1","$6e9c2c40baedc4d3$export$be0ab0bf96ca59ca","flatCoordinates","offset","stride","$6e9c2c40baedc4d3$export$30570204156ffd18","$6e9c2c40baedc4d3$export$e9bab7fafb253603","$6e9c2c40baedc4d3$export$8b58be045bf06082","$6e9c2c40baedc4d3$export$f1dab130b92b85a9","min","max","$6e9c2c40baedc4d3$export$f9ed8a3d123a08e2","callback","val","$6e9c2c40baedc4d3$export$8d09f5e2e1bf560d","$6e9c2c40baedc4d3$export$e77c1cf70445e168","$6e9c2c40baedc4d3$export$b84fa077c8b05295","$6e9c2c40baedc4d3$export$cb1538b07e6964ff","$6e9c2c40baedc4d3$export$520c40045967cb15","area","$6e9c2c40baedc4d3$export$dd1bc94b04021eeb","$6e9c2c40baedc4d3$export$3c49c185de0c2bfc","$6e9c2c40baedc4d3$export$c08559766941f856","$6e9c2c40baedc4d3$export$c91255cadecfe081","$6e9c2c40baedc4d3$export$a1cfd206661d0801","corner","$6e9c2c40baedc4d3$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6e9c2c40baedc4d3$export$72209efa88586d42","intersection","$6e9c2c40baedc4d3$export$7b0a31e10bbff018","$6e9c2c40baedc4d3$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","xs","ys","l","$6e9c2c40baedc4d3$var$_boundingExtentXYs","$90a7bd645e4710a6$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$ad67a80bd590adc8$export$7d15b64cf5a3a4c4","$ad67a80bd590adc8$export$2e2fd1ad24e4d350","cosh","exp","$ad67a80bd590adc8$export$b9fae0bba9d9094d","log2","log","LOG2E","$ad67a80bd590adc8$export$251bb0a9cef172e6","t","$ad67a80bd590adc8$export$88e6ebb4fe54f538","$ad67a80bd590adc8$export$56cb859c01fa134d","angleInRadians","$ad67a80bd590adc8$export$cba01ba138429a1d","angleInDegrees","$ad67a80bd590adc8$export$ba467bec01d66def","r","$ad67a80bd590adc8$export$3a89f8d6f6bf6c9f","$76a7074f99a96ff9$export$f3928063e5e96d35","$76a7074f99a96ff9$export$21e6da8a7375dfe8","$76a7074f99a96ff9$export$ae9d6ed80df710e5","$76a7074f99a96ff9$export$d26945d1ad52feeb","tan","$76a7074f99a96ff9$var$EPSG3857Projection","EPSG3857Projection","point","$76a7074f99a96ff9$var$__extends","$76a7074f99a96ff9$export$b508d7ad9a891c1b","$76a7074f99a96ff9$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$76a7074f99a96ff9$export$8c71322ec28ed6b4","atan","$a8d3289f17c9fc5c$export$21e6da8a7375dfe8","$a8d3289f17c9fc5c$export$1482081eec883108","$a8d3289f17c9fc5c$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$a8d3289f17c9fc5c$var$__extends","$a8d3289f17c9fc5c$export$b508d7ad9a891c1b","$da40b318d06423c2$var$cache","$179c64d49a01aab2$var$transforms","$179c64d49a01aab2$export$e16d8520af44a096","destination","sourceCode","destinationCode","$c6d6e605b5d26d36$export$2e2bcd8739ae039","$aa1dd99b260effa5$export$79376507b09a66f","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$aa1dd99b260effa5$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$51d823bbdf131cd1$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$51d823bbdf131cd1$export$bb628a54ab399bc9","cosAngle","sinAngle","$51d823bbdf131cd1$export$39a9ce3624977b84","projection","worldWidth","worldsAway","$51d823bbdf131cd1$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$ab024e4d016c6799$export$dd516654c5f598fb","$ab024e4d016c6799$export$83e8ab53904f8022","$ab024e4d016c6799$export$59ae956cd3e343f7","$da40b318d06423c2$export$e16d8520af44a096","$ab024e4d016c6799$export$3988ae62b71be9a3","projectionLike","replace","$ab024e4d016c6799$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$ab024e4d016c6799$export$e3c4995a701c26a3","vertices","$ab024e4d016c6799$export$eeb8392580a05a37","projections","forEach","$ab024e4d016c6799$export$638ad73f7aafb913","$ab024e4d016c6799$export$549167224996a0fb","defaultCode","$ab024e4d016c6799$export$3fb495868742d370","opt_projection","lonLat","$ab024e4d016c6799$export$51186ad6e864892a","lon","$ab024e4d016c6799$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$179c64d49a01aab2$export$3988ae62b71be9a3","$ab024e4d016c6799$export$fce0c6cfca85ed96","$ab024e4d016c6799$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$ab024e4d016c6799$var$userProjection","$ab024e4d016c6799$export$3973b77d5f6f2790","$ab024e4d016c6799$export$698f563af1ba02a5","$ab024e4d016c6799$export$d4b8ec0b96db1ee2","destProjection","$ab024e4d016c6799$export$96bfd09e2cffb006","$ab024e4d016c6799$export$494be3a3a25689ca","$ab024e4d016c6799$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$21b6f7621e6152f7$export$b92b2dedcfff79de","opt_dest","dest","j","$21b6f7621e6152f7$export$bb628a54ab399bc9","anchor","anchorX","anchorY","deltaX","deltaY","k","$76a7074f99a96ff9$exports","PROJECTIONS","$a8d3289f17c9fc5c$exports","fromEPSG4326","toEPSG4326","$0afe4f47eb66e15c$var$tmpTransform","$0afe4f47eb66e15c$export$2e2bcd8739ae039","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$0afe4f47eb66e15c$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$6e9c2c40baedc4d3$export$6a4fe494c558c238","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$b352d83c6adf59d0$var$GeometryCollection","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$b352d83c6adf59d0$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","$b352d83c6adf59d0$var$cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","$0afe4f47eb66e15c$exports","clonedGeometries","$b352d83c6adf59d0$export$2e2bcd8739ae039","$ce479c64a4dd295f$export$2e2bcd8739ae039","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","opt_options","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","$ce479c64a4dd295f$export$7beeea566b560d4","write","transformed","decimals","power_1","pow","round","$90cdf935a4cb5f8f$export$2e2bcd8739ae039","$843aafc6e566eea2$var$getObject","JSON","parse","$843aafc6e566eea2$export$2e2bcd8739ae039","JSONFeature","$843aafc6e566eea2$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$28b3e94032c703ae$export$2e2bcd8739ae039","$5e0cf2909081fcd6$var$SimpleGeometry","SimpleGeometry","layout","$5e0cf2909081fcd6$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$5e0cf2909081fcd6$export$6af0c1b4a8549a43","setCoordinates","opt_layout","setLayout","nesting","$5e0cf2909081fcd6$var$getLayoutForStride","$21b6f7621e6152f7$export$dcdf75081b88279d","$21b6f7621e6152f7$export$d73ee8ef04f5226a","$5e0cf2909081fcd6$export$a3767472617c7861","simpleGeometry","$5e0cf2909081fcd6$export$2e2bcd8739ae039","$31903856a8cc25f7$var$assignClosest","offset1","offset2","$31903856a8cc25f7$export$bc2eb611ddf80103","squaredDelta","$31903856a8cc25f7$export$fbf31c8f2668ed5a","ends","$31903856a8cc25f7$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$31903856a8cc25f7$export$5a48a0eefcf14992","$ec63ebe683e7bd4c$export$5c4daf67e03c190f","$ec63ebe683e7bd4c$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8b376c43ca456b0c$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$8b376c43ca456b0c$export$cedb9900c0b225c2","simplifiedEnds","$8b376c43ca456b0c$export$51a0620f7a28532b","$8b376c43ca456b0c$export$b84e8d2c4920a0c6","$8b376c43ca456b0c$export$60a9904b67f8d51b","$d9ba6d5e24836156$export$4b80e395e36b5a56","ret","$4eebcd7cba5c6cd9$export$9c0934e4e9c3f61e","opt_coordinates","$4eebcd7cba5c6cd9$export$cbb9596fc0f40db2","opt_coordinatess","$4eebcd7cba5c6cd9$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$2adf10d98c30c9dd$export$687ff82efd78795b","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$ecf9f00034241bb8$export$2e0ae67339d5f1ac","$2adf10d98c30c9dd$export$8f44c3c220ef6f09","m","extrapolate","lo","hi","m0","$2ffae1bc01dcd8b1$export$cedabedc7ac0e138","$2ffae1bc01dcd8b1$export$949a7a3a4b6f34fa","wn","$2ffae1bc01dcd8b1$export$ae868c0f6acc3355","$409182f2ccbbd4ee$export$40d8d71841a3d779","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$6e9c2c40baedc4d3$export$a6a5a7a461419425","$409182f2ccbbd4ee$export$76dcd8f8f83b6ddb","$409182f2ccbbd4ee$export$830a0dafbb2ef1c5","$efb91ee92486aa0c$export$153f8c6b4d8caebc","$9026238b70fbe082$export$2e2bcd8739ae039","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$9026238b70fbe082$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$5e0cf2909081fcd6$exports","$c82842fd382f9032$var$MultiLineString","MultiLineString","ends_","lineStrings","$c82842fd382f9032$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$2adf10d98c30c9dd$export$6a3300857e9ef453","getEnds","getLineString","$9026238b70fbe082$exports","getLineStrings","getFlatMidpoints","midpoints","$409182f2ccbbd4ee$export$fdb1d8e850bf7937","$c82842fd382f9032$export$2e2bcd8739ae039","$38233aa4318fb3ae$var$Point","Point","$38233aa4318fb3ae$var$__extends","$ec63ebe683e7bd4c$export$60815ead40ec79ab","$38233aa4318fb3ae$export$2e2bcd8739ae039","$6b7c872d1686d77f$var$MultiPoint","MultiPoint","$6b7c872d1686d77f$var$__extends","appendPoint","multiPoint","getPoint","$38233aa4318fb3ae$exports","getPoints","points","$6b7c872d1686d77f$export$2e2bcd8739ae039","$afdd7aad72fbf822$export$3c5e1905f889266e","twiceArea","$afdd7aad72fbf822$export$7a8ee541dfdf2ed5","$f475851524c79c1c$export$2e2bcd8739ae039","LinearRing","$f475851524c79c1c$var$__extends","getArea","$79b41c062bbdd59c$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$952c125ffed88db8$export$741858880c96b18c","$037571e3d596db9a$export$318f2842ed17e094","edge","$037571e3d596db9a$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$037571e3d596db9a$export$b71b604ddfc778c7","$037571e3d596db9a$export$ea9ed55fc2a85010","$0820b063c708bfba$var$Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$0820b063c708bfba$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","$f475851524c79c1c$exports","getLinearRings","linearRings","$0820b063c708bfba$export$2e2bcd8739ae039","$0820b063c708bfba$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$0820b063c708bfba$export$c16b671815801c75","$0820b063c708bfba$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$0820b063c708bfba$export$87d6a1539a56e47f","getRadius","startAngle","$5851bac22e3214dc$var$MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$5851bac22e3214dc$var$__extends","appendPolygon","newEndss","multiPolygon","$31903856a8cc25f7$export$37c18e6e7d50501a","$31903856a8cc25f7$export$60e067685eb8f9c4","$2ffae1bc01dcd8b1$export$c760d9d16cf92043","$afdd7aad72fbf822$export$78e139679ca7205","getEndss","getFlatInteriorPoints","$7946674c412a82d1$export$78e139679ca7205","interiorPoints","$79b41c062bbdd59c$export$11463803eda8a372","getInteriorPoints","$6b7c872d1686d77f$exports","$037571e3d596db9a$export$a1d138f4bd85f4b4","simplifiedEndss","$8b376c43ca456b0c$export$b9acf67ef05cd17c","getPolygon","prevEnds","$0820b063c708bfba$exports","getPolygons","$409182f2ccbbd4ee$export$77b72fa3792f5bf0","$ec63ebe683e7bd4c$export$f9f2bb59da4accd3","lastEnds","$5851bac22e3214dc$export$2e2bcd8739ae039","$17d970b9a6ec9617$var$GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$17d970b9a6ec9617$var$__extends","geoJSONFeature","$17d970b9a6ec9617$var$readGeometry","$5bfa5a5ae8f81a5f$exports","geoJSONFeatures","crs","$17d970b9a6ec9617$var$writeGeometry","objects","$843aafc6e566eea2$exports","$17d970b9a6ec9617$var$readPointGeometry","$17d970b9a6ec9617$var$readLineStringGeometry","$17d970b9a6ec9617$var$readPolygonGeometry","$17d970b9a6ec9617$var$readMultiPointGeometry","$c82842fd382f9032$exports","$17d970b9a6ec9617$var$readMultiLineStringGeometry","$5851bac22e3214dc$exports","$17d970b9a6ec9617$var$readMultiPolygonGeometry","map","$b352d83c6adf59d0$exports","$17d970b9a6ec9617$var$readGeometryCollectionGeometry","geoJSON","$17d970b9a6ec9617$var$writePointGeometry","$17d970b9a6ec9617$var$writeLineStringGeometry","rightHanded","$17d970b9a6ec9617$var$writePolygonGeometry","$17d970b9a6ec9617$var$writeMultiPointGeometry","$17d970b9a6ec9617$var$writeMultiLineStringGeometry","$17d970b9a6ec9617$var$writeMultiPolygonGeometry","geometry1","$17d970b9a6ec9617$var$writeGeometryCollectionGeometry","$17d970b9a6ec9617$export$2e2bcd8739ae039","$25afcf5ad39521a5$var$HEX_COLOR_RE_","$25afcf5ad39521a5$var$NAMED_COLOR_RE_","$25afcf5ad39521a5$export$590567be997858b6","color","$25afcf5ad39521a5$export$f84e8e69fd4488a5","$25afcf5ad39521a5$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$25afcf5ad39521a5$export$3004f64547af360e","s","g","exec","hasAlpha","parseInt","substr","$25afcf5ad39521a5$export$a3295358bff77e","Number","$25afcf5ad39521a5$var$fromStringInternal_","$25afcf5ad39521a5$export$75093a47a9fa838d","$441aa5b886fde9e2$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$441aa5b886fde9e2$var$getKey","setSize","maxCacheSize","$441aa5b886fde9e2$export$747ccdf771a87ab8","$94f1d2f94f2b7df1$export$2e2bcd8739ae039","$5e576ff631195774$export$2e2bcd8739ae039","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$5e576ff631195774$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$c530d450826284e6$export$2e2bcd8739ae039","$9376a23ada44155c$export$2e2bcd8739ae039","$daf70f87a90139ea$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$daf70f87a90139ea$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$daf70f87a90139ea$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$5e576ff631195774$exports","$bc5a53b0fb3ae156$var$MapRenderer","MapRenderer","map_","$bc5a53b0fb3ae156$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","layer1","$daf70f87a90139ea$exports","inView","getWrapX","callback_1","order","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$bc5a53b0fb3ae156$var$expireIconCache","$bc5a53b0fb3ae156$export$2e2bcd8739ae039","$70dabfea60f9a914$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$70dabfea60f9a914$var$__extends","$dc26ebbc966027e7$var$fontRegEx","RegExp","$dc26ebbc966027e7$var$fontRegExMatchIndex","$dc26ebbc966027e7$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$dc26ebbc966027e7$export$52ec625a6a53b6a6","$7ded474b40b0baaa$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$7ded474b40b0baaa$export$e823f88e4111159a","element","offsetWidth","marginLeft","marginRight","$7ded474b40b0baaa$export$fc5b8aac72846d1e","offsetHeight","marginTop","marginBottom","$7ded474b40b0baaa$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$7ded474b40b0baaa$export$1d0aa160432dfea5","$7ded474b40b0baaa$export$1e1c9bf5a4ffe0d1","lastChild","$42fd7bfc292637fd$export$e21b4112fdc612fc","$42fd7bfc292637fd$export$40a9eeef55665a40","$42fd7bfc292637fd$export$1d36981fcadac93b","console","warn","$42fd7bfc292637fd$var$measureFont","measureElement","$42fd7bfc292637fd$var$measureContext","$42fd7bfc292637fd$export$7fdcec604f0b1fa7","$42fd7bfc292637fd$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$42fd7bfc292637fd$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$42fd7bfc292637fd$export$4feaf6852ff92513","metrics","$42fd7bfc292637fd$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","measureText","$42fd7bfc292637fd$export$915c7ba51467308f","$42fd7bfc292637fd$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$42fd7bfc292637fd$var$executeLabelInstructions","drawImage","restore","$1b29c9925ee5c6bf$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$dc26ebbc966027e7$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$1b29c9925ee5c6bf$var$__extends","event_1","$70dabfea60f9a914$exports","declutterLayers","previousElement","layerIndex","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$7ded474b40b0baaa$export$caeacfe04f52533a","getDataAtPixel","$bc5a53b0fb3ae156$exports","$1b29c9925ee5c6bf$export$2e2bcd8739ae039","$1e0673079172f5f7$export$2e2bcd8739ae039","$d1622a899ef2b89d$var$Property","$d1622a899ef2b89d$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$d1622a899ef2b89d$var$__extends","$d1622a899ef2b89d$var$Collection","Collection","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d1622a899ef2b89d$export$2e2bcd8739ae039","$172d9d3c17b8a7cf$var$Property","$172d9d3c17b8a7cf$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$d1622a899ef2b89d$exports","setLayers","$172d9d3c17b8a7cf$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$172d9d3c17b8a7cf$export$2e2bcd8739ae039","$cf13847418ad81e4$export$2e2bcd8739ae039","MapEvent","$cf13847418ad81e4$var$__extends","$0f03dccd42bf4d1e$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$0f03dccd42bf4d1e$var$__extends","getEventPixel","getCoordinateFromPixel","$cf13847418ad81e4$exports","$fb658c031c1464b5$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$71df73cffc88db67$export$2e2bcd8739ae039","$281cc530eea9c034$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$281cc530eea9c034$var$__extends","emulateClick_","pointerEvent","newEvent1","$0f03dccd42bf4d1e$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$817cf70c7fced468$export$2e2bcd8739ae039","$3cd308c60d7fd495$export$2e2bcd8739ae039","$5d43589485999ca2$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$5d43589485999ca2$export$2e2bcd8739ae039","$17cb619e19250002$export$2e2bcd8739ae039","$0b27eaaca4255715$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$0b27eaaca4255715$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$0b27eaaca4255715$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","$a361b46708fdc9d9$export$2e2bcd8739ae039","$71f8bfc50f37b5a5$export$2e2bcd8739ae039","$b443e201cef53f60$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$b443e201cef53f60$export$f883a24d5edde77c","$03956f22a9281048$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$03956f22a9281048$var$getSmoothClampedResolution","$03956f22a9281048$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$b430471dc36859e7$export$e20fbacbb41798b","$b430471dc36859e7$export$f883a24d5edde77c","$29c6f6d78bb4f447$export$929e5a82286172a6","$29c6f6d78bb4f447$export$57636bb43b1ccbb0","$29c6f6d78bb4f447$export$9b47139b511b56e4","$29c6f6d78bb4f447$export$45db2fc2f15997e7","$372db372bb1eafd9$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$372db372bb1eafd9$var$__extends","resolutionConstraintInfo","$372db372bb1eafd9$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$372db372bb1eafd9$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$372db372bb1eafd9$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$372db372bb1eafd9$export$ee75376562060184","setHint","updateAnimations_","$372db372bb1eafd9$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$372db372bb1eafd9$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$03956f22a9281048$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$03956f22a9281048$export$22ac0f6b219de91a","theta","opt_tolerance","enableRotation","constrainRotation","$372db372bb1eafd9$export$2e2bcd8739ae039","$1531430a06fcb879$export$622c471beb1693c7","$1531430a06fcb879$export$a71a825ff42fb8e1","$31cb24803e978fe2$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$172d9d3c17b8a7cf$exports","view","$372db372bb1eafd9$exports","$31cb24803e978fe2$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$0b27eaaca4255715$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$31cb24803e978fe2$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$281cc530eea9c034$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","parseFloat","getClientRects","$31cb24803e978fe2$export$2e2bcd8739ae039","$0253f2b24e351864$var$Control","Control","target_","listenerKeys","$0253f2b24e351864$var$__extends","mapEvent","$0253f2b24e351864$export$2e2bcd8739ae039","$6fe94588175e6cb7$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6fe94588175e6cb7$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$0253f2b24e351864$exports","$6fe94588175e6cb7$export$2e2bcd8739ae039","$aaeae4cd33e8d58d$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$aaeae4cd33e8d58d$var$__extends","resetNorth_","$fbc1f81ea5c00c4e$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$fbc1f81ea5c00c4e$var$__extends","zoomByDelta_","currentZoom","newZoom","$d045b31d99c9f19b$export$2e2bcd8739ae039","$46913c3facd0ceb2$var$Property","$46913c3facd0ceb2$export$2e2bcd8739ae039","Overlay","insertFirst","stopEvent","autoPan","autoPanAnimation","margin","autoPanMargin","rendered","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","$46913c3facd0ceb2$var$__extends","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","opt_panIntoViewOptions","mapRect","getRect","overlayRect","panIntoViewOptions","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","msTransform","getOptions","$7de39b75caaef848$var$ControlledMap","ControlledMap","$7de39b75caaef848$var$__extends","$1b29c9925ee5c6bf$exports","$31cb24803e978fe2$exports","$7de39b75caaef848$export$2e2bcd8739ae039","OverviewMap","boundHandleRotationChanged_","handleRotationChanged_","rotateWithView_","rotateWithView","viewExtent_","ovmapDiv_","view_","ovmap_","ovmap","boxSizing","boxOverlay_","$46913c3facd0ceb2$exports","scope","overlayBox","move","mousePosition","endMoving","oldMap","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","$7de39b75caaef848$var$MAX_RATIO","LN2","$6e9c2c40baedc4d3$export$80cbab86674143b6","updateBox_","ovresolution","ovmapPostrenderKey_","getRotateWithView","setRotateWithView","getOverviewMap","$5b835091c3080d77$export$2e2bcd8739ae039","$df068c7e331712e2$export$4c486572e961a974","$df068c7e331712e2$export$ace321ff2a8016ef","$df068c7e331712e2$export$2e2bcd8739ae039","Interaction","setActive","$df068c7e331712e2$var$__extends","active","$bd48761daa50c7e6$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$bd48761daa50c7e6$var$__extends","shiftKey","$df068c7e331712e2$exports","zoomByDelta","$d6505b91813fc3f5$export$e2a20c553f6c85ce","$d6505b91813fc3f5$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$d6505b91813fc3f5$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$d6505b91813fc3f5$var$isPointerDraggingEvent","$d973e6b915d17568$export$84bf76cd7afc7469","conditions","pass","$d973e6b915d17568$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$d973e6b915d17568$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$d973e6b915d17568$export$d7ddd398f22d79ef","$d973e6b915d17568$export$ba9e5d519bc326ca","$d973e6b915d17568$export$1238ad6b5e7fff70","$d973e6b915d17568$export$b3e22bcfd64c1022","$d973e6b915d17568$export$194df8bad091b401","$d973e6b915d17568$export$fdc892d0d8fe3bfb","$d973e6b915d17568$export$5d31fe68a477cfbb","$d973e6b915d17568$export$e5570ca80cd8fd54","tagName","$d973e6b915d17568$export$abb7acbfa76bf3c4","pointerType","$d973e6b915d17568$export$189f0d593022b199","isPrimary","$5521bddb94963dca$export$2e2bcd8739ae039","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$5521bddb94963dca$var$__extends","centroid","$d6505b91813fc3f5$exports","update","getDistance","getAngle","centerpx","$7d6b553d2ecb7aae$export$2e2bcd8739ae039","DragRotate","lastAngle_","$7d6b553d2ecb7aae$var$__extends","$34a0103a786d0203$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$34a0103a786d0203$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$334ba95f02e91fbd$var$DragBoxEventType","$334ba95f02e91fbd$export$7053c33c051365ea","DragBoxEvent","$334ba95f02e91fbd$var$__extends","$334ba95f02e91fbd$export$2e2bcd8739ae039","DragBox","box_","$34a0103a786d0203$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$162bbdfaa4217272$export$2e2bcd8739ae039","DragZoom","out_","out","$162bbdfaa4217272$var$__extends","factor","$334ba95f02e91fbd$exports","$19219b8b46072706$export$2e2bcd8739ae039","$1f555de77a644a36$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$1f555de77a644a36$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$b71cdf9bb745a80a$export$2e2bcd8739ae039","KeyboardZoom","$b71cdf9bb745a80a$var$__extends","charCode","charCodeAt","$f97918a95109ec86$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$7ed4d731203fa277$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$7ed4d731203fa277$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$7ed4d731203fa277$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$4b86d14a22d71de2$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$4b86d14a22d71de2$var$__extends","rotationDelta","touch0","touch1","$ac04ae0f56a0dede$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$ac04ae0f56a0dede$var$__extends","scaleDelta","$b4714ca7c8215c38$export$2e2bcd8739ae039","$e745fbc69f624ade$export$2e2bcd8739ae039","ImageStyle","opacity_","scale_","scaleArray_","displacement_","displacement","getScale","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setScale","listenImageChange","unlistenImageChange","$4dc75ca2079b145c$export$dc5b1400ac3a10a8","$bd6465822d76b84c$var$RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$bd6465822d76b84c$var$__extends","getFill","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$bd6465822d76b84c$export$2e2bcd8739ae039","$2ec68ca3661f8eec$export$2e2bcd8739ae039","CircleStyle","$2ec68ca3661f8eec$var$__extends","setRadius","$bd6465822d76b84c$exports","$699098f8ad6aec62$export$2e2bcd8739ae039","Fill","color_","setColor","$78385b27df2567ec$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$87a6c33cb088ca70$var$Style","Style","geometryFunction_","$87a6c33cb088ca70$var$defaultGeometryFunction","image_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$87a6c33cb088ca70$var$defaultStyles","$87a6c33cb088ca70$export$6865c5ac2f5ce8b6","$2ec68ca3661f8eec$exports","$87a6c33cb088ca70$export$2e2bcd8739ae039","$60c00a18ac32f0c2$var$SelectEventType","$60c00a18ac32f0c2$export$1bcc516ebf36ffe2","SelectEvent","selected","deselected","$60c00a18ac32f0c2$var$__extends","$60c00a18ac32f0c2$var$originalFeatureStyles","$60c00a18ac32f0c2$var$Select","Select","styles","boundAddFeature_","addFeature_","boundRemoveFeature_","removeFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","white","blue","$87a6c33cb088ca70$export$ed1eaede5d0e77ac","features_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","lastIndexOf","removeFeatureLayerAssociation_","feature1","$60c00a18ac32f0c2$export$2e2bcd8739ae039","$da3c6f26ad25f5e5$export$2e2bcd8739ae039","Map","$fbc1f81ea5c00c4e$exports","zoomOptions","$aaeae4cd33e8d58d$exports","rotateOptions","attribution","$6fe94588175e6cb7$exports","attributionOptions","$c08bc411c2f7652d$export$ebe90cb607ad99e","altShiftDragRotate","$7d6b553d2ecb7aae$exports","doubleClickZoom","$bd48761daa50c7e6$exports","zoomDelta","zoomDuration","dragPan","$5521bddb94963dca$exports","pinchRotate","$4b86d14a22d71de2$exports","pinchZoom","$ac04ae0f56a0dede$exports","keyboard","$1f555de77a644a36$exports","$b71cdf9bb745a80a$exports","mouseWheelZoom","$7ed4d731203fa277$exports","shiftDragZoom","$162bbdfaa4217272$exports","$ccf0c7a17348fff8$export$ebe90cb607ad99e","$da3c6f26ad25f5e5$var$__extends","$f1538e9992d48ee3$exports","n1","_maxEntries","_minEntries","h1","p1","o1","leaf","s1","l1","u1","m1","h2","u","p","t2","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","define","amd","RBush","$7655387df8e4018f$var$RBush","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$7655387df8e4018f$export$2e2bcd8739ae039","$124fe04b3823a0d1$var$adaptAttributions","attributionLike","$124fe04b3823a0d1$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$124fe04b3823a0d1$var$__extends","getContextOptions","refresh","setAttributions","setState","$2b9c741835e514d8$export$2e2bcd8739ae039","$1dcde3bf973ca69b$export$84bf76cd7afc7469","$ef53cd2221bd6ee5$var$withCredentials","$ef53cd2221bd6ee5$export$14cc81df70b6707e","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$ef53cd2221bd6ee5$export$441d7b57adab24d0","addFeatures","$ee8a617f6b991801$export$d402fd02dc2b661c","VectorSourceEvent","opt_feature","opt_features","$ee8a617f6b991801$var$__extends","$ee8a617f6b991801$var$VectorSource","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$124fe04b3823a0d1$exports","$ee8a617f6b991801$export$2e2bcd8739ae039","$233f4a241cd6f1da$var$Property","$233f4a241cd6f1da$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$233f4a241cd6f1da$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$87a6c33cb088ca70$export$c314ea3f6b164147","$83b80126cb5b0215$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$83b80126cb5b0215$export$f21891651e408226","$83b80126cb5b0215$export$7a98aa5364d62ba8","$83b80126cb5b0215$export$9f746cc58a899a00","$83b80126cb5b0215$export$89b10f327e413e71","$83b80126cb5b0215$export$2e2bcd8739ae039","$bff206314e761f2d$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$906d055d1cc9728d$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$906d055d1cc9728d$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$906d055d1cc9728d$export$2e2bcd8739ae039","$1db580ffbfe1573a$export$2e2bcd8739ae039","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$1db580ffbfe1573a$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$906d055d1cc9728d$exports","$00a5e55ce40bd6cf$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$00a5e55ce40bd6cf$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$00a5e55ce40bd6cf$export$2e2bcd8739ae039","$70020585b8b05c70$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$70020585b8b05c70$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$70020585b8b05c70$export$2e2bcd8739ae039","$92d4995d229faa08$export$2e2bcd8739ae039","$b022c8a2fa43f1cc$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$59e4dc2734e97a0b$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$59e4dc2734e97a0b$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$59e4dc2734e97a0b$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$59e4dc2734e97a0b$export$2e2bcd8739ae039","$79390ed7e144c6b3$var$BATCH_CONSTRUCTORS","Circle","$70020585b8b05c70$exports","Default","$1db580ffbfe1573a$exports","$00a5e55ce40bd6cf$exports","Text","$59e4dc2734e97a0b$exports","$79390ed7e144c6b3$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$8ea4bf835af0b6e3$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$8ea4bf835af0b6e3$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","renderIfReadyAndVisible","loadImage","imageState","$bbdea363382e4968$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$bbdea363382e4968$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$8ea4bf835af0b6e3$exports","$4e8182639fc1b4f4$export$2e2bcd8739ae039","$07e4e915df48a003$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$0018ed6ab3ca970b$var$tmpExtent","$0018ed6ab3ca970b$var$p1","$0018ed6ab3ca970b$var$p2","$0018ed6ab3ca970b$var$p3","$0018ed6ab3ca970b$var$p4","$0018ed6ab3ca970b$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$0018ed6ab3ca970b$var$rtlRegEx","fromCharCode","$0018ed6ab3ca970b$var$horizontalTextAlign","align","test","TEXT_ALIGN","$0018ed6ab3ca970b$var$Executor","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$42fd7bfc292637fd$export$a539decdd6096c57","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","strokePadding","origin_1","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","i_1","ii_1","execute","executeHitDetection","$0018ed6ab3ca970b$export$2e2bcd8739ae039","$9d0d65645f8c8094$var$ORDER","$9d0d65645f8c8094$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$9d0d65645f8c8094$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$9d0d65645f8c8094$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","zs","opt_builderTypes","builderTypes","$9d0d65645f8c8094$export$2e2bcd8739ae039","$5c603051595c0108$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$5c603051595c0108$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$5c603051595c0108$export$2e2bcd8739ae039","$2b8efb29cc68abed$export$2e2bcd8739ae039","$ed108053bd0a2446$export$2e2bcd8739ae039","$bff26cb8dd85843e$export$2e2bcd8739ae039","ImageBase","$bff26cb8dd85843e$var$__extends","$2a4516497f4af408$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$2a4516497f4af408$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$bff26cb8dd85843e$exports","$0d77d75a1ee6ddd3$var$taintedTestContext","$0d77d75a1ee6ddd3$var$IconImage","IconImage","imageState_","tainted_","$0d77d75a1ee6ddd3$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$2a4516497f4af408$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$0d77d75a1ee6ddd3$export$3988ae62b71be9a3","$d1aa9153b1dac91e$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$0d77d75a1ee6ddd3$exports","offset_","offsetOrigin_","offsetOrigin","$d1aa9153b1dac91e$var$__extends","setAnchor","iconImageSize","$16e9f75d8b6d681c$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$16e9f75d8b6d681c$export$531ddd8416d52dfc","feature2","$16e9f75d8b6d681c$export$bdacc5b475012edb","$16e9f75d8b6d681c$export$36f470a33a42f413","$16e9f75d8b6d681c$var$renderGeometry","$16e9f75d8b6d681c$var$renderFeatureInternal","$4c04b301d9337902$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$4c04b301d9337902$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$9a68deaf29eb7021$export$3e4e33ea14aeb531","clipped","transforms","imageSmoothingEnabled","$5c603051595c0108$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","$d1aa9153b1dac91e$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$228839419cfa9dca$export$bd05e394339d469","resultFeatures","$228839419cfa9dca$export$6d4d555ddbfffa32","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","$6e9c2c40baedc4d3$export$39a9ce3624977b84","declutterBuilderGroup","userTransform","userExtent_1","$16e9f75d8b6d681c$export$75084a70d324c1e6","dirty","renderFeature","userExtent","replayGroupInstructions","$bbdea363382e4968$exports","$4c04b301d9337902$export$2e2bcd8739ae039","$803034a67506fc0e$export$2e2bcd8739ae039","VectorLayer","$803034a67506fc0e$var$__extends","$4c04b301d9337902$exports","$233f4a241cd6f1da$exports","$bd29a857a776c232$var$CONTEXT_IDS","$bd29a857a776c232$export$31553aaa555c1514","opt_attributes","$73c44c05f09d34de$export$f8deb2be8632fd10","$73c44c05f09d34de$export$37fe2e0df0b28841","Float32Array","Uint32Array","$73c44c05f09d34de$export$2e2bcd8739ae039","WebGLArrayBuffer","opt_usage","usage","ofSize","fromArray","arrayClass","from","fromArrayBuffer","buffer","getUsage","$70572d211f9e0460$export$2e2bcd8739ae039","$d74812514e89882d$export$2e2bcd8739ae039","WebGLPostProcessingPass","gl_","webGlContext","gl","scaleRatio_","scaleRatio","renderTargetTexture_","createTexture","renderTargetTextureSize_","frameBuffer_","createFramebuffer","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","FRAGMENT_SHADER","renderTargetProgram_","createProgram","attachShader","linkProgram","renderTargetVerticesBuffer_","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderTargetAttribLocation_","getAttribLocation","renderTargetUniformLocation_","getUniformLocation","renderTargetTextureLocation_","uniforms_","uniforms","location","getGL","init","textureSize","drawingBufferWidth","drawingBufferHeight","bindFramebuffer","FRAMEBUFFER","getFrameBuffer","viewport","internalFormat","RGBA","UNSIGNED_BYTE","bindTexture","TEXTURE_2D","texImage2D","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","framebufferTexture2D","COLOR_ATTACHMENT0","nextPass","activeTexture","TEXTURE0","clearColor","COLOR_BUFFER_BIT","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","useProgram","enableVertexAttribArray","vertexAttribPointer","FLOAT","uniform2f","uniform1i","applyUniforms","drawArrays","TRIANGLES","textureSlot","uniform","ImageData","texture","uniform3f","uniform4f","uniform1f","$06f92a4a6786663d$export$cefd10e2681057f4","mat4","$60e2000308cbd68a$export$5884154fdcf36ad1","$60e2000308cbd68a$export$e4eae9f321c2fba","PROJECTION_MATRIX","OFFSET_SCALE_MATRIX","OFFSET_ROTATION_MATRIX","TIME","ZOOM","RESOLUTION","$60e2000308cbd68a$export$d31c6c64cddbeeac","UNSIGNED_SHORT","UNSIGNED_INT","$60e2000308cbd68a$var$WebGLHelper","WebGLHelper","options1","boundHandleWebGLContextLost_","handleWebGLContextLost","boundHandleWebGLContextRestored_","handleWebGLContextRestored","bufferCache_","extensionCache_","currentProgram_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","uniformLocations_","attribLocations_","name_1","postProcessPasses_","postProcesses","shaderCompileErrors_","$60e2000308cbd68a$var$__extends","getExtension","bufferKey","bufferCache","webGlBuffer","flushBufferData","deleteBuffer","buf","bufferCacheEntry","isContextLost","loseContext","prepareDraw","opt_disableAlphaBlend","getCanvas","ZERO","applyFrameState","prepareDrawToRenderTarget","renderTarget","getFramebuffer","getTexture","drawElements","elementType","numItems","offsetInBytes","finalizeDraw","offsetScaleMatrix","offsetRotateMatrix","$9a68deaf29eb7021$export$bb628a54ab399bc9","setUniformMatrixValue","setUniformFloatValue","HTMLImageElement","prevValue","program","shader","getProgram","fragmentShaderSource","vertexShaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","getProgramParameter","LINK_STATUS","getAttributeLocation","makeProjectionTransform","uniformMatrix4fv","enableAttributeArray_","attribName","enableAttributes","attributes","$60e2000308cbd68a$export$68e74dfb6cc19fa4","attr","$60e2000308cbd68a$var$getByteSizeFromType","opt_data","opt_texture","BYTES_PER_ELEMENT","Uint16Array","$60e2000308cbd68a$export$2e2bcd8739ae039","$4522ba1d9f553ec3$export$25a4aaa23648aeeb","GENERATE_BUFFERS","$4522ba1d9f553ec3$var$WebGLLayerRenderer","WebGLLayerRenderer","helper","$60e2000308cbd68a$exports","$4522ba1d9f553ec3$var$__extends","$4522ba1d9f553ec3$var$tmpArray_","$4522ba1d9f553ec3$var$bufferPositions_","vertexPosition","indexPosition","$4522ba1d9f553ec3$var$writePointVertex","$4522ba1d9f553ec3$export$d5b474bcf7668477","elementIndex","vertexBuffer","indexBuffer","customAttributesCount","bufferPositions","customAttrs","vPos","iPos","baseIndex","$4522ba1d9f553ec3$export$d8225faa533b597f","createImageData","$4522ba1d9f553ec3$export$150265997bc2e47f","radix","divide","$4522ba1d9f553ec3$export$1cebf487eb3d824d","mult","$4522ba1d9f553ec3$export$2e2bcd8739ae039","$f31ebe1654ce6d06$var$tmpArray4","$f31ebe1654ce6d06$export$2e2bcd8739ae039","WebGLRenderTarget","helper_","texture_","framebuffer_","data_","dataCacheDirty_","updateSize_","clearCachedData","readAll","readPixels","readPixel","$858afa6c489b64e4$var$blob","Blob","$858afa6c489b64e4$var$url","URL","createObjectURL","$d0f027e51fa8578c$export$2e2bcd8739ae039","WebGLPointsLayerRenderer","projectionMatrixTransform","DefaultUniform","sourceRevision_","verticesBuffer_","hitVerticesBuffer_","indicesBuffer_","program_","hitDetectionEnabled_","hitFragmentShader","hitVertexShader","hitProgram_","customAttributes","attribute","AttributeType","hitDetectionAttributes","currentTransform_","renderTransform_","invertRenderTransform_","renderInstructions_","hitRenderInstructions_","hitRenderTarget_","worker_","Worker","received","$4522ba1d9f553ec3$exports","WebGLWorkerMessageType","projectionTransform","hitDetection","renderInstructions","featureCache_","featureCount_","sourceListenKeys_","handleSourceFeatureAdded_","handleSourceFeatureChanged_","handleSourceFeatureDelete_","handleSourceFeatureClear_","$d0f027e51fa8578c$var$__extends","renderCount","renderHitDetection","viewNotMoving","extentChanged","sourceChanged","rebuildBuffers_","featureCache","totalInstructionsCount","totalHitInstructionsCount","hitColor","tmpCoords","tmpColor","renderIndex","hitIndex","featureUid","colorEncodeId","postMessage","hitMessage","colorDecodeId","terminate","$71588fa4f17aa763$var$Property","$71588fa4f17aa763$var$DEFAULT_GRADIENT","$71588fa4f17aa763$var$Heatmap","Heatmap","gradient","blur","gradient_","handleGradientChanged_","setGradient","setBlur","weightFunction_","$71588fa4f17aa763$var$__extends","getBlur","getGradient","colors","createLinearGradient","addColorStop","$71588fa4f17aa763$var$createGradient","$d0f027e51fa8578c$exports","u_size","u_blurSlope","u_gradientTexture","$803034a67506fc0e$exports","$71588fa4f17aa763$export$2e2bcd8739ae039","$3e10cf8a87a9c75b$export$2e2bcd8739ae039","$b9fbd5f4a93e4110$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$b9fbd5f4a93e4110$var$__extends","getPreload","getUseInterimTilesOnError","$ab2be06f6b89441a$var$TileRange","TileRange","containsTileRange","getHeight","$ab2be06f6b89441a$export$958e3e1a02eac4b6","$ab2be06f6b89441a$export$2e2bcd8739ae039","$b099118b778b9320$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$b099118b778b9320$var$__extends","isDrawableTile","tileState","getTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","endTransition","frameState1","tileSource1","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$b099118b778b9320$export$2e2bcd8739ae039","$449890c6937bf05e$export$2e2bcd8739ae039","TileLayer","$449890c6937bf05e$var$__extends","$b099118b778b9320$exports","$b9fbd5f4a93e4110$exports","$2bdfaf37469c625f$export$2e2bcd8739ae039","Tile","interimTile","transition_","transitionStarts_","$2bdfaf37469c625f$var$__extends","release","refreshInterimChain","getTileCoord","$dcb54584119be9f9$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","tileLoadFunction_","$dcb54584119be9f9$var$__extends","naturalWidth","naturalHeight","$2bdfaf37469c625f$exports","$5196f19b885199f3$var$brokenDiagonalRendering_","$3346793e0e9bd27c$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$3a621e35d57a6dfe$export$ab6c91696bd3263e","msImageSmoothingEnabled","$5196f19b885199f3$var$drawTestTriangle","v1","u2","v2","$5196f19b885199f3$var$verifyBrokenDiagonalRendering","$5196f19b885199f3$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$5196f19b885199f3$export$b3890eb0ae9dca99","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$ad67a80bd590adc8$export$8240f01c446270e6","$5196f19b885199f3$var$isBrokenDiagonalRendering","ud","vd","$4654efc21da0fd54$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$5196f19b885199f3$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$4654efc21da0fd54$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$e9609137bb57fc04$var$LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$e9609137bb57fc04$export$2e2bcd8739ae039","$f98984479a3a373c$export$958e3e1a02eac4b6","opt_tileCoord","$f98984479a3a373c$export$92d0df0f1d25c63c","$f98984479a3a373c$export$a47fb462a08de82f","$2826729be38ea713$export$2e2bcd8739ae039","TileCache","$2826729be38ea713$var$__extends","pruneExceptNewestZ","$f98984479a3a373c$export$a807b7874eb66454","$70566066727e45de$export$2e2bcd8739ae039","$238bdbed35ee6c2b$var$tmpTileCoord","$238bdbed35ee6c2b$var$TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$238bdbed35ee6c2b$export$2e2bcd8739ae039","$fc48a08ae8a90af8$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$fc48a08ae8a90af8$var$resolutionsFromExtent","$fc48a08ae8a90af8$export$ce88871416242df8","$fc48a08ae8a90af8$export$7b5b6ef8fd55fac4","$fc48a08ae8a90af8$export$a251b12f5601c16f","opt_maxResolution","half","$593871892a2c101c$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$2826729be38ea713$exports","tmpSize","tileOptions","$593871892a2c101c$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","$fc48a08ae8a90af8$export$39a9ce3624977b84","$f98984479a3a373c$export$60bedf8e3e3c3dbe","$593871892a2c101c$export$c571855c51e6c4b6","TileSourceEvent","$593871892a2c101c$export$2e2bcd8739ae039","$aeb5328ce464660f$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$aeb5328ce464660f$export$436f44dbcc31fea3","templates","tileUrlFunctions","$f98984479a3a373c$export$d6af199866bfb566","$aeb5328ce464660f$export$4229b1d9af69b3be","$bd1c763129ac0ebc$var$UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$bd1c763129ac0ebc$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$593871892a2c101c$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$aeb5328ce464660f$export$2a1fa079bfd73dde","$bd1c763129ac0ebc$export$2e2bcd8739ae039","$376392de2838aa74$var$TileImage","TileImage","$376392de2838aa74$var$defaultTileLoadFunction","tileClass","$dcb54584119be9f9$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$376392de2838aa74$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","$4654efc21da0fd54$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$bd1c763129ac0ebc$exports","imageTile","$376392de2838aa74$export$2e2bcd8739ae039","$78baeb7a0deea579$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$fc48a08ae8a90af8$export$38500bbeccc864ff","$78baeb7a0deea579$var$__extends","$376392de2838aa74$exports","$f976bf797198355a$var$vectorSource1","$ee8a617f6b991801$exports","$17d970b9a6ec9617$exports","$f976bf797198355a$var$vectorSource2","$f976bf797198355a$var$vectorSource3","$f976bf797198355a$var$vectorSource4","$f976bf797198355a$var$vectorLayer","$f976bf797198355a$var$url3","$f976bf797198355a$var$map","$da3c6f26ad25f5e5$exports","$449890c6937bf05e$exports","$78baeb7a0deea579$exports","$f976bf797198355a$var$select","$60c00a18ac32f0c2$exports","$f976bf797198355a$var$selectedFeatures","$f976bf797198355a$var$dragBox","oblique","candidateFeatures","$f976bf797198355a$var$infoBox","names","custom","$f976bf797198355a$var$form","$f976bf797198355a$var$currZoom","$f976bf797198355a$var$wrapLon","overview_map","$7de39b75caaef848$exports","querySelector","$f976bf797198355a$var$heatfeature","$f976bf797198355a$var$heatmaplayer","$71588fa4f17aa763$exports"],"version":3,"file":"index.c24ec783.js.map"}