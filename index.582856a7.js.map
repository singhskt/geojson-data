{"mappings":"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","sources":["node_modules/ol/src/events/Event.js","node_modules/ol/src/ObjectEventType.js","node_modules/ol/src/Disposable.js","node_modules/ol/src/array.js","node_modules/ol/src/functions.js","node_modules/ol/src/obj.js","node_modules/ol/src/events/Target.js","node_modules/ol/src/events/EventType.js","node_modules/ol/src/events.js","node_modules/ol/src/Observable.js","node_modules/ol/src/util.js","node_modules/ol/src/Object.js","node_modules/ol/src/AssertionError.js","node_modules/ol/src/asserts.js","node_modules/ol/src/Feature.js","node_modules/ol/src/proj/Units.js","node_modules/ol/src/transform.js","node_modules/ol/src/has.js","node_modules/ol/src/extent/Corner.js","node_modules/ol/src/extent/Relationship.js","node_modules/ol/src/extent.js","node_modules/ol/src/proj/Projection.js","node_modules/ol/src/math.js","node_modules/ol/src/proj/epsg3857.js","node_modules/ol/src/proj/epsg4326.js","node_modules/ol/src/proj/projections.js","node_modules/ol/src/proj/transforms.js","node_modules/ol/src/geom/GeometryType.js","node_modules/ol/src/sphere.js","node_modules/ol/src/coordinate.js","node_modules/ol/src/proj.js","node_modules/ol/src/geom/flat/transform.js","node_modules/ol/src/geom/Geometry.js","node_modules/ol/src/geom/GeometryCollection.js","node_modules/ol/src/format/Feature.js","node_modules/ol/src/format/FormatType.js","node_modules/ol/src/format/JSONFeature.js","node_modules/ol/src/geom/GeometryLayout.js","node_modules/ol/src/geom/SimpleGeometry.js","node_modules/ol/src/geom/flat/closest.js","node_modules/ol/src/geom/flat/deflate.js","node_modules/ol/src/geom/flat/simplify.js","node_modules/ol/src/geom/flat/segments.js","node_modules/ol/src/geom/flat/inflate.js","node_modules/ol/src/geom/flat/interpolate.js","node_modules/ol/src/geom/flat/contains.js","node_modules/ol/src/geom/flat/intersectsextent.js","node_modules/ol/src/geom/flat/length.js","node_modules/ol/src/geom/LineString.js","node_modules/ol/src/geom/MultiLineString.js","node_modules/ol/src/geom/Point.js","node_modules/ol/src/geom/MultiPoint.js","node_modules/ol/src/geom/flat/area.js","node_modules/ol/src/geom/LinearRing.js","node_modules/ol/src/geom/flat/interiorpoint.js","node_modules/ol/src/geom/flat/reverse.js","node_modules/ol/src/geom/flat/orient.js","node_modules/ol/src/geom/Polygon.js","node_modules/ol/src/geom/MultiPolygon.js","node_modules/ol/src/geom/flat/center.js","node_modules/ol/src/format/GeoJSON.js","node_modules/ol/src/color.js","node_modules/ol/src/style/IconImageCache.js","node_modules/ol/src/layer/Property.js","node_modules/ol/src/layer/Base.js","node_modules/ol/src/render/EventType.js","node_modules/ol/src/source/State.js","node_modules/ol/src/layer/Layer.js","node_modules/ol/src/renderer/Map.js","node_modules/ol/src/render/Event.js","node_modules/ol/src/css.js","node_modules/ol/src/dom.js","node_modules/ol/src/render/canvas.js","node_modules/ol/src/renderer/Composite.js","node_modules/ol/src/CollectionEventType.js","node_modules/ol/src/Collection.js","node_modules/ol/src/layer/Group.js","node_modules/ol/src/MapEvent.js","node_modules/ol/src/MapBrowserEvent.js","node_modules/ol/src/MapBrowserEventType.js","node_modules/ol/src/pointer/EventType.js","node_modules/ol/src/MapBrowserEventHandler.js","node_modules/ol/src/MapEventType.js","node_modules/ol/src/MapProperty.js","node_modules/ol/src/structs/PriorityQueue.js","node_modules/ol/src/TileState.js","node_modules/ol/src/TileQueue.js","node_modules/ol/src/ViewHint.js","node_modules/ol/src/ViewProperty.js","node_modules/ol/src/centerconstraint.js","node_modules/ol/src/resolutionconstraint.js","node_modules/ol/src/rotationconstraint.js","node_modules/ol/src/easing.js","node_modules/ol/src/View.js","node_modules/ol/src/tilegrid/common.js","node_modules/ol/src/size.js","node_modules/ol/src/PluggableMap.js","node_modules/ol/src/control/Control.js","node_modules/ol/src/control/Attribution.js","node_modules/ol/src/control/Rotate.js","node_modules/ol/src/control/Zoom.js","node_modules/ol/src/interaction/Property.js","node_modules/ol/src/interaction/Interaction.js","node_modules/ol/src/interaction/DoubleClickZoom.js","node_modules/ol/src/interaction/Pointer.js","node_modules/ol/src/events/condition.js","node_modules/ol/src/interaction/DragPan.js","node_modules/ol/src/interaction/DragRotate.js","node_modules/ol/src/render/Box.js","node_modules/ol/src/interaction/DragBox.js","node_modules/ol/src/interaction/DragZoom.js","node_modules/ol/src/events/KeyCode.js","node_modules/ol/src/interaction/KeyboardPan.js","node_modules/ol/src/interaction/KeyboardZoom.js","node_modules/ol/src/Kinetic.js","node_modules/ol/src/interaction/MouseWheelZoom.js","node_modules/ol/src/interaction/PinchRotate.js","node_modules/ol/src/interaction/PinchZoom.js","node_modules/ol/src/ImageState.js","node_modules/ol/src/style/Image.js","node_modules/ol/src/colorlike.js","node_modules/ol/src/style/RegularShape.js","node_modules/ol/src/style/Circle.js","node_modules/ol/src/style/Fill.js","node_modules/ol/src/style/Stroke.js","node_modules/ol/src/style/Style.js","node_modules/ol/src/interaction/Select.js","node_modules/ol/src/Map.js","node_modules/ol/src/control.js","node_modules/ol/src/interaction.js","node_modules/rbush/rbush.min.js","node_modules/ol/src/structs/RBush.js","node_modules/ol/src/source/Source.js","node_modules/ol/src/source/VectorEventType.js","node_modules/ol/src/loadingstrategy.js","node_modules/ol/src/featureloader.js","node_modules/ol/src/source/Vector.js","node_modules/ol/src/layer/TileProperty.js","node_modules/ol/src/layer/BaseTile.js","node_modules/ol/src/renderer/Layer.js","node_modules/ol/src/renderer/canvas/Layer.js","node_modules/ol/src/TileRange.js","node_modules/ol/src/renderer/canvas/TileLayer.js","node_modules/ol/src/layer/Tile.js","node_modules/ol/src/layer/BaseVector.js","node_modules/ol/src/render/canvas/Instruction.js","node_modules/ol/src/render/VectorContext.js","node_modules/ol/src/render/canvas/Builder.js","node_modules/ol/src/render/canvas/ImageBuilder.js","node_modules/ol/src/render/canvas/LineStringBuilder.js","node_modules/ol/src/render/canvas/PolygonBuilder.js","node_modules/ol/src/style/TextPlacement.js","node_modules/ol/src/geom/flat/straightchunk.js","node_modules/ol/src/render/canvas/TextBuilder.js","node_modules/ol/src/render/canvas/BuilderGroup.js","node_modules/ol/src/render/canvas/BuilderType.js","node_modules/ol/src/geom/flat/textpath.js","node_modules/ol/src/render/canvas/Executor.js","node_modules/ol/src/render/canvas/ExecutorGroup.js","node_modules/ol/src/render/canvas/Immediate.js","node_modules/ol/src/style/IconAnchorUnits.js","node_modules/ol/src/style/IconOrigin.js","node_modules/ol/src/ImageBase.js","node_modules/ol/src/Image.js","node_modules/ol/src/style/IconImage.js","node_modules/ol/src/style/Icon.js","node_modules/ol/src/renderer/vector.js","node_modules/ol/src/renderer/canvas/VectorLayer.js","node_modules/ol/src/render/canvas/hitdetect.js","node_modules/ol/src/layer/Vector.js","node_modules/ol/src/Tile.js","node_modules/ol/src/ImageTile.js","node_modules/ol/src/reproj/common.js","node_modules/ol/src/reproj.js","node_modules/ol/src/reproj/Triangulation.js","node_modules/ol/src/source/common.js","node_modules/ol/src/reproj/Tile.js","node_modules/ol/src/structs/LRUCache.js","node_modules/ol/src/tilecoord.js","node_modules/ol/src/TileCache.js","node_modules/ol/src/source/TileEventType.js","node_modules/ol/src/tilegrid/TileGrid.js","node_modules/ol/src/tilegrid.js","node_modules/ol/src/source/Tile.js","node_modules/ol/src/tileurlfunction.js","node_modules/ol/src/source/UrlTile.js","node_modules/ol/src/source/TileImage.js","node_modules/ol/src/source/XYZ.js","main.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [opt_comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (typeof direction === 'function') {\n            if (direction(target, arr[i - 1], arr[i]) > 0) {\n              return i - 1;\n            } else {\n              return i;\n            }\n          } else if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function (el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [opt_func] Comparison function.\n * @param {boolean} [opt_strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (opt_strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign =\n  typeof Object.assign === 'function'\n    ? Object.assign\n    : function (target, var_sources) {\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        const output = Object(target);\n        for (let i = 1, ii = arguments.length; i < ii; ++i) {\n          const source = arguments[i];\n          if (source !== undefined && source !== null) {\n            for (const key in source) {\n              if (source.hasOwnProperty(key)) {\n                output[key] = source[key];\n              }\n            }\n          }\n        }\n        return output;\n      };\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues =\n  typeof Object.values === 'function'\n    ? Object.values\n    : function (object) {\n        const values = [];\n        for (const property in object) {\n          values.push(object[property]);\n        }\n        return values;\n      };\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [opt_target] Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (listenersForType.indexOf(listener) === -1) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    /** @type {import(\"./Event.js\").default|Event} */\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_ && this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      const dispatching = this.dispatching_ || (this.dispatching_ = {});\n      const pendingRemovals =\n        this.pendingRemovals_ || (this.pendingRemovals_ = {});\n      if (!(type in dispatching)) {\n        dispatching[type] = 0;\n        pendingRemovals[type] = 0;\n      }\n      ++dispatching[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if ('handleEvent' in listeners[i]) {\n          propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n            listeners[i]\n          ).handleEvent(evt);\n        } else {\n          propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n            listeners[i]\n          ).call(this, evt);\n        }\n        if (propagate === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --dispatching[type];\n      if (dispatching[type] === 0) {\n        let pr = pendingRemovals[type];\n        delete pendingRemovals[type];\n        while (pr--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete dispatching[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [opt_type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return opt_type\n      ? opt_type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [opt_once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [opt_this] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ (\n    (function () {\n      throw new Error('Unimplemented abstract method.');\n    })()\n  );\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {assign, isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [opt_values] An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (opt_silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [opt_silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [opt_silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message =\n      'Assertion failed. See https://openlayers.org/en/' +\n      path +\n      '/doc/errors/#' +\n      code +\n      ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature<import(\"./geom/Geometry.js\").default>|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [opt_geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [opt_style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style;\n    this.styleFunction_ = !opt_style\n      ? undefined\n      : createStyleFunction(opt_style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function () {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  /**\n   * Radians\n   * @api\n   */\n  RADIANS: 'radians',\n  /**\n   * Degrees\n   * @api\n   */\n  DEGREES: 'degrees',\n  /**\n   * Feet\n   * @api\n   */\n  FEET: 'ft',\n  /**\n   * Meters\n   * @api\n   */\n  METERS: 'm',\n  /**\n   * Pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n  /**\n   * Tile Pixels\n   * @api\n   */\n  TILE_PIXELS: 'tile-pixels',\n  /**\n   * US Feet\n   * @api\n   */\n  USFEET: 'us-ft',\n};\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': Units.METERS,\n  '9002': Units.FEET,\n  '9003': Units.USFEET,\n  '9101': Units.RADIANS,\n  '9102': Units.DEGREES,\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.RADIANS] = 6370997 / (2 * Math.PI);\nMETERS_PER_UNIT[Units.DEGREES] = (2 * Math.PI * 6370997) / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [opt_extent] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value,\n    ];\n  }\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_extent\n) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./extent/Corner.js\").default} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [opt_extent] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(\n  center,\n  resolution,\n  rotation,\n  size,\n  opt_extent\n) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    opt_extent\n  );\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [opt_extent] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [opt_extent] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [opt_extent] Destination extent.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent, opt_stops) {\n  let coordinates = [];\n  if (opt_stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < opt_stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / opt_stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / opt_stops,\n        extent[2] - (width * i) / opt_stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / opt_stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution getPointResolution()} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function (x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n})();\n\n/**\n * Return the base 2 logarithm of a given number. The method will use the\n * native `Math.log2` function if it is available, otherwise the base 2\n * logarithm will be calculated via the reference implementation of the\n * Mozilla developer network.\n *\n * @param {number} x X.\n * @return {number} Base 2 logarithm of x.\n */\nexport const log2 = (function () {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let log2;\n  if ('log2' in Math) {\n    // The environment supports the native Math.log2 function, use it…\n    log2 = Math.log2;\n  } else {\n    // … else, use the reference implementation of MDN:\n    log2 = function (x) {\n      return Math.log(x) * Math.LOG2E;\n    };\n  }\n  return log2;\n})();\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\nimport {cosh} from '../math.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [opt_axisOrientation] Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle',\n};\n","/**\n * @module ol/sphere\n */\nimport GeometryType from './geom/GeometryType.js';\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [opt_options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [opt_radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - deg * 3600 - min * 60;\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return (\n    deg +\n    '\\u00b0 ' +\n    padNumber(min, 2) +\n    '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) +\n    '\\u2033' +\n    (normalizedDegrees == 0\n      ? ''\n      : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0))\n  );\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits)\n    );\n  } else {\n    return '';\n  }\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [opt_fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [opt_sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, opt_sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    const sourceExtentWidth =\n      opt_sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {getDistance} from './sphere.js';\nimport {getWorldsAway} from './coordinate.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [opt_output] Output array of coordinate values.\n * @param {number} [opt_dimension] Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").default} [opt_units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if ((units == Units.DEGREES && !opt_units) || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && units !== Units.DEGREES) {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = opt_units\n        ? METERS_PER_UNIT[opt_units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return /** @type {Projection} */ (projection);\n  }\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [opt_output] Output.\n     * @param {number} [opt_dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [opt_projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [opt_projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(\n    coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [opt_stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, opt_stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, opt_stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @return {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destiation).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destiation).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let sourceX = coord[0];\n    let sourceY = coord[1];\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        sourceX = sourceX - worldsAway * sourceExtentWidth;\n      }\n      sourceX = clamp(sourceX, sourceExtent[0], sourceExtent[2]);\n      sourceY = clamp(sourceY, sourceExtent[1], sourceExtent[3]);\n      transformed = transform([sourceX, sourceY]);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  opt_dest\n) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      opt_transform\n    ) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      opt_transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == Units.TILE_PIXELS\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport GeometryType from './GeometryType.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} [opt_geometries] Geometries.\n   */\n  constructor(opt_geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    if (!this.geometries_) {\n      return;\n    }\n    for (let i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(this.geometries_[i], EventType.CHANGE, this.changed, this)\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive()\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(null);\n      simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n      return simplifiedGeometryCollection;\n    } else {\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.GEOMETRY_COLLECTION;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  const clonedGeometries = [];\n  for (let i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/format/Feature\n */\nimport Units from '../proj/Units.js';\nimport {abstract} from '../util.js';\nimport {assign} from '../obj.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  transformExtent,\n} from '../proj.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, opt_options) {\n    let options;\n    if (opt_options) {\n      let dataProjection = opt_options.dataProjection\n        ? getProjection(opt_options.dataProjection)\n        : this.readProjection(source);\n      if (\n        opt_options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === Units.TILE_PIXELS\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(opt_options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: opt_options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n      },\n      options\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike} Feature.\n   */\n  readFeature(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  readFeatures(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [opt_options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, opt_options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [opt_options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  let transformed;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    transformed = (write ? geometry.clone() : geometry).transform(\n      write ? featureProjection : dataProjection,\n      write ? dataProjection : featureProjection\n    );\n  } else {\n    transformed = geometry;\n  }\n  if (\n    write &&\n    opt_options &&\n    /** @type {WriteOptions} */ (opt_options).decimals !== undefined\n  ) {\n    const power = Math.pow(\n      10,\n      /** @type {WriteOptions} */ (opt_options).decimals\n    );\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = geometry.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [opt_options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, opt_options) {\n  const featureProjection = opt_options\n    ? getProjection(opt_options.featureProjection)\n    : null;\n  const dataProjection = opt_options\n    ? getProjection(opt_options.dataProjection)\n    : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  } else {\n    return extent;\n  }\n}\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml',\n};\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport FormatType from './FormatType.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./FormatType.js\").default} Format.\n   */\n  getType() {\n    return FormatType.JSON;\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @api\n   */\n  readFeature(source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  readFeatures(source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, opt_options)\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, opt_options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM',\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./GeometryLayout.js\").default}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {import(\"./GeometryLayout.js\").default} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./GeometryLayout.js\").default|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [opt_sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./GeometryLayout.js\").default} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return /** @type {import(\"./GeometryLayout.js\").default} */ (layout);\n}\n\n/**\n * @param {import(\"./GeometryLayout.js\").default} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      transform,\n      opt_dest\n    );\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [opt_tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  opt_tmpPoint\n) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [opt_ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  opt_ends\n) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [opt_endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  opt_endss\n) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [opt_simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  opt_simplifiedFlatCoordinates\n) {\n  const simplifiedFlatCoordinates =\n    opt_simplifiedFlatCoordinates !== undefined\n      ? opt_simplifiedFlatCoordinates\n      : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [opt_coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  opt_coordinates\n) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [opt_coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_coordinatess\n) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [opt_coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_coordinatesss\n) {\n  const coordinatesss =\n    opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      coordinatesss[i]\n    );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [opt_dest] Destination.\n * @param {number} [opt_dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  opt_dest,\n  opt_dimension\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  const dest = opt_dest ? opt_dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n        ? flatCoordinates[o + i]\n        : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t\n      )\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (\n      this.layout != GeometryLayout.XYM &&\n      this.layout != GeometryLayout.XYZM\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [opt_dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      opt_dest,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [opt_extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [opt_interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if (\n      (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new MultiLineString(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1]\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates\n      ? 0\n      : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {linearRingsContainsXY} from './contains.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [opt_dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  opt_dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      !linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right)\n    ) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  opt_right\n) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [opt_right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  opt_right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      opt_right\n    );\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<number>} [opt_ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEnds\n    );\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [opt_n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [opt_sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, opt_sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [\n    flatCoordinates.length,\n  ]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [opt_sides] Number of sides of the polygon. Default is 32.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [opt_angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @param {Array<Array<number>>} [opt_endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(\n        opt_layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        opt_layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [opt_right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        opt_right\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(\n      this.getFlatInteriorPoints().slice(),\n      GeometryLayout.XYM\n    );\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss\n    );\n    return new MultiPolygon(\n      simplifiedFlatCoordinates,\n      GeometryLayout.XY,\n      simplifiedEndss\n    );\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default} [opt_layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport JSONFeature from './JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assert} from '../asserts.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326'\n    );\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   */\n  readFeatureFromObject(object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometry(geoJSONFeature['geometry'], opt_options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (\n      this.extractGeometryName_ &&\n      'geometry_name' in geoJSONFeature !== undefined\n    ) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(geometry);\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   */\n  readFeaturesFromObject(object, opt_options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<import(\"../Feature.js\").default>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(geoJSONFeatures[i], opt_options)\n        );\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, opt_options) {\n    return readGeometry(object, opt_options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], opt_options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n\n  /**\n   * @type {import(\"../geom/Geometry.js\").default}\n   */\n  let geometry;\n  switch (object['type']) {\n    case GeometryType.POINT: {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object)\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object)\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object)\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object.type);\n    }\n  }\n  return transformGeometryWithOptions(geometry, false, opt_options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [opt_options] Read options.\n * @return {GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometry(geometry, opt_options);\n    }\n  );\n  return new GeometryCollection(geometries);\n}\n\n/**\n * @param {GeoJSONPoint} object Object.\n * @return {Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object['coordinates']);\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object['coordinates']);\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  geometry = transformGeometryWithOptions(geometry, true, opt_options);\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case GeometryType.POINT: {\n      geoJSON = writePointGeometry(\n        /** @type {Point} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.LINE_STRING: {\n      geoJSON = writeLineStringGeometry(\n        /** @type {LineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.POLYGON: {\n      geoJSON = writePolygonGeometry(\n        /** @type {Polygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POINT: {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {MultiPoint} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING: {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {MultiLineString} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {MultiPolygon} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {GeometryCollection} */ (geometry),\n        opt_options\n      );\n      break;\n    }\n    case GeometryType.CIRCLE: {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {GeometryCollection} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    const options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {LineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiLineString} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPoint} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {MultiPolygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {Point} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {Polygon} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [opt_options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  let right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return (\n    HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0\n  );\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [opt_managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: opt_managed === undefined ? true : opt_managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error',\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:source'|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} SourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {import(\"../source/State.js\").default} sourceState SourceState.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}. Components\n * like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link import(\"../PluggableMap.js\").default#forEachLayerAtPixel map.forEachLayerAtPixel()} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return new Promise((resolve) => resolve([]));\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map~Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../PluggableMap.js\").default} map Map.\n * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [opt_inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   * @param {?CanvasRenderingContext2D} [opt_context] Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n\n/**\n * @param {number} opacity Opacity (0..1).\n * @return {string} CSS opacity.\n */\nexport function cssOpacity(opacity) {\n  return opacity === 1 ? '' : String(Math.round(opacity * 100) / 100);\n}\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [opt_width] Canvas width.\n * @param {number} [opt_height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [opt_canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [opt_Context2DSettings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(\n  opt_width,\n  opt_height,\n  opt_canvasPool,\n  opt_Context2DSettings\n) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (opt_canvasPool && opt_canvasPool.length) {\n    canvas = opt_canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(opt_width || 300, opt_height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n    canvas.style.all = 'unset';\n  }\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', opt_Context2DSettings)\n  );\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport EventTarget from '../events/Target.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {string} [textAlign] TextAlign.\n * @property {string} textBaseline TextBaseline.\n * @property {string} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache~LRUCache#setSize cache.setSize()}.\n * Deprecated - there is no label cache any more.\n * @type {?}\n * @api\n * @deprecated\n */\nexport const labelCache = new EventTarget();\nlabelCache.setSize = function () {\n  console.warn('labelCache is deprecated.'); //eslint-disable-line\n};\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n      if (\n        !inView(layerState, viewState) ||\n        (layerState.sourceState != SourceState.READY &&\n          layerState.sourceState != SourceState.UNDEFINED)\n      ) {\n        continue;\n      }\n\n      const layer = layerState.layer;\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachLayerAtPixel(pixel, frameState, hitTolerance, callback, layerFilter) {\n    const viewState = frameState.viewState;\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    for (let i = numLayers - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (\n        layer.hasRenderer() &&\n        inView(layerState, viewState) &&\n        layerFilter(layer)\n      ) {\n        const layerRenderer = layer.getRenderer();\n        const data = layerRenderer.getDataAtPixel(\n          pixel,\n          frameState,\n          hitTolerance\n        );\n        if (data) {\n          const result = callback(layer, data);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {*} [opt_element] Element.\n   * @param {number} [opt_index] The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [opt_array] Array.\n   * @param {Options} [opt_options] Collection options.\n   */\n  constructor(opt_array, opt_options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      );\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      );\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [opt_except] Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport SourceState from '../source/State.js';\nimport {assert} from '../asserts.js';\nimport {assign, clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|import(\"../Collection.js\").default<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [opt_options] Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const baseOptions = /** @type {Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.listenerKeys_[getUid(layer)] = [\n        listen(\n          layer,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleLayerChange_,\n          this\n        ),\n        listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n      ];\n    }\n\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    this.listenerKeys_[getUid(layer)] = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = /** @type {import(\"./Base.js\").default} */ (\n      collectionEvent.element\n    );\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!import(\"../Collection.js\").default<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [opt_array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If opt_states is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [opt_states] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states !== undefined ? opt_states : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!opt_states && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return SourceState.READY;\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [opt_dragging] Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState} [opt_frameState] Frame state.\n   */\n  constructor(type, map, originalEvent, opt_dragging, opt_frameState) {\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {VOID} from './functions.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./PluggableMap.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(\n        /** @this {MapBrowserEventHandler} */\n        function () {\n          this.clickTimeoutId_ = undefined;\n          const newEvent = new MapBrowserEvent(\n            MapBrowserEventType.SINGLECLICK,\n            this.map_,\n            pointerEvent\n          );\n          this.dispatchEvent(newEvent);\n        }.bind(this),\n        250\n      );\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_ === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n\n    // Store a copy of the down event\n    this.down_ = /** @type {PointerEvent} */ ({});\n    for (const property in pointerEvent) {\n      const value = pointerEvent[property];\n      this.down_[property] = typeof value === 'function' ? VOID : value;\n    }\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserEvent matches the PointerEvent type.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(pointerEvent.type, this.map_, pointerEvent, dragging)\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./PluggableMap.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [opt_centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, opt_isMoving, opt_centerShift) {\n      if (center) {\n        const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n        const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n        const shiftX = opt_centerShift ? opt_centerShift[0] : 0;\n        const shiftY = opt_centerShift ? opt_centerShift[1] : 0;\n        let minX = extent[0] + viewWidth / 2 + shiftX;\n        let maxX = extent[2] - viewWidth / 2 + shiftX;\n        let minY = extent[1] + viewHeight / 2 + shiftY;\n        let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n        // note: when zooming out of bounds, min and max values for x and y may\n        // end up inverted (min > max); this has to be accounted for\n        if (minX > maxX) {\n          minX = (maxX + minX) / 2;\n          maxX = minX;\n        }\n        if (minY > maxY) {\n          minY = (maxY + minY) / 2;\n          maxY = minY;\n        }\n\n        let x = clamp(center[0], minX, maxX);\n        let y = clamp(center[1], minY, maxY);\n        const ratio = 30 * resolution;\n\n        // during an interaction, allow some overscroll\n        if (opt_isMoving && smooth) {\n          x +=\n            -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n          y +=\n            -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n            ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n        }\n\n        return [x, y];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [opt_minResolution] Minimum resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  opt_minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const minResolution =\n          opt_minResolution !== undefined ? opt_minResolution : 0;\n\n        // during interacting or animating, allow intermediary values\n        if (opt_isMoving) {\n          const smooth = opt_smooth !== undefined ? opt_smooth : true;\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [opt_smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [opt_maxExtent] Maximum allowed extent.\n * @param {boolean} [opt_showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  opt_smooth,\n  opt_maxExtent,\n  opt_showFullExtent\n) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, opt_isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = opt_maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              opt_maxExtent,\n              size,\n              opt_showFullExtent\n            )\n          : maxResolution;\n        const smooth = opt_smooth !== undefined ? opt_smooth : true;\n\n        if (!smooth || !opt_isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n/**\n * @param {number} [opt_tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [opt_isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport GeometryType from './geom/GeometryType.js';\nimport Units from './proj/Units.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {assign} from './obj.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {createMinMaxResolution} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {easeOut} from './easing.js';\nimport {equals} from './coordinate.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {inAndOut} from './easing.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center.\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `opt_anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [opt_options] View options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    const options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = {};\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {ViewOptions}\n     */\n    this.options_ = options;\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenter();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(opt_rotation) {\n    const size = this.viewportSize_;\n    if (opt_rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(opt_rotation)) +\n          Math.abs(h * Math.sin(opt_rotation)),\n        Math.abs(w * Math.sin(opt_rotation)) +\n          Math.abs(h * Math.cos(opt_rotation)),\n      ];\n    } else {\n      return size;\n    }\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [opt_size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(opt_size) {\n    this.viewportSize_ = Array.isArray(opt_size)\n      ? opt_size.slice()\n      : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.options_.constrainResolution;\n  }\n\n  /**\n   * @param {Array<number>} [opt_hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(opt_size) {\n    const extent = this.calculateExtentInternal(opt_size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, opt_size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      opt_size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [opt_size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, opt_size) {\n    const size = opt_size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(opt_power) {\n    const power = opt_power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [opt_power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(opt_power) {\n    const logPower = Math.log(opt_power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [opt_rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(opt_rotation) {\n    let size = this.getViewportSize_(opt_rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    } else {\n      return (\n        this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n      );\n    }\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [opt_options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, opt_options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, opt_options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [opt_options] Options.\n   */\n  fitInternal(geometry, opt_options) {\n    const options = opt_options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, opt_anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, opt_anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), opt_anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, opt_anchor) {\n    if (opt_anchor) {\n      opt_anchor = fromUserCoordinate(opt_anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, opt_anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, opt_anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (opt_anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, opt_anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(fromUserCoordinate(center, this.getProjection()));\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [opt_doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [opt_forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(opt_doNotCancelAnims, opt_forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || opt_forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n    }\n    if (\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !opt_doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [opt_duration] The animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const duration = opt_duration !== undefined ? opt_duration : 200;\n    const direction = opt_resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    const anchor =\n      opt_anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(opt_duration, opt_resolutionDirection, opt_anchor) {\n    const anchor =\n      opt_anchor && fromUserCoordinate(opt_anchor, this.getProjection());\n    this.endInteractionInternal(opt_duration, opt_resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [opt_duration] Animation duration in ms.\n   * @param {number} [opt_resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [opt_anchor] The origin of the transformation.\n   */\n  endInteractionInternal(opt_duration, opt_resolutionDirection, opt_anchor) {\n    this.setHint(ViewHint.INTERACTING, -1);\n\n    this.resolveConstraints(opt_duration, opt_resolutionDirection, opt_anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [opt_targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, opt_targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      opt_targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, opt_direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, opt_direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [opt_direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, opt_direction) {\n    const direction = opt_direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [opt_size] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/PluggableMap\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport EventType from './events/EventType.js';\nimport LayerGroup from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n */\n\n/**\n * @typedef {function(PluggableMap, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} PluggableMapOnSignature\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass PluggableMap extends BaseObject {\n  /**\n   * @param {MapOptions} options Map options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {PluggableMapOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {PluggableMapOnSignature<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = /** @this {PluggableMap} */ function () {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_(Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @type {undefined|function(Event): void}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        this.addOverlayInternal_(\n          /** @type {import(\"./Overlay.js\").default} */ (event.element)\n        );\n      }.bind(this)\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent} event CollectionEvent.\n       */\n      function (event) {\n        const overlay = /** @type {import(\"./Overlay.js\").default} */ (\n          event.element\n        );\n        const id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }.bind(this)\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       * @this {PluggableMap}\n       */\n      function (control) {\n        control.setMap(this);\n      }.bind(this)\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       * @this {PluggableMap}\n       */\n      function (interaction) {\n        interaction.setMap(this);\n      }.bind(this)\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"./renderer/Map.js\").default} The map renderer\n   */\n  createRenderer() {\n    throw new Error('Use a map type that has a createRenderer method');\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteraction()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, opt_options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      opt_options\n    );\n    return features;\n  }\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   *\n   * Note: this may give false positives unless the map layers have had different `className`\n   * properties assigned to them.\n   *\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(this: S, import(\"./layer/Layer.js\").default, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {AtPixelOptions} [opt_options] Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  forEachLayerAtPixel(pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    const options = opt_options || {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel,\n      this.frameState_,\n      hitTolerance,\n      callback,\n      layerFilter\n    );\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [opt_options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    const layerFilter =\n      opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    const hitTolerance =\n      opt_options.hitTolerance !== undefined ? opt_options.hitTolerance : 0;\n    const checkWrapped = opt_options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewportPosition = this.viewport_.getBoundingClientRect();\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    const target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string'\n        ? document.getElementById(target)\n        : target;\n    } else {\n      return null;\n    }\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n    }\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoading() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layer = layerStatesArray[i].layer;\n      const source = /** @type {import(\"./layer/Layer.js\").default} */ (\n        layer\n      ).getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(\n        frameState.coordinateToPixelTransform,\n        coordinate.slice(0, 2)\n      );\n    }\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [opt_type] Type.\n   */\n  handleBrowserEvent(browserEvent, opt_type) {\n    const type = opt_type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (\n      frameState &&\n      this.hasListener(RenderEventType.RENDERCOMPLETE) &&\n      !frameState.animate &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.getLoading()\n    ) {\n      this.renderer_.dispatchRenderEvent(\n        RenderEventType.RENDERCOMPLETE,\n        frameState\n      );\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    let targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = this.createRenderer();\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        window.addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          // eslint-disable-next-line\n          console.warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    this.setSize(size);\n    this.updateViewportSize_();\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({layers: /** @type {Collection} */ (options.layers)});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = /** @type {Collection} */ (options.controls);\n    }\n  }\n\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = /** @type {Collection} */ (options.interactions);\n    }\n  }\n\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default PluggableMap;\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../PluggableMap.js\").default|undefined} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} [map] Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {inView} from '../layer/Layer.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [opt_options] Attribution options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collpase';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    const lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    const visibleAttributions = [];\n\n    let collapsible = true;\n    const layerStatesArray = frameState.layerStatesArray;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      if (!inView(layerState, frameState.viewState)) {\n        continue;\n      }\n\n      const source = /** @type {import(\"../layer/Layer.js\").default} */ (\n        layerState.layer\n      ).getSource();\n      if (!source) {\n        continue;\n      }\n\n      const attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      const attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      collapsible =\n        collapsible && source.getAttributionsCollapsible() !== false;\n\n      if (Array.isArray(attributions)) {\n        for (let j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [opt_options] Rotate options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [opt_options] Zoom options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (opt_options && opt_options.handleEvent) {\n      this.handleEvent = opt_options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [opt_duration] Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [opt_anchor] Anchor coordinate in the user projection.\n * @param {number} [opt_duration] Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {getValues} from '../obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.originalEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n/**\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return (\n    type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP\n  );\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  return event.target.getTargetElement().contains(document.activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return tagName !== 'INPUT' && tagName !== 'SELECT' && tagName !== 'TEXTAREA';\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardPan}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const keyCode = keyEvent.keyCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n          keyCode == KeyCode.LEFT ||\n          keyCode == KeyCode.RIGHT ||\n          keyCode == KeyCode.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (keyCode == KeyCode.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (keyCode == KeyCode.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {KeyboardZoom}\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const charCode = keyEvent.charCode;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))\n      ) {\n        const map = mapBrowserEvent.map;\n        const delta =\n          charCode == '+'.charCodeAt(0) ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel',\n};\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? Mode.TRACKPAD : Mode.WHEEL;\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === Mode.TRACKPAD &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [displacement=[0,0]] Displacement of the shape\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    const displacement = this.getDisplacement();\n    this.canvas_ = {};\n    this.anchor_ = [size / 2 - displacement[0], size / 2 + displacement[1]];\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [opt_options] Style options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_POLYGON] = styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] = styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] = styles[GeometryType.POLYGON].concat(\n    styles[GeometryType.LINE_STRING]\n  );\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles[GeometryType.MULTI_POINT] = styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] = styles[\n    GeometryType.POLYGON\n  ].concat(styles[GeometryType.LINE_STRING], styles[GeometryType.POINT]);\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/interaction/Select\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {extend, includes} from '../array.js';\nimport {getUid} from '../util.js';\nimport {never, shiftKeyOnly, singleClick} from '../events/condition.js';\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select',\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition.singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}). Set to `null` if this interaction should not apply\n * any style changes for selected features.\n * If set to a falsey value, the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition.never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition.shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nexport class SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/**\n * Original feature styles to reset to when features are no longer selected.\n * @type {Object<number, import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n */\nconst originalFeatureStyles = {};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'select', SelectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'select', Return>} SelectOnSignature\n */\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super();\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {SelectOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {SelectOnSignature<void>}\n     */\n    this.un;\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     */\n    this.boundAddFeature_ = this.addFeature_.bind(this);\n\n    /**\n     * @private\n     */\n    this.boundRemoveFeature_ = this.removeFeature_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition\n      ? options.removeCondition\n      : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition\n      ? options.toggleCondition\n      : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ =\n      options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function (layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @return {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return /** @type {import('../layer/Vector.js').default} */ (\n      this.featureLayerAssociation_[getUid(feature)]\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.restorePreviousStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map) {\n      this.features_.addEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.addEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n\n      if (this.style_) {\n        this.features_.forEach(this.applySelectedStyle_.bind(this));\n      }\n    } else {\n      this.features_.removeEventListener(\n        CollectionEventType.ADD,\n        this.boundAddFeature_\n      );\n      this.features_.removeEventListener(\n        CollectionEventType.REMOVE,\n        this.boundRemoveFeature_\n      );\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.applySelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.restorePreviousStyle_(feature);\n    }\n  }\n\n  /**\n   * @return {import(\"../style/Style.js\").StyleLike|null} Select style.\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  applySelectedStyle_(feature) {\n    const key = getUid(feature);\n    if (!(key in originalFeatureStyles)) {\n      originalFeatureStyles[key] = feature.getStyle();\n    }\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  restorePreviousStyle_(feature) {\n    const interactions = this.getMap().getInteractions().getArray();\n    for (let i = interactions.length - 1; i >= 0; --i) {\n      const interaction = interactions[i];\n      if (\n        interaction !== this &&\n        interaction instanceof Select &&\n        interaction.getStyle() &&\n        interaction.getFeatures().getArray().lastIndexOf(feature) !== -1\n      ) {\n        feature.setStyle(interaction.getStyle());\n        return;\n      }\n    }\n\n    const key = getUid(feature);\n    feature.setStyle(originalFeatureStyles[key]);\n    delete originalFeatureStyles[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n   * selected state of features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @this {Select}\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const add = this.addCondition_(mapBrowserEvent);\n    const remove = this.removeCondition_(mapBrowserEvent);\n    const toggle = this.toggleCondition_(mapBrowserEvent);\n    const set = !add && !remove && !toggle;\n    const map = mapBrowserEvent.map;\n    const features = this.getFeatures();\n    const deselected = [];\n    const selected = [];\n    if (set) {\n      // Replace the currently selected feature(s) with the feature(s) at the\n      // pixel, or clear the selected feature(s) if there is no feature at\n      // the pixel.\n      clear(this.featureLayerAssociation_);\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let i = features.getLength() - 1; i >= 0; --i) {\n        const feature = features.item(i);\n        const index = selected.indexOf(feature);\n        if (index > -1) {\n          // feature is already selected\n          selected.splice(index, 1);\n        } else {\n          features.remove(feature);\n          deselected.push(feature);\n        }\n      }\n      if (selected.length !== 0) {\n        features.extend(selected);\n      }\n    } else {\n      // Modify the currently selected feature(s).\n      map.forEachFeatureAtPixel(\n        mapBrowserEvent.pixel,\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function (feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if (\n              (remove || toggle) &&\n              includes(features.getArray(), feature)\n            ) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }.bind(this),\n        {\n          layerFilter: this.layerFilter_,\n          hitTolerance: this.hitTolerance_,\n        }\n      );\n      for (let j = deselected.length - 1; j >= 0; --j) {\n        features.remove(deselected[j]);\n      }\n      features.extend(selected);\n    }\n    if (selected.length > 0 || deselected.length > 0) {\n      this.dispatchEvent(\n        new SelectEvent(\n          SelectEventType.SELECT,\n          selected,\n          deselected,\n          mapBrowserEvent\n        )\n      );\n    }\n    return true;\n  }\n}\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(\n    styles[GeometryType.GEOMETRY_COLLECTION],\n    styles[GeometryType.LINE_STRING]\n  );\n\n  return function (feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\nexport default Select;\n","/**\n * @module ol/Map\n */\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport PluggableMap from './PluggableMap.js';\nimport {assign} from './obj.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @api\n */\nclass Map extends PluggableMap {\n  /**\n   * @param {import(\"./PluggableMap.js\").MapOptions} options Map options.\n   */\n  constructor(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions({\n        onFocusOnly: true,\n      });\n    }\n\n    super(options);\n  }\n\n  createRenderer() {\n    return new CompositeMapRenderer(this);\n  }\n}\n\nexport default Map;\n","/**\n * @module ol/control\n */\nimport Attribution from './control/Attribution.js';\nimport Collection from './Collection.js';\nimport Rotate from './control/Rotate.js';\nimport Zoom from './control/Zoom.js';\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as MousePosition} from './control/MousePosition.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./control/Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./control/Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./control/Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [opt_options]\n * Defaults options.\n * @return {Collection<import(\"./control/Control.js\").default>}\n * Controls.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport Kinetic from './Kinetic.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [opt_options] Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [opt_maxEntries] Max entries.\n   */\n  constructor(opt_maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(\n      data.minX,\n      data.minY,\n      data.maxX,\n      data.maxY,\n      opt_extent\n    );\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport SourceState from './State.js';\nimport {abstract} from '../util.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * A function that takes a {@link module:ol/PluggableMap~FrameState} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./State.js\").default} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./State.js\").default}\n     */\n    this.state_ =\n      options.state !== undefined ? options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {import(\"./State.js\").default} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return undefined;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./State.js\").default} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport FormatType from './format/FormatType.js';\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == FormatType.ARRAY_BUFFER) {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == FormatType.JSON || type == FormatType.TEXT) {\n        source = xhr.responseText;\n      } else if (type == FormatType.XML) {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == FormatType.ARRAY_BUFFER) {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector\").default}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {getValues, isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [opt_feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [opt_features] Features.\n   */\n  constructor(type, opt_feature, opt_features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          var features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options} [opt_options] Vector source options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n      );\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(\n            /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n              evt.element\n            )\n          );\n          modifyingCollection = false;\n        }\n      }.bind(this)\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [opt_fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    } else {\n      return [];\n    }\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [opt_filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          function (features) {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          }.bind(this),\n          function () {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }.bind(this)\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:source'|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   'change:source'|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {Layer<TileSourceType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport SourceState from '../source/State.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function (zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }.bind(this)\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return null;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  containsCoordinate,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {cssOpacity} from '../../css.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.style.opacity === cssOpacity(opacity) &&\n      target.className === layerClassName\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(\n      this.inversePixelTransform,\n      pixel.slice()\n    );\n    const context = this.context;\n\n    const layer = this.getLayer();\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      const renderCoordinate = applyTransform(\n        frameState.pixelToCoordinateTransform,\n        pixel.slice()\n      );\n\n      /** get only data inside of the layer extent */\n      if (!containsCoordinate(layerExtent, renderCoordinate)) {\n        return null;\n      }\n    }\n\n    let data;\n    try {\n      const x = Math.round(renderPixel[0]);\n      const y = Math.round(renderPixel[1]);\n      const newCanvas = document.createElement('canvas');\n      const newContext = newCanvas.getContext('2d');\n      newCanvas.width = 1;\n      newCanvas.height = 1;\n      newContext.clearRect(0, 0, 1, 1);\n      newContext.drawImage(context.canvas, x, y, 1, 1, 0, 0, 1, 1);\n      data = newContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n} from '../../transform.js';\nimport {assign} from '../../obj.js';\nimport {\n  createEmpty,\n  equals,\n  getIntersection,\n  getTopLeft,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {toString as toTransformString} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (\n              !this.newTiles_ &&\n              (inTransition || this.renderedTiles.indexOf(tile) === -1)\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / tilePixelRatio,\n      1 / tilePixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    assign(context, tileSource.getContextOptions());\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          context.restore();\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [opt_tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends {BaseTileLayer<TileSourceType>}\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [opt_options] Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport {assign} from '../obj.js';\nimport {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../PluggableMap.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style} for default style\n * which will be used if this is not set.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").StyleLike|null} [opt_style] Layer style.\n   * @api\n   */\n  setStyle(opt_style) {\n    this.style_ = opt_style !== undefined ? opt_style : createDefaultStyle;\n    this.styleFunction_ =\n      opt_style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, opt_declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [opt_declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, opt_declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case GeometryType.MULTI_POLYGON:\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.POLYGON:\n      case GeometryType.MULTI_LINE_STRING:\n        builderEnds = [];\n        flatCoordinates =\n          type == GeometryType.POLYGON\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case GeometryType.LINE_STRING:\n      case GeometryType.CIRCLE:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case GeometryType.MULTI_POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case GeometryType.POINT:\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, opt_sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage();\n    const image = imageStyle.getImage(this.pixelRatio);\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0] * this.imagePixelRatio_;\n    this.originY_ = origin[1] * this.imagePixelRatio_;\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line',\n};\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport TextPlacement from '../../style/TextPlacement.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === TextPlacement.LINE &&\n      (geometryType == GeometryType.LINE_STRING ||\n        geometryType == GeometryType.MULTI_LINE_STRING ||\n        geometryType == GeometryType.POLYGON ||\n        geometryType == GeometryType.MULTI_POLYGON)\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [opt_sharedData] Shared data.\n   */\n  setTextStyle(textStyle, opt_sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = opt_sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text',\n};\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../../has.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextBaseline,\n  drawImageOrLabel,\n} from '../canvas.js';\nimport {\n  defaultTextAlign,\n  measureAndCacheTextWidth,\n  measureTextHeight,\n  measureTextWidths,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {string} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const lines = text.split('\\n');\n    const numLines = lines.length;\n    const widths = [];\n    const width = measureTextWidths(textState.font, lines, widths);\n    const lineHeight = measureTextHeight(textState.font);\n    const height = lineHeight * numLines;\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    contextInstructions.push('font', textState.font);\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      // eslint-disable-next-line\n      const Context = WORKER_OFFSCREEN_CANVAS ? OffscreenCanvasRenderingContext2D : CanvasRenderingContext2D;\n      if (Context.prototype.setLineDash) {\n        contextInstructions.push('setLineDash', [strokeState.lineDash]);\n        contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n      }\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    const x = align * renderWidth + leftRight * strokeWidth;\n    let i;\n    if (strokeKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('strokeText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    if (fillKey) {\n      for (i = 0; i < numLines; ++i) {\n        contextInstructions.push('fillText', [\n          lines[i],\n          x + leftRight * widths[i],\n          0.5 * (strokeWidth + lineHeight) + i * lineHeight,\n        ]);\n      }\n    }\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    opt_featureCallback,\n    opt_hitExtent,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            opt_hitExtent !== undefined &&\n            !intersects(opt_hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[14]\n            );\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            let imageArgs;\n            let imageDeclutterBox;\n            if (opt_declutterTree && declutterImageWithText) {\n              const index = dd - d;\n              if (!declutterImageWithText[index]) {\n                // We now have the image for an image+text combination.\n                declutterImageWithText[index] = args;\n                // Don't render anything for now, wait for the text.\n                continue;\n              }\n              imageArgs = declutterImageWithText[index];\n              delete declutterImageWithText[index];\n              imageDeclutterBox = getDeclutterBox(imageArgs);\n              if (opt_declutterTree.collides(imageDeclutterBox)) {\n                continue;\n              }\n            }\n            if (\n              opt_declutterTree &&\n              opt_declutterTree.collides(dimensions.declutterBox)\n            ) {\n              continue;\n            }\n            if (imageArgs) {\n              // We now have image and text for an image+text combination.\n              if (opt_declutterTree) {\n                opt_declutterTree.insert(imageDeclutterBox);\n              }\n              // Render the image before we render the text.\n              this.replayImageOrLabel_.apply(this, imageArgs);\n            }\n            if (opt_declutterTree) {\n              opt_declutterTree.insert(dimensions.declutterBox);\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    opt_declutterTree &&\n                    opt_declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (opt_declutterTree) {\n                opt_declutterTree.load(\n                  replayImageOrLabelArgs.map(getDeclutterBox)\n                );\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (opt_featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = opt_featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      opt_declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [opt_featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [opt_hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      opt_featureCallback,\n      opt_hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport BuilderType from './BuilderType.js';\nimport Executor from './Executor.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"./BuilderType.js\").default>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT,\n];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [opt_renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    opt_renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"./BuilderType.js\").default, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"./BuilderType.js\").default>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== BuilderType.IMAGE &&\n              builderType !== BuilderType.TEXT) ||\n            declutteredFeatures.indexOf(feature) !== -1\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"./BuilderType.js\").default>} [opt_builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    opt_builderTypes,\n    opt_declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (opt_declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            opt_declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport GeometryType from '../../geom/GeometryType.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [opt_squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    opt_squaredTolerance,\n    opt_userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        const localTransform = composeTransform(\n          this.tmpLocalTransform_,\n          x,\n          y,\n          1,\n          1,\n          rotation,\n          -x,\n          -y\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(x, y);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(\n            (contextStrokeState.lineDash = strokeState.lineDash)\n          );\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (\n        textState.textBaseline\n      );\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (\n          textState.textBaseline\n        );\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * this.pixelRatio_;\n    this.imageAnchorY_ = imageAnchor[1] * this.pixelRatio_;\n    this.imageHeight_ = imageSize[1] * this.pixelRatio_;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    this.imageScale_ = imageStyle.getScaleArray();\n    this.imageWidth_ = imageSize[0] * this.pixelRatio_;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Anchor is a fraction\n   * @api\n   */\n  FRACTION: 'fraction',\n  /**\n   * Anchor is in pixels\n   * @api\n   */\n  PIXELS: 'pixels',\n};\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  /**\n   * Origin is at bottom left\n   * @api\n   */\n  BOTTOM_LEFT: 'bottom-left',\n  /**\n   * Origin is at bottom right\n   * @api\n   */\n  BOTTOM_RIGHT: 'bottom-right',\n  /**\n   * Origin is at top left\n   * @api\n   */\n  TOP_LEFT: 'top-left',\n  /**\n   * Origin is at top right\n   * @api\n   */\n  TOP_RIGHT: 'top-right',\n};\n","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\nexport default ImageBase;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function () {\n      listening = false;\n    };\n    promise\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n          //        https://bugs.webkit.org/show_bug.cgi?id=198527\n          if (\n            error.name === 'EncodingError' &&\n            error.message === 'Invalid image type.'\n          ) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler),\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1);\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const canvas = document.createElement('canvas');\n    this.canvas_[pixelRatio] = canvas;\n\n    canvas.width = Math.ceil(this.image_.width * pixelRatio);\n    canvas.height = Math.ceil(this.image_.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(this.image_, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    // Internet Explorer 11 does not support the multiply operation.\n    // If the canvas is tainted in Internet Explorer this still produces\n    // a solid color image with the shape of the icon.\n    if (ctx.globalCompositeOperation === 'multiply' || this.isTainted_()) {\n      ctx.fillStyle = asString(this.color_);\n      ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n      ctx.globalCompositeOperation = 'destination-in';\n      ctx.drawImage(this.image_, 0, 0);\n    } else {\n      const imgData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n      const data = imgData.data;\n      const r = this.color_[0] / 255.0;\n      const g = this.color_[1] / 255.0;\n      const b = this.color_[2] / 255.0;\n      const a = this.color_[3];\n\n      for (let i = 0, ii = data.length; i < ii; i += 4) {\n        data[i] *= r;\n        data[i + 1] *= g;\n        data[i + 2] *= b;\n        data[i + 3] *= a;\n      }\n      ctx.putImageData(imgData, 0, 0);\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [displacement=[0,0]] Displacement the icon\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined\n        ? options.anchorOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined\n        ? options.anchorXUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined\n        ? options.anchorYUnits\n        : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      imgSize,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined\n        ? options.offsetOrigin\n        : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (\n      this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n      this.anchorYUnits_ == IconAnchorUnits.FRACTION\n    ) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (\n        this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    const displacement = this.getDisplacement();\n    anchor[0] -= displacement[0];\n    anchor[1] += displacement[1];\n\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n        this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/renderer/vector\n */\nimport BuilderType from '../render/canvas/BuilderType.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature feature} or {@link module:ol/render/Feature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.CIRCLE\n    );\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    opt_transform,\n    opt_declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  opt_transform,\n  opt_declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    opt_transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      opt_declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.LINE_STRING\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (opt_declutterBuilderGroup) {\n    builderGroup = opt_declutterBuilderGroup;\n    declutterImageWithText =\n      imageStyle && textStyle && textStyle.getText() ? {} : undefined;\n  }\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.IMAGE\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  opt_declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      BuilderType.POLYGON\n    );\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (opt_declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      BuilderType.TEXT\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {cssOpacity} from '../../css.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [opt_declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, opt_declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        opt_declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = cssOpacity(layerState.opacity);\n    const container = this.container;\n    if (opacity !== container.style.opacity) {\n      container.style.opacity = opacity;\n    }\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise(\n      /**\n       * @param {function(Array<import(\"../../Feature\").default|import(\"../../render/Feature\").default>): void} resolve Resolver function.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (resolve) {\n        if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.wrappedRenderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] * HIT_DETECT_RESOLUTION;\n          const height = size[1] * HIT_DETECT_RESOLUTION;\n          transforms.push(\n            this.getRenderTransform(\n              center,\n              resolution,\n              rotation,\n              HIT_DETECT_RESOLUTION,\n              width,\n              height,\n              0\n            ).slice()\n          );\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (\n            source.getWrapX() &&\n            projection.canWrapX() &&\n            !containsExtent(projectionExtent, extent)\n          ) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(\n                this.getRenderTransform(\n                  center,\n                  resolution,\n                  rotation,\n                  HIT_DETECT_RESOLUTION,\n                  width,\n                  height,\n                  offsetX\n                ).slice()\n              );\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(\n            size,\n            transforms,\n            this.renderedFeatures_,\n            layer.getStyleFunction(),\n            extent,\n            resolution,\n            rotation\n          );\n        }\n        resolve(\n          hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n        );\n      }.bind(this)\n    );\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (!this.dirty_ && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      !this.dirty_ &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @this {CanvasVectorLayerRenderer}\n       */\n      function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          this.dirty_ = this.dirty_ || dirty;\n        }\n      }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [opt_declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    opt_transform,\n    opt_declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            opt_transform,\n            opt_declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        opt_transform,\n        opt_declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport {Icon} from '../../style.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: IconAnchorUnits.PIXELS,\n            anchorYUnits: IconAnchorUnits.PIXELS,\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      byGeometryType[geometry.getType().replace('Multi', '')].push(\n        geometry,\n        style\n      );\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex)\n    .map(Number)\n    .sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [opt_options] Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [opt_options] Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {}\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [opt_options] Tile options.\n   */\n  constructor(\n    tileCoord,\n    state,\n    src,\n    crossOrigin,\n    tileLoadFunction,\n    opt_options\n  ) {\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/reproj\n */\nimport {IMAGE_SMOOTHING_DISABLED} from './source/common.js';\nimport {assign} from './obj.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * IE also doesn't. Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = document.createElement('canvas').getContext('2d');\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [opt_renderEdges] Render reprojection edges.\n * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  opt_renderEdges,\n  opt_contextOptions\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height)\n  );\n  assign(context, opt_contextOptions);\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution)\n  );\n  assign(stitchContext, opt_contextOptions);\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (\n      isBrokenDiagonalRendering() ||\n      opt_contextOptions === IMAGE_SMOOTHING_DISABLED\n    ) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {log2, modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} opt_destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    opt_destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overal reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (opt_destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              log2(\n                getArea(targetExtent) /\n                  (opt_destinationResolution *\n                    opt_destinationResolution *\n                    256 *\n                    256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(\n        function (triangle) {\n          if (\n            Math.max(\n              triangle.source[0][0],\n              triangle.source[1][0],\n              triangle.source[2][0]\n            ) -\n              leftBound >\n            this.sourceWorldWidth_ / 2\n          ) {\n            const newTriangle = [\n              [triangle.source[0][0], triangle.source[0][1]],\n              [triangle.source[1][0], triangle.source[1][1]],\n              [triangle.source[2][0], triangle.source[2][1]],\n            ];\n            if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[0][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[1][0] -= this.sourceWorldWidth_;\n            }\n            if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n              newTriangle[2][0] -= this.sourceWorldWidth_;\n            }\n\n            // Rarely (if the extent contains both the dateline and prime meridian)\n            // the shift can in turn break some triangles.\n            // Detect this here and don't shift in such cases.\n            const minX = Math.min(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            const maxX = Math.max(\n              newTriangle[0][0],\n              newTriangle[1][0],\n              newTriangle[2][0]\n            );\n            if (maxX - minX < this.sourceWorldWidth_ / 2) {\n              triangle.source = newTriangle;\n            }\n          }\n        }.bind(this)\n      );\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Context options to disable image smoothing.\n * @type {Object}\n */\nexport const IMAGE_SMOOTHING_DISABLED = {\n  imageSmoothingEnabled: false,\n  msImageSmoothingEnabled: false,\n};\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [opt_errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [opt_renderEdges] Render reprojection edges.\n   * @param {object} [opt_contextOptions] Properties to set on the canvas context.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges,\n    opt_contextOptions\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {object}\n     */\n    this.contextOptions_ = opt_contextOptions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      opt_errorThreshold !== undefined ? opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(\n      function (tile, i, arr) {\n        if (tile && tile.getState() == TileState.LOADED) {\n          sources.push({\n            extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n            image: tile.getImage(),\n          });\n        }\n      }.bind(this)\n    );\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.contextOptions_\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(\n        function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE || state == TileState.LOADING) {\n            leftToLoad++;\n\n            const sourceListenKey = listen(\n              tile,\n              EventType.CHANGE,\n              function (e) {\n                const state = tile.getState();\n                if (\n                  state == TileState.LOADED ||\n                  state == TileState.ERROR ||\n                  state == TileState.EMPTY\n                ) {\n                  unlistenByKey(sourceListenKey);\n                  leftToLoad--;\n                  if (leftToLoad === 0) {\n                    this.unlistenSources_();\n                    this.reproject_();\n                  }\n                }\n              },\n              this\n            );\n            this.sourcesListenerKeys_.push(sourceListenKey);\n          }\n        }.bind(this)\n      );\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [opt_highWaterMark] High water mark.\n   */\n  constructor(opt_highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark =\n      opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [opt_options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [opt_tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(\n      function (tile) {\n        if (tile.tileCoord[0] !== z) {\n          this.remove(getKey(tile.tileCoord));\n          tile.release();\n        }\n      }.bind(this)\n    );\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    opt_tileRange,\n    opt_extent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          opt_tileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          opt_tileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        opt_extent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        opt_tileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, opt_tileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        opt_tileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, opt_tileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, opt_tileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [opt_tileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(\n      minX,\n      tileCoord[1],\n      minY,\n      tileCoord[2],\n      opt_tileRange\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [opt_extent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = (scale * xFromOrigin) / tileSize[0];\n    let tileCoordY = (scale * yFromOrigin) / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport Corner from './extent/Corner.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport Units from './proj/Units.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [opt_options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [opt_maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(\n  extent,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_maxResolution\n) {\n  const maxZoom = opt_maxZoom !== undefined ? opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(\n    opt_tileSize !== undefined ? opt_tileSize : DEFAULT_TILE_SIZE\n  );\n  const maxResolution =\n    opt_maxResolution > 0\n      ? opt_maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [opt_maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [opt_tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent/Corner.js\").default} [opt_corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(\n  projection,\n  opt_maxZoom,\n  opt_tileSize,\n  opt_corner\n) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT[Units.DEGREES]) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    const tileGrid = options.tileGrid;\n    if (tileGrid) {\n      toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    assert(\n      equivalent(this.getProjection(), projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [opt_projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection =\n      opt_projection !== undefined ? opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template\n          .replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function () {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./State.js\").default} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {IMAGE_SMOOTHING_DISABLED} from './common.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {object|undefined}\n     */\n    this.contextOptions_ =\n      options.imageSmoothing === false ? IMAGE_SMOOTHING_DISABLED : undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @return {Object|undefined} Context options.\n   */\n  getContextOptions() {\n    return this.contextOptions_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return (\n      super.getKey() +\n      (this.contextOptions_ ? '\\n' + JSON.stringify(this.contextOptions_) : '')\n    );\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      ENABLE_RASTER_REPROJECTION &&\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] =\n          getTileGridForProjection(projection);\n      }\n      return this.tileGridForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(\n          this.tileCache.highWaterMark\n        );\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = cache.get(tileCoordKey);\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n          tileCoord,\n          projection\n        );\n        const newTile = new ReprojTile(\n          sourceProjection,\n          sourceTileGrid,\n          projection,\n          targetTileGrid,\n          tileCoord,\n          wrappedTileCoord,\n          this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function (z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this),\n          this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_,\n          this.contextOptions_\n        );\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (\n      !ENABLE_RASTER_REPROJECTION ||\n      this.renderReprojectionEdges_ == render\n    ) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [imageSmoothing=true] Enable image smoothing.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [opt_options] XYZ options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      imageSmoothing: options.imageSmoothing,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default XYZ;\n","import GeoJSON from 'ol/format/GeoJSON';\r\nimport Map from 'ol/Map';\r\nimport View from 'ol/View';\r\nimport {DragBox, Select} from 'ol/interaction';\r\nimport {OSM, Vector as VectorSource} from 'ol/source';\r\nimport {Tile as TileLayer, Vector as VectorLayer} from 'ol/layer';\r\nimport {platformModifierKeyOnly} from 'ol/events/condition';\r\nimport {Style,Stroke,Fill} from 'ol/style';\r\nimport XYZ from 'ol/source/XYZ';\r\nimport {getBottomLeft, getTopRight} from 'ol/extent';\r\nimport {toLonLat} from 'ol/proj';\r\n\r\n\r\n\r\nconst vectorSource1 = new VectorSource({\r\n  url: 'https://raw.githubusercontent.com/singhskt/geojson-data/main/data001.geojson',\r\n  format: new GeoJSON()\r\n});\r\n\r\nconst vectorSource2 = new VectorSource({\r\n  url: 'https://raw.githubusercontent.com/singhskt/geojson-data/main/data002.geojson',\r\n  format: new GeoJSON()\r\n});\r\n\r\nconst vectorSource3 = new VectorSource({\r\n  url: 'https://raw.githubusercontent.com/singhskt/geojson-data/main/data003.geojson',\r\n  format: new GeoJSON()\r\n});\r\n\r\n\r\nconst vectorSource4 = new VectorSource({\r\n  url: '',\r\n  format: new GeoJSON()\r\n});\r\n\r\nconst vectorLayer=new VectorLayer({\r\n  source: vectorSource3,\r\n});\r\nvar url3='https://api.digitalslidearchive.org/api/v1/item/5b9ef9c8e62914002e94771e/tiles/zxy/{z}/{x}/{y}?edge=crop'\r\nconst map = new Map({\r\n  layers: [\r\n    new TileLayer({\r\n      source: new XYZ({\r\n        url:url3,\r\n}),\r\n    }),\r\n    vectorLayer\r\n    ,\r\n  ],\r\n  target: 'map',\r\n  view: new View({\r\n    center: [40,80],\r\n    zoom: 2,\r\n    constrainRotation: 16,\r\n  }),\r\n});\r\n\r\n// a normal select interaction to handle click\r\nconst select = new Select();\r\nmap.addInteraction(select);\r\n\r\nconst selectedFeatures = select.getFeatures();\r\n\r\n// a DragBox interaction used to select features by drawing boxes\r\nconst dragBox = new DragBox({\r\n  condition: platformModifierKeyOnly,\r\n});\r\n\r\nmap.addInteraction(dragBox);\r\n\r\ndragBox.on('boxend', function () {\r\n  // features that intersect the box geometry are added to the\r\n  // collection of selected features\r\n\r\n  // if the view is not obliquely rotated the box geometry and\r\n  // its extent are equalivalent so intersecting features can\r\n  // be added directly to the collection\r\n  const rotation = map.getView().getRotation();\r\n  const oblique = rotation % (Math.PI / 2) !== 0;\r\n  const candidateFeatures = oblique ? [] : selectedFeatures;\r\n  const extent = dragBox.getGeometry().getExtent();\r\n  vectorSource.forEachFeatureIntersectingExtent(extent, function (feature) {\r\n    candidateFeatures.push(feature);\r\n  });\r\n\r\n  // when the view is obliquely rotated the box extent will\r\n  // exceed its geometry so both the box and the candidate\r\n  // feature geometries are rotated around a common anchor\r\n  // to confirm that, with the box geometry aligned with its\r\n  // extent, the geometries intersect\r\n  if (oblique) {\r\n    const anchor = [0, 0];\r\n    const geometry = dragBox.getGeometry().clone();\r\n    geometry.rotate(-rotation, anchor);\r\n    const extent = geometry.getExtent();\r\n    candidateFeatures.forEach(function (feature) {\r\n      const geometry = feature.getGeometry().clone();\r\n      geometry.rotate(-rotation, anchor);\r\n      if (geometry.intersectsExtent(extent)) {\r\n        selectedFeatures.push(feature);\r\n      }\r\n    });\r\n  }\r\n});\r\n\r\n// clear selection when drawing a new box and when clicking on the map\r\ndragBox.on('boxstart', function () {\r\n  selectedFeatures.clear();\r\n});\r\n\r\nconst infoBox = document.getElementById('info');\r\n\r\n\r\n\r\nselectedFeatures.on(['add', 'remove'], function () {\r\n  const names = selectedFeatures.getArray().map(function (feature) {\r\n    document.getElementById(\"cname\").value=feature.get('name');\r\n    document.getElementById(\"ccustom\").value=feature.get('custom');\r\n    return JSON.stringify({\r\n        name:feature.get('name'),\r\n        id:feature.id_,\r\n        custom:feature.get('custom'),\r\n    });\r\n  });\r\n  if (names.length > 0) {\r\n    infoBox.innerHTML = names.join(', ');\r\n  } else {\r\n    infoBox.innerHTML = 'No polgon selected';\r\n  }\r\n});\r\nvar form=document.getElementById(\"testForm\")\r\n\r\n\r\nform.addEventListener('submit',function(e){\r\n    e.preventDefault();\r\n    var feature=selectedFeatures.getArray()[0];\r\n    feature.setProperties({\r\n        name:document.getElementById(\"cname\").value,\r\n        custom:document.getElementById(\"ccustom\").value\r\n    })\r\n    var color=document.getElementById(\"color\").value;\r\n    if (color!=''){\r\n        var style = new Style({\r\n            stroke: new Stroke({ color: color }),\r\n        });\r\n\r\n        feature.setStyle(style);\r\n        \r\n\r\n    }\r\n    console.log(feature);\r\n    return false;\r\n})\r\n\r\nvar currZoom = map.getView().getZoom();\r\n\r\nfunction wrapLon(value) {\r\n  const worlds = Math.floor((value + 180) / 360);\r\n  return value - worlds * 360;\r\n}\r\nmap.on('moveend', function(e) {\r\n\r\n  // this code section is to demonstrate rendering of polygons \r\n  // based on zoom level\r\n\r\n  var newZoom = map.getView().getZoom();\r\n  if (currZoom != newZoom) {\r\n    // console.log('zoom end, new zoom: ' + newZoom);\r\n    currZoom = newZoom;\r\n    if (currZoom<=3){\r\n      console.log('Vector soruce 1');\r\n\r\n      vectorLayer.setSource(vectorSource1);\r\n    }\r\n    else{\r\n      console.log('Vector soruce 2');\r\n      vectorLayer.setSource(vectorSource2);\r\n    }\r\n  }\r\n  else{  \r\n    // const map = e.map;\r\n    const extent = map.getView().calculateExtent(map.getSize());\r\n    const bottomLeft = toLonLat(getBottomLeft(extent));\r\n    const topRight = toLonLat(getTopRight(extent));\r\n    console.log('left', wrapLon(bottomLeft[0]));\r\n    console.log('bottom', bottomLeft[1]);\r\n    console.log('right', wrapLon(topRight[0]));\r\n    console.log('top', topRight[1]);\r\n\r\n\r\n    // uncomment this code section to demonstrate rendering of polygons \r\n    // based on current viewport\r\n\r\n    if (bottomLeft[1]>45){\r\n      vectorLayer.setSource(vectorSource4);\r\n    }\r\n    else{\r\n        vectorLayer.setSource(vectorSource3);\r\n    }\r\n  }\r\n\r\n\r\n});\r\n\r\n"],"names":["$bfb325515b9276ea$export$2e2bcd8739ae039","BaseEvent","type","this","propagationStopped","defaultPrevented","target","prototype","preventDefault","stopPropagation","$f358d43ca6343f5a$export$2e2bcd8739ae039","$94e5a088ba5c580a$export$2e2bcd8739ae039","Disposable","disposed","dispose","disposeInternal","$ecf9f00034241bb8$export$4e734a3b32fb971b","a","b","$ecf9f00034241bb8$export$ee2e0f811dca1807","arr","obj","indexOf","$ecf9f00034241bb8$export$8a3786cc03fdb777","direction","n","length","i","$ecf9f00034241bb8$export$292cfa960964f0e0","begin","end","tmp","$ecf9f00034241bb8$export$8b58be045bf06082","data","extension","Array","isArray","$ecf9f00034241bb8$export$e9bab7fafb253603","arr1","arr2","len1","$dd44a045aec5c8f5$export$22e23a2304399231","$dd44a045aec5c8f5$export$8f11cee4bdc7e668","$dd44a045aec5c8f5$export$1cd1943b3a73bbe8","$23958c3d66c22f50$export$e6e34fd1f2686227","Object","assign","var_sources","TypeError","output","ii","arguments","source","key","hasOwnProperty","$23958c3d66c22f50$export$42ffd38884aecdac","object","property","$23958c3d66c22f50$export$a5c4301012ad6f07","values","push","$23958c3d66c22f50$export$dd1bc94b04021eeb","$9201fa8e97adb715$var$Target","_super","Target","opt_target","_this","call","eventTarget_","pendingRemovals_","dispatching_","listeners_","$9201fa8e97adb715$var$__extends","addEventListener","listener","listeners","listenersForType","dispatchEvent","event","evt","propagate","dispatching","pendingRemovals","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","opt_type","keys","index","splice","$9201fa8e97adb715$export$2e2bcd8739ae039","$7545064017075080$export$2e2bcd8739ae039","$d7f12dd0c706e1ad$export$63174c828edd6ff8","opt_this","opt_once","bind","originalListener_1","apply","eventsKey","$d7f12dd0c706e1ad$export$8d2a95bc11b44725","$d7f12dd0c706e1ad$export$b0a21c8b3c1c921","$2f178e7c23399543$var$Observable","Observable","on","onInternal","once","onceInternal","un","unInternal","revision_","$2f178e7c23399543$var$__extends","changed","getRevision","len","ol_key","$2f178e7c23399543$export$b7ef3f8527533384","$9201fa8e97adb715$exports","default","$2f178e7c23399543$export$2e2bcd8739ae039","$95de7f6abc640304$export$817eb92a8194bab0","Error","$95de7f6abc640304$var$uidCounter_","$95de7f6abc640304$export$5e82334337e0f204","ol_uid","String","$9c1351562361fa38$export$cf395d7c4a2d5a17","ObjectEvent","oldValue","$9c1351562361fa38$var$__extends","$9c1351562361fa38$export$2e2bcd8739ae039","BaseObject","opt_values","values_","setProperties","get","value","getKeys","getProperties","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","opt_silent","applyProperties","unset","$2f178e7c23399543$exports","$5b96d07cbe551b3b$export$2e2bcd8739ae039","AssertionError","code","message","split","name","$5b96d07cbe551b3b$var$__extends","$0b488ad6e5bcbff0$export$a7a9523472993e97","assertion","errorCode","$5b96d07cbe551b3b$exports","$5bfa5a5ae8f81a5f$export$bb06ddfd5d66e02e","styles_1","getZIndex","$5bfa5a5ae8f81a5f$export$2e2bcd8739ae039","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","$5bfa5a5ae8f81a5f$var$__extends","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","opt_style","setId","id","$9c1351562361fa38$exports","$83327f6b8bfbe08e$var$Units","RADIANS","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","$83327f6b8bfbe08e$export$1482081eec883108","Math","PI","$9a68deaf29eb7021$var$transformStringDiv","$83327f6b8bfbe08e$export$2e2bcd8739ae039","$3dcb9b58f2d2e6d8$var$ua","navigator","userAgent","toLowerCase","$3dcb9b58f2d2e6d8$export$8442bdfd18b7b8a6","$3dcb9b58f2d2e6d8$export$39dfd62a25e0fe93","$3dcb9b58f2d2e6d8$export$76c0a3b101d93136","$3dcb9b58f2d2e6d8$export$6b83a0446fc26f94","devicePixelRatio","$3dcb9b58f2d2e6d8$export$98fcef3dc9973292","WorkerGlobalScope","OffscreenCanvas","self","$3dcb9b58f2d2e6d8$export$716f8695eedb9bad","Image","decode","$3dcb9b58f2d2e6d8$export$f751ce96c6c4e4fc","passive","options","defineProperty","window","error","$9a68deaf29eb7021$export$adaa4cf7ef1b65be","transform","c","d","e","f","$9a68deaf29eb7021$export$5635d7ef4b8fee1c","coordinate","x","y","$9a68deaf29eb7021$export$f672e0b6f7222cd7","dx1","dy1","sx","sy","angle","dx2","dy2","sin","cos","$9a68deaf29eb7021$export$bd70ea2a93c0fa4","mat","det","$9a68deaf29eb7021$export$f84e8e69fd4488a5","transformString","join","node","document","createElement","$219d82cc9e54c889$export$2e2bcd8739ae039","$44e40d9fa0bd90d3$export$2e2bcd8739ae039","$6e9c2c40baedc4d3$export$8aceca7c77505534","coordinates","extent","$6e9c2c40baedc4d3$export$fe201bb3bbe031e9","$6e9c2c40baedc4d3$export$1f820e3920fa5715","$6e9c2c40baedc4d3$export$ab1029bcae9ddb4a","opt_extent","$6e9c2c40baedc4d3$export$9cd59f9826255e47","slice","$6e9c2c40baedc4d3$export$cbe64c389534206f","dx","dy","$6e9c2c40baedc4d3$export$ac68c24d37ca240f","$6e9c2c40baedc4d3$export$805bdfd6d6690e97","$6e9c2c40baedc4d3$export$be866b1e0809b17e","extent1","extent2","$6e9c2c40baedc4d3$export$f97905ead28c61a8","minX","minY","maxX","maxY","relationship","Infinity","$6e9c2c40baedc4d3$export$958e3e1a02eac4b6","$6e9c2c40baedc4d3$export$3e2152b047719fa1","$6e9c2c40baedc4d3$export$be0ab0bf96ca59ca","flatCoordinates","offset","stride","$6e9c2c40baedc4d3$export$30570204156ffd18","$6e9c2c40baedc4d3$export$e9bab7fafb253603","$6e9c2c40baedc4d3$export$8b58be045bf06082","$6e9c2c40baedc4d3$export$f1dab130b92b85a9","min","max","$6e9c2c40baedc4d3$export$f9ed8a3d123a08e2","callback","val","$6e9c2c40baedc4d3$export$8d09f5e2e1bf560d","$6e9c2c40baedc4d3$export$e77c1cf70445e168","$6e9c2c40baedc4d3$export$b84fa077c8b05295","$6e9c2c40baedc4d3$export$cb1538b07e6964ff","$6e9c2c40baedc4d3$export$520c40045967cb15","area","$6e9c2c40baedc4d3$export$dd1bc94b04021eeb","$6e9c2c40baedc4d3$export$3c49c185de0c2bfc","$6e9c2c40baedc4d3$export$c08559766941f856","$6e9c2c40baedc4d3$export$c91255cadecfe081","$6e9c2c40baedc4d3$export$a1cfd206661d0801","corner","$6e9c2c40baedc4d3$export$13ba650faf8308","center","resolution","rotation","size","cosRotation","sinRotation","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","$6e9c2c40baedc4d3$export$72209efa88586d42","intersection","$6e9c2c40baedc4d3$export$7b0a31e10bbff018","$6e9c2c40baedc4d3$export$9f9dcb98c894b623","transformFn","opt_stops","width","height","xs","ys","l","$6e9c2c40baedc4d3$var$_boundingExtentXYs","$90a7bd645e4710a6$export$2e2bcd8739ae039","Projection","code_","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","canWrapX","getCode","getExtent","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","$ad67a80bd590adc8$export$7d15b64cf5a3a4c4","$ad67a80bd590adc8$export$2e2fd1ad24e4d350","cosh","exp","$ad67a80bd590adc8$export$b9fae0bba9d9094d","log2","log","LOG2E","$ad67a80bd590adc8$export$251bb0a9cef172e6","t","$ad67a80bd590adc8$export$88e6ebb4fe54f538","$ad67a80bd590adc8$export$56cb859c01fa134d","angleInRadians","$ad67a80bd590adc8$export$cba01ba138429a1d","angleInDegrees","$ad67a80bd590adc8$export$ba467bec01d66def","r","$ad67a80bd590adc8$export$3a89f8d6f6bf6c9f","$76a7074f99a96ff9$export$f3928063e5e96d35","$76a7074f99a96ff9$export$21e6da8a7375dfe8","$76a7074f99a96ff9$export$ae9d6ed80df710e5","$76a7074f99a96ff9$export$d26945d1ad52feeb","tan","$76a7074f99a96ff9$var$EPSG3857Projection","EPSG3857Projection","point","$76a7074f99a96ff9$var$__extends","$76a7074f99a96ff9$export$b508d7ad9a891c1b","$76a7074f99a96ff9$export$1ff8bb36c0983070","input","opt_output","opt_dimension","dimension","$76a7074f99a96ff9$export$8c71322ec28ed6b4","atan","$a8d3289f17c9fc5c$export$21e6da8a7375dfe8","$a8d3289f17c9fc5c$export$1482081eec883108","$a8d3289f17c9fc5c$var$EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","$a8d3289f17c9fc5c$var$__extends","$a8d3289f17c9fc5c$export$b508d7ad9a891c1b","$da40b318d06423c2$var$cache","$179c64d49a01aab2$var$transforms","$179c64d49a01aab2$export$e16d8520af44a096","destination","sourceCode","destinationCode","$c6d6e605b5d26d36$export$2e2bcd8739ae039","$aa1dd99b260effa5$export$79376507b09a66f","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","$aa1dd99b260effa5$export$cc800923e997bb8","distance","bearing","lon1","dByR","lat","asin","$51d823bbdf131cd1$export$e9bab7fafb253603","coordinate1","coordinate2","equals","$51d823bbdf131cd1$export$bb628a54ab399bc9","cosAngle","sinAngle","$51d823bbdf131cd1$export$39a9ce3624977b84","projection","worldWidth","worldsAway","$51d823bbdf131cd1$export$24e2b27d1ff0c1d5","opt_sourceExtentWidth","projectionExtent","sourceExtentWidth","floor","$ab024e4d016c6799$export$dd516654c5f598fb","$ab024e4d016c6799$export$83e8ab53904f8022","$ab024e4d016c6799$export$59ae956cd3e343f7","$da40b318d06423c2$export$e16d8520af44a096","$ab024e4d016c6799$export$3988ae62b71be9a3","projectionLike","replace","$ab024e4d016c6799$export$2d8f7b4eec383d44","opt_units","pointResolution","getter","toEPSG4326_1","$ab024e4d016c6799$export$e3c4995a701c26a3","vertices","$ab024e4d016c6799$export$eeb8392580a05a37","projections","forEach","$ab024e4d016c6799$export$638ad73f7aafb913","$ab024e4d016c6799$export$549167224996a0fb","defaultCode","$ab024e4d016c6799$export$3fb495868742d370","opt_projection","lonLat","$ab024e4d016c6799$export$51186ad6e864892a","lon","$ab024e4d016c6799$export$fe091d73a555748b","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","$179c64d49a01aab2$export$3988ae62b71be9a3","$ab024e4d016c6799$export$fce0c6cfca85ed96","$ab024e4d016c6799$export$751c68e0e0efff79","projections2","forwardTransform","inverseTransform","$ab024e4d016c6799$var$userProjection","$ab024e4d016c6799$export$3973b77d5f6f2790","$ab024e4d016c6799$export$698f563af1ba02a5","$ab024e4d016c6799$export$d4b8ec0b96db1ee2","destProjection","$ab024e4d016c6799$export$96bfd09e2cffb006","$ab024e4d016c6799$export$494be3a3a25689ca","$ab024e4d016c6799$export$b56bb8ad8b3a00e9","sourceUnits","userUnits","$21b6f7621e6152f7$export$b92b2dedcfff79de","opt_dest","dest","j","$21b6f7621e6152f7$export$bb628a54ab399bc9","anchor","anchorX","anchorY","deltaX","deltaY","k","$76a7074f99a96ff9$exports","PROJECTIONS","$a8d3289f17c9fc5c$exports","fromEPSG4326","toEPSG4326","$0afe4f47eb66e15c$var$tmpTransform","$0afe4f47eb66e15c$export$2e2bcd8739ae039","Geometry","fn","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","opt_transform","applyTransform","nextArgs","$0afe4f47eb66e15c$var$__extends","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","containsXY","coord","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","$6e9c2c40baedc4d3$export$6a4fe494c558c238","rotate","scale","opt_sy","opt_anchor","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","inCoordinates","outCoordinates","pixelExtent","projectedExtent","$b352d83c6adf59d0$var$GeometryCollection","GeometryCollection","opt_geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","$b352d83c6adf59d0$var$__extends","unlistenGeometriesChange_","geometryCollection","setGeometries","geometries","getGeometries","$b352d83c6adf59d0$var$cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","simplifiedGeometry","simplifiedGeometryCollection","setGeometriesArray","isEmpty","$0afe4f47eb66e15c$exports","clonedGeometries","$b352d83c6adf59d0$export$2e2bcd8739ae039","$ce479c64a4dd295f$export$2e2bcd8739ae039","FeatureFormat","dataProjection","defaultFeatureProjection","supportedMediaTypes","getReadOptions","opt_options","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","$ce479c64a4dd295f$export$7beeea566b560d4","write","transformed","decimals","power_1","pow","round","$90cdf935a4cb5f8f$export$2e2bcd8739ae039","$843aafc6e566eea2$var$getObject","JSON","parse","$843aafc6e566eea2$export$2e2bcd8739ae039","JSONFeature","$843aafc6e566eea2$var$__extends","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","$28b3e94032c703ae$export$2e2bcd8739ae039","$5e0cf2909081fcd6$var$SimpleGeometry","SimpleGeometry","layout","$5e0cf2909081fcd6$var$__extends","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","$5e0cf2909081fcd6$export$6af0c1b4a8549a43","setCoordinates","opt_layout","setLayout","nesting","$5e0cf2909081fcd6$var$getLayoutForStride","$21b6f7621e6152f7$export$dcdf75081b88279d","$21b6f7621e6152f7$export$d73ee8ef04f5226a","$5e0cf2909081fcd6$export$a3767472617c7861","simpleGeometry","$5e0cf2909081fcd6$export$2e2bcd8739ae039","$31903856a8cc25f7$var$assignClosest","offset1","offset2","$31903856a8cc25f7$export$bc2eb611ddf80103","squaredDelta","$31903856a8cc25f7$export$fbf31c8f2668ed5a","ends","$31903856a8cc25f7$export$4adc8e5135fb44c","maxDelta","isRing","opt_tmpPoint","squaredDistance","tmpPoint","$31903856a8cc25f7$export$5a48a0eefcf14992","$ec63ebe683e7bd4c$export$5c4daf67e03c190f","$ec63ebe683e7bd4c$export$47c3746a74384d45","coordinatess","opt_ends","jj","$8b376c43ca456b0c$export$ef693d1572e64fb8","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","squaredDistance_1","$8b376c43ca456b0c$export$cedb9900c0b225c2","simplifiedEnds","$8b376c43ca456b0c$export$51a0620f7a28532b","$8b376c43ca456b0c$export$b84e8d2c4920a0c6","$8b376c43ca456b0c$export$60a9904b67f8d51b","$d9ba6d5e24836156$export$4b80e395e36b5a56","ret","$4eebcd7cba5c6cd9$export$9c0934e4e9c3f61e","opt_coordinates","$4eebcd7cba5c6cd9$export$cbb9596fc0f40db2","opt_coordinatess","$4eebcd7cba5c6cd9$export$915c7058aeb4dfeb","endss","opt_coordinatesss","coordinatesss","$2adf10d98c30c9dd$export$687ff82efd78795b","fraction","o","length_1","cumulativeLengths","haystack","needle","opt_comparator","mid","cmp","comparator","low","high","found","$ecf9f00034241bb8$export$2e0ae67339d5f1ac","$2adf10d98c30c9dd$export$8f44c3c220ef6f09","m","extrapolate","lo","hi","m0","$2ffae1bc01dcd8b1$export$cedabedc7ac0e138","$2ffae1bc01dcd8b1$export$949a7a3a4b6f34fa","wn","$2ffae1bc01dcd8b1$export$ae868c0f6acc3355","$409182f2ccbbd4ee$export$40d8d71841a3d779","coordinatesExtent","point1","point2","start","intersects","startRel","endRel","startX","startY","endX","endY","slope","$6e9c2c40baedc4d3$export$a6a5a7a461419425","$409182f2ccbbd4ee$export$76dcd8f8f83b6ddb","$409182f2ccbbd4ee$export$830a0dafbb2ef1c5","$efb91ee92486aa0c$export$153f8c6b4d8caebc","$9026238b70fbe082$export$2e2bcd8739ae039","LineString","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","$9026238b70fbe082$var$__extends","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","opt_extrapolate","getCoordinateAt","getLength","getFlatMidpoint","$5e0cf2909081fcd6$exports","$c82842fd382f9032$var$MultiLineString","MultiLineString","ends_","lineStrings","$c82842fd382f9032$var$__extends","appendLineString","multiLineString","opt_interpolate","interpolate","$2adf10d98c30c9dd$export$6a3300857e9ef453","getEnds","getLineString","$9026238b70fbe082$exports","getLineStrings","getFlatMidpoints","midpoints","$409182f2ccbbd4ee$export$fdb1d8e850bf7937","$c82842fd382f9032$export$2e2bcd8739ae039","$38233aa4318fb3ae$var$Point","Point","$38233aa4318fb3ae$var$__extends","$ec63ebe683e7bd4c$export$60815ead40ec79ab","$38233aa4318fb3ae$export$2e2bcd8739ae039","$6b7c872d1686d77f$var$MultiPoint","MultiPoint","$6b7c872d1686d77f$var$__extends","appendPoint","multiPoint","getPoint","$38233aa4318fb3ae$exports","getPoints","points","$6b7c872d1686d77f$export$2e2bcd8739ae039","$afdd7aad72fbf822$export$3c5e1905f889266e","twiceArea","$afdd7aad72fbf822$export$7a8ee541dfdf2ed5","$f475851524c79c1c$export$2e2bcd8739ae039","LinearRing","$f475851524c79c1c$var$__extends","getArea","$79b41c062bbdd59c$export$50e3b25928a5e892","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","abs","$952c125ffed88db8$export$741858880c96b18c","$037571e3d596db9a$export$318f2842ed17e094","edge","$037571e3d596db9a$export$f27cd06e85f4ba28","opt_right","right","isClockwise","$037571e3d596db9a$export$b71b604ddfc778c7","$037571e3d596db9a$export$ea9ed55fc2a85010","$0820b063c708bfba$var$Polygon","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","$0820b063c708bfba$var$__extends","appendLinearRing","linearRing","polygon","getOrientedFlatCoordinates","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","$f475851524c79c1c$exports","getLinearRings","linearRings","$0820b063c708bfba$export$2e2bcd8739ae039","$0820b063c708bfba$export$f99d756c6d81ae3f","opt_n","opt_sphereRadius","$0820b063c708bfba$export$c16b671815801c75","$0820b063c708bfba$export$2451009d645fb8c2","circle","opt_sides","opt_angle","sides","getCenter","arrayLength","$0820b063c708bfba$export$87d6a1539a56e47f","getRadius","startAngle","$5851bac22e3214dc$var$MultiPolygon","MultiPolygon","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","$5851bac22e3214dc$var$__extends","appendPolygon","newEndss","multiPolygon","$31903856a8cc25f7$export$37c18e6e7d50501a","$31903856a8cc25f7$export$60e067685eb8f9c4","$2ffae1bc01dcd8b1$export$c760d9d16cf92043","$afdd7aad72fbf822$export$78e139679ca7205","getEndss","getFlatInteriorPoints","$7946674c412a82d1$export$78e139679ca7205","interiorPoints","$79b41c062bbdd59c$export$11463803eda8a372","getInteriorPoints","$6b7c872d1686d77f$exports","$037571e3d596db9a$export$a1d138f4bd85f4b4","simplifiedEndss","$8b376c43ca456b0c$export$b9acf67ef05cd17c","getPolygon","prevEnds","$0820b063c708bfba$exports","getPolygons","$409182f2ccbbd4ee$export$77b72fa3792f5bf0","$ec63ebe683e7bd4c$export$f9f2bb59da4accd3","lastEnds","$5851bac22e3214dc$export$2e2bcd8739ae039","$17d970b9a6ec9617$var$GeoJSON","GeoJSON","geometryName","extractGeometryName_","extractGeometryName","$17d970b9a6ec9617$var$__extends","geoJSONFeature","$17d970b9a6ec9617$var$readGeometry","$5bfa5a5ae8f81a5f$exports","geoJSONFeatures","crs","$17d970b9a6ec9617$var$writeGeometry","objects","$843aafc6e566eea2$exports","$17d970b9a6ec9617$var$readPointGeometry","$17d970b9a6ec9617$var$readLineStringGeometry","$17d970b9a6ec9617$var$readPolygonGeometry","$17d970b9a6ec9617$var$readMultiPointGeometry","$c82842fd382f9032$exports","$17d970b9a6ec9617$var$readMultiLineStringGeometry","$5851bac22e3214dc$exports","$17d970b9a6ec9617$var$readMultiPolygonGeometry","map","$b352d83c6adf59d0$exports","$17d970b9a6ec9617$var$readGeometryCollectionGeometry","geoJSON","$17d970b9a6ec9617$var$writePointGeometry","$17d970b9a6ec9617$var$writeLineStringGeometry","rightHanded","$17d970b9a6ec9617$var$writePolygonGeometry","$17d970b9a6ec9617$var$writeMultiPointGeometry","$17d970b9a6ec9617$var$writeMultiLineStringGeometry","$17d970b9a6ec9617$var$writeMultiPolygonGeometry","geometry1","$17d970b9a6ec9617$var$writeGeometryCollectionGeometry","$17d970b9a6ec9617$export$2e2bcd8739ae039","$25afcf5ad39521a5$var$HEX_COLOR_RE_","$25afcf5ad39521a5$var$NAMED_COLOR_RE_","$25afcf5ad39521a5$export$590567be997858b6","color","$25afcf5ad39521a5$export$f84e8e69fd4488a5","$25afcf5ad39521a5$var$fromNamed","el","body","appendChild","rgb","getComputedStyle","removeChild","cache","cacheSize","$25afcf5ad39521a5$export$3004f64547af360e","s","g","exec","hasAlpha","parseInt","substr","$25afcf5ad39521a5$export$a3295358bff77e","Number","$25afcf5ad39521a5$var$fromStringInternal_","$25afcf5ad39521a5$export$75093a47a9fa838d","$441aa5b886fde9e2$var$IconImageCache","IconImageCache","cache_","cacheSize_","maxCacheSize_","clear","canExpireCache","expire","iconImage","src","crossOrigin","$441aa5b886fde9e2$var$getKey","setSize","maxCacheSize","$441aa5b886fde9e2$export$747ccdf771a87ab8","$94f1d2f94f2b7df1$export$2e2bcd8739ae039","$5e576ff631195774$export$2e2bcd8739ae039","BaseLayer","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","$5e576ff631195774$var$__extends","getClassName","getLayerState","opt_managed","state","layer","managed","getOpacity","sourceState","getSourceState","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","opt_array","getLayerStatesArray","opt_states","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","$c530d450826284e6$export$2e2bcd8739ae039","$9376a23ada44155c$export$2e2bcd8739ae039","$daf70f87a90139ea$export$acb1e9cb9ce4ca56","layerState","viewState","zoom","$daf70f87a90139ea$export$2e2bcd8739ae039","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","setMap","handleSourcePropertyChange_","setSource","$daf70f87a90139ea$var$__extends","array","states","getSource","getState","handleSourceChange_","getFeatures","pixel","Promise","resolve","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","layerStatesArray","some","arrayLayerState","createRenderer","hasRenderer","$5e576ff631195774$exports","$bc5a53b0fb3ae156$var$MapRenderer","MapRenderer","map_","$bc5a53b0fb3ae156$var$__extends","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","thisArg","layerFilter","thisArg2","result","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","i1","layer1","$daf70f87a90139ea$exports","inView","getWrapX","callback_1","order","distanceSq","forEachLayerAtPixel","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","$bc5a53b0fb3ae156$var$expireIconCache","$bc5a53b0fb3ae156$export$2e2bcd8739ae039","$70dabfea60f9a914$export$2e2bcd8739ae039","RenderEvent","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","$70dabfea60f9a914$var$__extends","$dc26ebbc966027e7$var$fontRegEx","RegExp","$dc26ebbc966027e7$var$fontRegExMatchIndex","$dc26ebbc966027e7$export$5abde8a6aec4a131","fontSpec","match","lineHeight","weight","variant","families","family","$dc26ebbc966027e7$export$52ec625a6a53b6a6","$7ded474b40b0baaa$export$9e05d10eae75c464","opt_width","opt_height","opt_canvasPool","opt_Context2DSettings","canvas","shift","all","getContext","$7ded474b40b0baaa$export$5542201de9311ab2","newNode","oldNode","parent","parentNode","replaceChild","$7ded474b40b0baaa$export$1d0aa160432dfea5","$42fd7bfc292637fd$export$e21b4112fdc612fc","$42fd7bfc292637fd$export$40a9eeef55665a40","$42fd7bfc292637fd$export$1d36981fcadac93b","console","warn","$42fd7bfc292637fd$var$measureFont","measureElement","$42fd7bfc292637fd$var$measureContext","$42fd7bfc292637fd$export$7fdcec604f0b1fa7","$42fd7bfc292637fd$export$a534074a28fa87ff","interval","referenceWidth","referenceFonts","text","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","$42fd7bfc292637fd$export$4ea92329b673abd1","check","done","fonts","font","clearInterval","setInterval","$42fd7bfc292637fd$export$4feaf6852ff92513","metrics","$42fd7bfc292637fd$var$measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","padding","border","position","display","left","offsetHeight","measureText","$42fd7bfc292637fd$export$915c7ba51467308f","$42fd7bfc292637fd$export$3cb6f3a6e49cc0ee","labelOrImage","originX","originY","w","h","save","globalAlpha","setTransform","contextInstructions","label","$42fd7bfc292637fd$var$executeLabelInstructions","drawImage","restore","$1b29c9925ee5c6bf$var$CompositeMapRenderer","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","$dc26ebbc966027e7$export$1afde3d6e16a7b29","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","$1b29c9925ee5c6bf$var$__extends","event_1","$70dabfea60f9a914$exports","declutterLayers","previousElement","layerIndex","element","renderDeclutter","children","oldChildren","childNodes","oldChild","newChild","$7ded474b40b0baaa$export$caeacfe04f52533a","getDataAtPixel","$bc5a53b0fb3ae156$exports","$1b29c9925ee5c6bf$export$2e2bcd8739ae039","$1e0673079172f5f7$export$2e2bcd8739ae039","$d1622a899ef2b89d$var$Property","$d1622a899ef2b89d$export$a87ae6eb2761ec6d","CollectionEvent","opt_element","opt_index","$d1622a899ef2b89d$var$__extends","$d1622a899ef2b89d$var$Collection","Collection","unique_","unique","array_","assertUnique_","updateLength_","extend","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","opt_except","$d1622a899ef2b89d$export$2e2bcd8739ae039","$172d9d3c17b8a7cf$var$Property","$172d9d3c17b8a7cf$var$LayerGroup","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","$d1622a899ef2b89d$exports","setLayers","$172d9d3c17b8a7cf$var$__extends","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","defaultZIndex","$172d9d3c17b8a7cf$export$2e2bcd8739ae039","$cf13847418ad81e4$export$2e2bcd8739ae039","MapEvent","$cf13847418ad81e4$var$__extends","$0f03dccd42bf4d1e$export$2e2bcd8739ae039","MapBrowserEvent","originalEvent","opt_dragging","pixel_","coordinate_","dragging","$0f03dccd42bf4d1e$var$__extends","getEventPixel","getCoordinateFromPixel","$cf13847418ad81e4$exports","$fb658c031c1464b5$export$2e2bcd8739ae039","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","$71df73cffc88db67$export$2e2bcd8739ae039","$281cc530eea9c034$export$2e2bcd8739ae039","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayEvent_","boundHandleTouchMove_","handleTouchMove_","$281cc530eea9c034$var$__extends","emulateClick_","pointerEvent","newEvent1","$0f03dccd42bf4d1e$exports","clearTimeout","setTimeout","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","$817cf70c7fced468$export$2e2bcd8739ae039","$3cd308c60d7fd495$export$2e2bcd8739ae039","$5d43589485999ca2$var$PriorityQueue","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","$5d43589485999ca2$export$2e2bcd8739ae039","$17cb619e19250002$export$2e2bcd8739ae039","$0b27eaaca4255715$export$2e2bcd8739ae039","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","$0b27eaaca4255715$var$__extends","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","load","$0b27eaaca4255715$export$f08ad5eceeff5d45","tileSourceKey","tileCenter","tileResolution","wantedTiles","$a361b46708fdc9d9$export$2e2bcd8739ae039","$71f8bfc50f37b5a5$export$2e2bcd8739ae039","$b443e201cef53f60$export$c2f0af2c946f6897","onlyCenter","smooth","opt_isMoving","opt_centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","$b443e201cef53f60$export$f883a24d5edde77c","$03956f22a9281048$var$getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","$03956f22a9281048$var$getSmoothClampedResolution","$03956f22a9281048$export$1c4e6da9b4b066fe","opt_smooth","opt_maxExtent","opt_showFullExtent","cappedMaxRes","$b430471dc36859e7$export$e20fbacbb41798b","$b430471dc36859e7$export$f883a24d5edde77c","$29c6f6d78bb4f447$export$929e5a82286172a6","$29c6f6d78bb4f447$export$57636bb43b1ccbb0","$29c6f6d78bb4f447$export$9b47139b511b56e4","$29c6f6d78bb4f447$export$45db2fc2f15997e7","$372db372bb1eafd9$var$View","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","$372db372bb1eafd9$var$__extends","resolutionConstraintInfo","$372db372bb1eafd9$export$c68d65f9148da196","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","resolutions","padding_","minZoom_","centerConstraint","$372db372bb1eafd9$export$964345001ee9ac52","resolutionConstraint","constraint","rotationConstraint","$372db372bb1eafd9$export$4eeaa08dd550e3c0","constraints_","setRotation","setCenterInternal","setResolution","setZoom","options_","oldPadding","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getCenterInternal","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","getProjection","animateInternal","animationCount","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","$372db372bb1eafd9$export$ee75376562060184","setHint","updateAnimations_","$372db372bb1eafd9$var$animationCallback","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","opt_rotation","setViewportSize","opt_size","getConstraints","getConstrainResolution","constrainResolution","getHints","opt_hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","opt_power","power","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","$372db372bb1eafd9$var$calculateCenterOn","nextCenter","nextResolution","nextRotation","nearest","baseLevel","fit","geometryOrExtent","fromExtent","userProjection","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","centerShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","isMoving","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","opt_doNotCancelAnims","opt_forceMoving","newCenter","opt_duration","opt_resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","opt_targetResolution","getConstrainedZoom","targetZoom","opt_direction","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","smoothResolutionConstraint","projExtent","capped","z","$03956f22a9281048$export$d65a517690fc4385","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","opt_minResolution","minZoomLevel","ceil","cappedZoomLevel","zoomLevel","$03956f22a9281048$export$22ac0f6b219de91a","theta","opt_tolerance","enableRotation","constrainRotation","$372db372bb1eafd9$export$2e2bcd8739ae039","$1531430a06fcb879$export$622c471beb1693c7","$1531430a06fcb879$export$a71a825ff42fb8e1","$31cb24803e978fe2$var$PluggableMap","PluggableMap","optionsInternal","keyboardEventTarget","getElementById","controls","interactions","overlays","layerGroup","$172d9d3c17b8a7cf$exports","view","$372db372bb1eafd9$exports","$31cb24803e978fe2$var$createOptionsInternal","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","renderFrame_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","pointerEvents","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyHandlerKeys_","overlays_","overlayIdIndex_","handleResize_","postRenderFunctions_","tileQueue_","$0b27eaaca4255715$exports","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","then","viewOptions","setView","addOverlayInternal_","toString","control","interaction","$31cb24803e978fe2$var$__extends","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","addOverlay","overlay","getOverlays","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","top","getTarget","getTargetElement","getView","getOverlayById","group","collection","getLoading","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getSize","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","rootNode","contains","documentElement","interactionsArray","getActive","handlePostRender","tileQueue","hints","viewHints","lowOnFrameBudget","time","$281cc530eea9c034$exports","updateSize","handleViewPropertyChanged_","updateViewportSize_","isRendered","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","nextExtent","setLayerGroup","computedStyle","offsetWidth","parseFloat","getClientRects","$31cb24803e978fe2$export$2e2bcd8739ae039","$0253f2b24e351864$var$Control","Control","target_","listenerKeys","$0253f2b24e351864$var$__extends","mapEvent","$0253f2b24e351864$export$2e2bcd8739ae039","$6fe94588175e6cb7$var$Attribution","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","$6fe94588175e6cb7$var$__extends","collectSourceAttributions_","lookup","visibleAttributions","attributionGetter","getAttributions","attributions","getAttributionsCollapsible","setCollapsible","updateElement_","lastChild","$7ded474b40b0baaa$export$1e1c9bf5a4ffe0d1","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","$0253f2b24e351864$exports","$6fe94588175e6cb7$export$2e2bcd8739ae039","$aaeae4cd33e8d58d$export$2e2bcd8739ae039","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","$aaeae4cd33e8d58d$var$__extends","resetNorth_","$fbc1f81ea5c00c4e$export$2e2bcd8739ae039","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","$fbc1f81ea5c00c4e$var$__extends","zoomByDelta_","currentZoom","newZoom","$5b835091c3080d77$export$2e2bcd8739ae039","$df068c7e331712e2$export$4c486572e961a974","$df068c7e331712e2$export$ace321ff2a8016ef","$df068c7e331712e2$export$2e2bcd8739ae039","Interaction","setActive","$df068c7e331712e2$var$__extends","active","$bd48761daa50c7e6$export$2e2bcd8739ae039","DoubleClickZoom","delta_","$bd48761daa50c7e6$var$__extends","stopEvent","shiftKey","$df068c7e331712e2$exports","zoomByDelta","$d6505b91813fc3f5$export$e2a20c553f6c85ce","$d6505b91813fc3f5$export$2e2bcd8739ae039","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","$d6505b91813fc3f5$var$__extends","getPointerCount","updateTrackedPointers_","handledUp","handled","$d6505b91813fc3f5$var$isPointerDraggingEvent","$d973e6b915d17568$export$84bf76cd7afc7469","conditions","pass","$d973e6b915d17568$export$4e5f01653f9f1f82","altKey","metaKey","ctrlKey","$d973e6b915d17568$export$ae2cdf064e3b0c55","hasAttribute","activeElement","$d973e6b915d17568$export$d7ddd398f22d79ef","$d973e6b915d17568$export$ba9e5d519bc326ca","$d973e6b915d17568$export$1238ad6b5e7fff70","$d973e6b915d17568$export$b3e22bcfd64c1022","$d973e6b915d17568$export$194df8bad091b401","$d973e6b915d17568$export$fdc892d0d8fe3bfb","$d973e6b915d17568$export$5d31fe68a477cfbb","$d973e6b915d17568$export$e5570ca80cd8fd54","tagName","$d973e6b915d17568$export$abb7acbfa76bf3c4","pointerType","$d973e6b915d17568$export$189f0d593022b199","isPrimary","$5521bddb94963dca$export$2e2bcd8739ae039","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","$5521bddb94963dca$var$__extends","centroid","$d6505b91813fc3f5$exports","update","getDistance","getAngle","centerpx","$7d6b553d2ecb7aae$export$2e2bcd8739ae039","DragRotate","lastAngle_","$7d6b553d2ecb7aae$var$__extends","$34a0103a786d0203$export$2e2bcd8739ae039","RenderBox","geometry_","startPixel_","endPixel_","$34a0103a786d0203$var$__extends","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","$334ba95f02e91fbd$var$DragBoxEventType","$334ba95f02e91fbd$export$7053c33c051365ea","DragBoxEvent","$334ba95f02e91fbd$var$__extends","$334ba95f02e91fbd$export$2e2bcd8739ae039","DragBox","box_","$34a0103a786d0203$exports","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","$162bbdfaa4217272$export$2e2bcd8739ae039","DragZoom","out_","out","$162bbdfaa4217272$var$__extends","factor","$334ba95f02e91fbd$exports","$19219b8b46072706$export$2e2bcd8739ae039","$1f555de77a644a36$export$2e2bcd8739ae039","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","$1f555de77a644a36$var$__extends","keyEvent","keyCode","mapUnitsDelta","pan","$b71cdf9bb745a80a$export$2e2bcd8739ae039","KeyboardZoom","$b71cdf9bb745a80a$var$__extends","charCode","charCodeAt","$f97918a95109ec86$export$2e2bcd8739ae039","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","$7ed4d731203fa277$export$9484bbecc3c49a2e","TRACKPAD","WHEEL","$7ed4d731203fa277$export$2e2bcd8739ae039","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","$7ed4d731203fa277$var$__extends","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","$4b86d14a22d71de2$export$2e2bcd8739ae039","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","$4b86d14a22d71de2$var$__extends","rotationDelta","touch0","touch1","$ac04ae0f56a0dede$export$2e2bcd8739ae039","PinchZoom","lastDistance_","lastScaleDelta_","$ac04ae0f56a0dede$var$__extends","scaleDelta","$b4714ca7c8215c38$export$2e2bcd8739ae039","$e745fbc69f624ade$export$2e2bcd8739ae039","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","getScale","getRotateWithView","getDisplacement","getScaleArray","getAnchor","getImage","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","setRotateWithView","setScale","listenImageChange","unlistenImageChange","$4dc75ca2079b145c$export$dc5b1400ac3a10a8","$bd6465822d76b84c$var$RegularShape","RegularShape","canvas_","hitDetectionCanvas_","fill_","fill","origin_","radius_","radius1","radius2_","radius2","stroke_","stroke","size_","renderOptions_","$bd6465822d76b84c$var$__extends","getFill","getRadius2","getStroke","createHitDetectionCanvas_","image","renderOptions","draw_","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","alpha","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineDash","lineDashOffset","getColor","getWidth","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","maxRadius","createPath_","fillStyle","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","step","angle0","radiusC","lineTo","closePath","$bd6465822d76b84c$export$2e2bcd8739ae039","$2ec68ca3661f8eec$export$2e2bcd8739ae039","CircleStyle","$2ec68ca3661f8eec$var$__extends","setRadius","$bd6465822d76b84c$exports","$699098f8ad6aec62$export$2e2bcd8739ae039","Fill","color_","setColor","$78385b27df2567ec$export$2e2bcd8739ae039","Stroke","lineCap_","lineCap","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","getLineCap","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","$87a6c33cb088ca70$var$Style","Style","geometryFunction_","$87a6c33cb088ca70$var$defaultGeometryFunction","image_","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setFill","setImage","setStroke","setText","$87a6c33cb088ca70$var$defaultStyles","$87a6c33cb088ca70$export$6865c5ac2f5ce8b6","$2ec68ca3661f8eec$exports","$87a6c33cb088ca70$export$2e2bcd8739ae039","$60c00a18ac32f0c2$var$SelectEventType","$60c00a18ac32f0c2$export$1bcc516ebf36ffe2","SelectEvent","selected","deselected","$60c00a18ac32f0c2$var$__extends","$60c00a18ac32f0c2$var$originalFeatureStyles","$60c00a18ac32f0c2$var$Select","Select","styles","boundAddFeature_","addFeature_","boundRemoveFeature_","removeFeature_","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","white","blue","$87a6c33cb088ca70$export$ed1eaede5d0e77ac","features_","layers_1","layerFilter_","featureLayerAssociation_","addFeatureLayerAssociation_","getHitTolerance","getLayer","setHitTolerance","restorePreviousStyle_","applySelectedStyle_","lastIndexOf","removeFeatureLayerAssociation_","feature1","$60c00a18ac32f0c2$export$2e2bcd8739ae039","$da3c6f26ad25f5e5$export$2e2bcd8739ae039","Map","$fbc1f81ea5c00c4e$exports","zoomOptions","$aaeae4cd33e8d58d$exports","rotateOptions","attribution","$6fe94588175e6cb7$exports","attributionOptions","$c08bc411c2f7652d$export$ebe90cb607ad99e","altShiftDragRotate","$7d6b553d2ecb7aae$exports","doubleClickZoom","$bd48761daa50c7e6$exports","zoomDelta","zoomDuration","dragPan","$5521bddb94963dca$exports","pinchRotate","$4b86d14a22d71de2$exports","pinchZoom","$ac04ae0f56a0dede$exports","keyboard","$1f555de77a644a36$exports","$b71cdf9bb745a80a$exports","mouseWheelZoom","$7ed4d731203fa277$exports","shiftDragZoom","$162bbdfaa4217272$exports","$ccf0c7a17348fff8$export$ebe90cb607ad99e","$da3c6f26ad25f5e5$var$__extends","$1b29c9925ee5c6bf$exports","$31cb24803e978fe2$exports","$f1538e9992d48ee3$exports","n1","_maxEntries","_minEntries","e1","a1","h1","p1","o1","leaf","s1","l1","f1","u1","m1","d1","h2","u","p","t2","_all","search","toBBox","collides","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","define","amd","RBush","$7655387df8e4018f$var$RBush","opt_maxEntries","rbush_","$parcel$interopDefault","items_","extents","items","uid","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","$7655387df8e4018f$export$2e2bcd8739ae039","$124fe04b3823a0d1$var$adaptAttributions","attributionLike","$124fe04b3823a0d1$export$2e2bcd8739ae039","Source","attributions_","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","viewResolver","viewRejector","viewPromise_","reject","$124fe04b3823a0d1$var$__extends","getContextOptions","refresh","setAttributions","setState","$2b9c741835e514d8$export$2e2bcd8739ae039","$1dcde3bf973ca69b$export$84bf76cd7afc7469","$ef53cd2221bd6ee5$var$withCredentials","$ef53cd2221bd6ee5$export$14cc81df70b6707e","url","format","success","failure","xhr","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","response","onerror","send","$ef53cd2221bd6ee5$export$441d7b57adab24d0","addFeatures","$ee8a617f6b991801$export$d402fd02dc2b661c","VectorSourceEvent","opt_feature","opt_features","$ee8a617f6b991801$var$__extends","$ee8a617f6b991801$var$VectorSource","VectorSource","loader_","format_","overlaps_","overlaps","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getOverlaps","getUrl","sid","removeFromIdIndex_","hasFeature","loadFeatures","loadedExtentsRtree","extentsToLoad","_loop_1","extentToLoad","this_1","removeLoadedExtent","removed","setLoader","setUrl","$124fe04b3823a0d1$exports","$ee8a617f6b991801$export$2e2bcd8739ae039","$3e10cf8a87a9c75b$export$2e2bcd8739ae039","$b9fbd5f4a93e4110$export$2e2bcd8739ae039","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","$b9fbd5f4a93e4110$var$__extends","getPreload","getUseInterimTilesOnError","$8ea4bf835af0b6e3$export$2e2bcd8739ae039","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","$8ea4bf835af0b6e3$var$__extends","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","renderIfReadyAndVisible","loadImage","imageState","$bbdea363382e4968$export$2e2bcd8739ae039","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","containerReused","$bbdea363382e4968$var$__extends","useContainer","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","renderPixel","layerExtent","newCanvas","newContext","clearRect","getImageData","err","Uint8Array","$8ea4bf835af0b6e3$exports","$ab2be06f6b89441a$var$TileRange","TileRange","containsTileRange","getHeight","$ab2be06f6b89441a$export$958e3e1a02eac4b6","$ab2be06f6b89441a$export$2e2bcd8739ae039","$b099118b778b9320$var$CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","$b099118b778b9320$var$__extends","isDrawableTile","tileState","getTile","getInterimTile","viewResolution","viewCenter","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","zDirection","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","tmpTileRange","inTransition","getAlpha","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","transition","i_1","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","gutter","getTileImage","alphaChanged","endTransition","frameState1","tileSource1","postRenderFunction","expireCache","opt_tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","$bbdea363382e4968$exports","$b099118b778b9320$export$2e2bcd8739ae039","$449890c6937bf05e$export$2e2bcd8739ae039","TileLayer","$449890c6937bf05e$var$__extends","$b099118b778b9320$exports","$b9fbd5f4a93e4110$exports","$233f4a241cd6f1da$var$Property","$233f4a241cd6f1da$export$2e2bcd8739ae039","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","$233f4a241cd6f1da$var$__extends","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleFunction","$87a6c33cb088ca70$export$c314ea3f6b164147","$83b80126cb5b0215$var$Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","$83b80126cb5b0215$export$f21891651e408226","$83b80126cb5b0215$export$7a98aa5364d62ba8","$83b80126cb5b0215$export$9f746cc58a899a00","$83b80126cb5b0215$export$89b10f327e413e71","$83b80126cb5b0215$export$2e2bcd8739ae039","$bff206314e761f2d$export$2e2bcd8739ae039","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","opt_declutterImageWithText","setTextStyle","textStyle","$906d055d1cc9728d$var$CanvasBuilder","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","$906d055d1cc9728d$var$__extends","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderEndss","builderBegin","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","fillInstruction","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","$906d055d1cc9728d$export$2e2bcd8739ae039","$1db580ffbfe1573a$export$2e2bcd8739ae039","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","$1db580ffbfe1573a$var$__extends","myBegin","opt_sharedData","hitDetectionImage","origin","$906d055d1cc9728d$exports","$00a5e55ce40bd6cf$var$CanvasLineStringBuilder","CanvasLineStringBuilder","$00a5e55ce40bd6cf$var$__extends","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","$00a5e55ce40bd6cf$export$2e2bcd8739ae039","$70020585b8b05c70$var$CanvasPolygonBuilder","CanvasPolygonBuilder","$70020585b8b05c70$var$__extends","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","$70020585b8b05c70$export$2e2bcd8739ae039","$92d4995d229faa08$export$2e2bcd8739ae039","$b022c8a2fa43f1cc$export$ed6c897eea07a254","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","$59e4dc2734e97a0b$export$91a016276e4aee96","middle","hanging","alphabetic","ideographic","bottom","$59e4dc2734e97a0b$var$CanvasTextBuilder","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","$59e4dc2734e97a0b$var$__extends","fillState","strokeState","textState","geometryType","placement","geometryWidths","beg_1","keep","saveTextStates_","backgroundFill","backgroundStroke","p0","p2","p3","pixelRatio_1","textAlign","flatOffset","flatEnd","oo","range","drawChars_","strokeKey","textKey","textBaseline","fillKey","baseline","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","$59e4dc2734e97a0b$export$2e2bcd8739ae039","$79390ed7e144c6b3$var$BATCH_CONSTRUCTORS","Circle","$70020585b8b05c70$exports","Default","$1db580ffbfe1573a$exports","$00a5e55ce40bd6cf$exports","Text","$59e4dc2734e97a0b$exports","$79390ed7e144c6b3$export$2e2bcd8739ae039","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","$4e8182639fc1b4f4$export$2e2bcd8739ae039","$07e4e915df48a003$export$153a9a17ab3e949f","startM","measureAndCacheTextWidth","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","previousAngle","singleSegment","iStart","charLength","chars","substring","$0018ed6ab3ca970b$var$tmpExtent","$0018ed6ab3ca970b$var$p1","$0018ed6ab3ca970b$var$p2","$0018ed6ab3ca970b$var$p3","$0018ed6ab3ca970b$var$p4","$0018ed6ab3ca970b$var$getDeclutterBox","replayImageOrLabelArgs","declutterBox","$0018ed6ab3ca970b$var$rtlRegEx","fromCharCode","$0018ed6ab3ca970b$var$horizontalTextAlign","align","test","TEXT_ALIGN","$0018ed6ab3ca970b$var$Executor","Executor","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","lines","numLines","widths","currentWidth","$42fd7bfc292637fd$export$a539decdd6096c57","renderWidth","OffscreenCanvasRenderingContext2D","CanvasRenderingContext2D","leftRight","replayTextBackground_","p4","strokeInstruction","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","drawLabelWithPointPlacement_","execute_","opt_featureCallback","opt_hitExtent","opt_declutterTree","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","currentGeometry","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","declutterImageWithText","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","ii_1","execute","executeHitDetection","$0018ed6ab3ca970b$export$2e2bcd8739ae039","$9d0d65645f8c8094$var$ORDER","$9d0d65645f8c8094$var$ExecutorGroup","ExecutorGroup","allInstructions","opt_renderBuffer","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","hitExtent","indexes","$9d0d65645f8c8094$var$circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","$9d0d65645f8c8094$export$96fc84ea21b8269f","featureCallback","imageData","idx","result_1","executor","opt_builderTypes","builderTypes","$9d0d65645f8c8094$export$2e2bcd8739ae039","$5c603051595c0108$var$CanvasImmediateRenderer","CanvasImmediateRenderer","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","$5c603051595c0108$var$__extends","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","transformGeom2D","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imageAnchor","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","$5c603051595c0108$export$2e2bcd8739ae039","$2b8efb29cc68abed$export$2e2bcd8739ae039","$ed108053bd0a2446$export$2e2bcd8739ae039","$bff26cb8dd85843e$export$2e2bcd8739ae039","ImageBase","$bff26cb8dd85843e$var$__extends","$2a4516497f4af408$export$bc96ecc7c2a50764","loadHandler","errorHandler","img","promise","listening_1","catch","ImageWrapper","imageLoadFunction","src_","unlisten_","imageLoadFunction_","$2a4516497f4af408$var$__extends","handleImageError_","unlistenImage_","handleImageLoad_","$bff26cb8dd85843e$exports","$0d77d75a1ee6ddd3$var$taintedTestContext","$0d77d75a1ee6ddd3$var$IconImage","IconImage","imageState_","tainted_","$0d77d75a1ee6ddd3$var$__extends","isTainted_","dispatchChangeEvent_","replaceColor_","fillRect","getSrc","$2a4516497f4af408$exports","listenImage","ctx","globalCompositeOperation","imgData","putImageData","$0d77d75a1ee6ddd3$export$3988ae62b71be9a3","$d1aa9153b1dac91e$export$2e2bcd8739ae039","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","$0d77d75a1ee6ddd3$exports","offset_","offsetOrigin_","offsetOrigin","$d1aa9153b1dac91e$var$__extends","setAnchor","iconImageSize","$16e9f75d8b6d681c$var$GEOMETRY_RENDERERS","builderGroup","opt_declutterBuilderGroup","imageReplay","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","$16e9f75d8b6d681c$export$531ddd8416d52dfc","feature2","$16e9f75d8b6d681c$export$bdacc5b475012edb","$16e9f75d8b6d681c$export$36f470a33a42f413","$16e9f75d8b6d681c$var$renderGeometry","$16e9f75d8b6d681c$var$renderFeatureInternal","$4c04b301d9337902$var$CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","clipping","$4c04b301d9337902$var$__extends","renderWorlds","executorGroup","vectorSource","endWorld","world","$9a68deaf29eb7021$export$3e4e33ea14aeb531","clipped","transforms","imageSmoothingEnabled","$5c603051595c0108$exports","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","originalStyle","imgContext","$d1aa9153b1dac91e$exports","byGeometryType","zIndexKeys","geomAndStyle","kk","$228839419cfa9dca$export$bd05e394339d469","resultFeatures","$228839419cfa9dca$export$6d4d555ddbfffa32","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","$6e9c2c40baedc4d3$export$39a9ce3624977b84","declutterBuilderGroup","userTransform","userExtent_1","$16e9f75d8b6d681c$export$75084a70d324c1e6","dirty","renderFeature","userExtent","replayGroupInstructions","$4c04b301d9337902$export$2e2bcd8739ae039","$803034a67506fc0e$export$2e2bcd8739ae039","VectorLayer","$803034a67506fc0e$var$__extends","$4c04b301d9337902$exports","$233f4a241cd6f1da$exports","$2bdfaf37469c625f$export$2e2bcd8739ae039","Tile","interimTile","transition_","transitionStarts_","$2bdfaf37469c625f$var$__extends","release","refreshInterimChain","getTileCoord","$dcb54584119be9f9$export$2e2bcd8739ae039","ImageTile","tileLoadFunction","tileLoadFunction_","$dcb54584119be9f9$var$__extends","naturalWidth","naturalHeight","$2bdfaf37469c625f$exports","$5196f19b885199f3$var$brokenDiagonalRendering_","$3346793e0e9bd27c$export$2e2bcd8739ae039","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","opt_destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","addQuad_","leftBound_1","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isFinite","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","$3a621e35d57a6dfe$export$ab6c91696bd3263e","msImageSmoothingEnabled","$5196f19b885199f3$var$drawTestTriangle","v1","u2","v2","$5196f19b885199f3$var$verifyBrokenDiagonalRendering","$5196f19b885199f3$export$5fbb958059b7e71f","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","$5196f19b885199f3$export$b3890eb0ae9dca99","triangulation","sources","opt_renderEdges","opt_contextOptions","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","$ad67a80bd590adc8$export$8240f01c446270e6","$5196f19b885199f3$var$isBrokenDiagonalRendering","ud","vd","steps","$4654efc21da0fd54$export$2e2bcd8739ae039","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","contextOptions_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","$5196f19b885199f3$export$16d356211d01f1cc","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","$4654efc21da0fd54$var$__extends","reproject_","getTileSize","leftToLoad_1","state1","sourceListenKey_1","unlistenSources_","$e9609137bb57fc04$var$LRUCache","LRUCache","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","$e9609137bb57fc04$export$2e2bcd8739ae039","$f98984479a3a373c$export$958e3e1a02eac4b6","opt_tileCoord","$f98984479a3a373c$export$92d0df0f1d25c63c","$f98984479a3a373c$export$a47fb462a08de82f","$2826729be38ea713$export$2e2bcd8739ae039","TileCache","$2826729be38ea713$var$__extends","pruneExceptNewestZ","$f98984479a3a373c$export$a807b7874eb66454","$70566066727e45de$export$2e2bcd8739ae039","$238bdbed35ee6c2b$var$tmpTileCoord","$238bdbed35ee6c2b$var$TileGrid","TileGrid","opt_strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileRangeExtent","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","getTileCoordResolution","getFullTileRange","fullTileRanges","$238bdbed35ee6c2b$export$2e2bcd8739ae039","$fc48a08ae8a90af8$export$1f4812384df8a9c5","opt_maxZoom","opt_tileSize","opt_corner","$fc48a08ae8a90af8$var$resolutionsFromExtent","$fc48a08ae8a90af8$export$ce88871416242df8","$fc48a08ae8a90af8$export$7b5b6ef8fd55fac4","$fc48a08ae8a90af8$export$a251b12f5601c16f","opt_maxResolution","half","$593871892a2c101c$var$TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","$2826729be38ea713$exports","tmpSize","tileOptions","$593871892a2c101c$var$__extends","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","$fc48a08ae8a90af8$export$39a9ce3624977b84","$f98984479a3a373c$export$60bedf8e3e3c3dbe","$593871892a2c101c$export$c571855c51e6c4b6","TileSourceEvent","$593871892a2c101c$export$2e2bcd8739ae039","$aeb5328ce464660f$export$f0ecb46e90798741","template","zRegEx","xRegEx","yRegEx","dashYRegEx","$aeb5328ce464660f$export$436f44dbcc31fea3","templates","tileUrlFunctions","$f98984479a3a373c$export$d6af199866bfb566","$aeb5328ce464660f$export$4229b1d9af69b3be","$bd1c763129ac0ebc$var$UrlTile","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","tileLoadingKeys_","$bd1c763129ac0ebc$var$__extends","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","$593871892a2c101c$exports","setTileLoadFunction","setTileUrlFunction","startCharCode","stopCharCode","stop_1","$aeb5328ce464660f$export$2a1fa079bfd73dde","$bd1c763129ac0ebc$export$2e2bcd8739ae039","$376392de2838aa74$var$TileImage","TileImage","$376392de2838aa74$var$defaultTileLoadFunction","tileClass","$dcb54584119be9f9$exports","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","imageSmoothing","renderReprojectionEdges_","$376392de2838aa74$var$__extends","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","z1","pixelRatio1","newTile","$4654efc21da0fd54$exports","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","$bd1c763129ac0ebc$exports","imageTile","$376392de2838aa74$export$2e2bcd8739ae039","$78baeb7a0deea579$export$2e2bcd8739ae039","XYZ","xyzOptions","gridOptions","$fc48a08ae8a90af8$export$38500bbeccc864ff","$78baeb7a0deea579$var$__extends","$376392de2838aa74$exports","$f976bf797198355a$var$vectorSource1","$ee8a617f6b991801$exports","$17d970b9a6ec9617$exports","$f976bf797198355a$var$vectorSource2","$f976bf797198355a$var$vectorSource3","$f976bf797198355a$var$vectorSource4","$f976bf797198355a$var$vectorLayer","$803034a67506fc0e$exports","$f976bf797198355a$var$map","$da3c6f26ad25f5e5$exports","$449890c6937bf05e$exports","$78baeb7a0deea579$exports","$f976bf797198355a$var$select","$60c00a18ac32f0c2$exports","$f976bf797198355a$var$selectedFeatures","$f976bf797198355a$var$dragBox","oblique","candidateFeatures","$f976bf797198355a$var$infoBox","names","custom","$f976bf797198355a$var$currZoom","$f976bf797198355a$var$wrapLon"],"version":3,"file":"index.582856a7.js.map"}